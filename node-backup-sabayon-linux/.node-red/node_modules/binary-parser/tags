!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
API	README.md	/^## API$/;"	f
APP0	example/jpg.js	/^var APP0 = Parser.start()$/;"	v
BIT_RANGE	lib/binary_parser.js	/^var BIT_RANGE = [];$/;"	v
Binary-parser	README.md	/^# Binary-parser$/;"	f
COM	example/jpg.js	/^var COM = Parser.start()$/;"	v
ClassFile	example/classfile.js	/^var ClassFile =$/;"	v
Common options	README.md	/^### Common options$/;"	f
ConstantClassInfo	example/classfile.js	/^var ConstantClassInfo =$/;"	v
ConstantDoubleInfo	example/classfile.js	/^var ConstantDoubleInfo =$/;"	v
ConstantFieldrefInfo	example/classfile.js	/^var ConstantFieldrefInfo =$/;"	v
ConstantFloatInfo	example/classfile.js	/^var ConstantFloatInfo =$/;"	v
ConstantIntegerInfo	example/classfile.js	/^var ConstantIntegerInfo =$/;"	v
ConstantInterfaceMethodrefInfo	example/classfile.js	/^var ConstantInterfaceMethodrefInfo =$/;"	v
ConstantInvokeDynamicInfo	example/classfile.js	/^var ConstantInvokeDynamicInfo =$/;"	v
ConstantLongInfo	example/classfile.js	/^var ConstantLongInfo =$/;"	v
ConstantMethodHandleInfo	example/classfile.js	/^var ConstantMethodHandleInfo =$/;"	v
ConstantMethodTypeInfo	example/classfile.js	/^var ConstantMethodTypeInfo =$/;"	v
ConstantMethodrefInfo	example/classfile.js	/^var ConstantMethodrefInfo =$/;"	v
ConstantNameAndTypeInfo	example/classfile.js	/^var ConstantNameAndTypeInfo =$/;"	v
ConstantStringInfo	example/classfile.js	/^var ConstantStringInfo =$/;"	v
ConstantUtf8Info	example/classfile.js	/^var ConstantUtf8Info =$/;"	v
Context	lib/binary_parser.js	/^var Context = require(".\/context").Context;$/;"	v
Context	lib/context.js	/^var Context = function() {$/;"	c
Context.Array	lib/context.js	/^    Array.prototype.push.apply(arr, this.scopes[this.scopes.length - 1]);$/;"	c
Context.generateError	lib/context.js	/^Context.prototype.generateError = function() {$/;"	m
Context.generateOption	lib/context.js	/^Context.prototype.generateOption = function(val) {$/;"	m
Context.generateTmpVariable	lib/context.js	/^Context.prototype.generateTmpVariable = function() {$/;"	m
Context.generateVariable	lib/context.js	/^Context.prototype.generateVariable = function(name) {$/;"	m
Context.interpolate	lib/context.js	/^Context.interpolate = function(s) {$/;"	f
Context.popPath	lib/context.js	/^Context.prototype.popPath = function() {$/;"	m
Context.popScope	lib/context.js	/^Context.prototype.popScope = function() {$/;"	m
Context.pushCode	lib/context.js	/^Context.prototype.pushCode = function() {$/;"	m
Context.pushPath	lib/context.js	/^Context.prototype.pushPath = function(name) {$/;"	m
Context.pushScope	lib/context.js	/^Context.prototype.pushScope = function(name) {$/;"	m
CpInfo	example/classfile.js	/^var CpInfo =$/;"	v
DQT	example/jpg.js	/^var DQT = Parser.start()$/;"	v
EOI	example/jpg.js	/^var EOI = Parser.start();$/;"	v
Examples	README.md	/^## Examples$/;"	f
Hello	example/Hello.java	/^public class Hello {$/;"	c
Hello.java	example/Hello.java	1;"	F
Hello.main	example/Hello.java	/^    public static void main(String[] args) {$/;"	m	class:Hello	access:public	signature:(String[] args)
Ignore	example/jpg.js	/^var Ignore = Parser.start()$/;"	v
Installation	README.md	/^## Installation$/;"	f
JPEG	example/jpg.js	/^var JPEG = Parser.start()$/;"	v
License	README.md	/^## License$/;"	f
PRIMITIVE_TYPES.DoubleBE	lib/binary_parser.js	/^    'DoubleBE' : 8$/;"	p
PRIMITIVE_TYPES.DoubleLE	lib/binary_parser.js	/^    'DoubleLE' : 8,$/;"	p
PRIMITIVE_TYPES.FloatBE	lib/binary_parser.js	/^    'FloatBE'  : 4,$/;"	p
PRIMITIVE_TYPES.FloatLE	lib/binary_parser.js	/^    'FloatLE'  : 4,$/;"	p
PRIMITIVE_TYPES.Int16BE	lib/binary_parser.js	/^    'Int16BE'  : 2,$/;"	p
PRIMITIVE_TYPES.Int16LE	lib/binary_parser.js	/^    'Int16LE'  : 2,$/;"	p
PRIMITIVE_TYPES.Int32BE	lib/binary_parser.js	/^    'Int32BE'  : 4,$/;"	p
PRIMITIVE_TYPES.Int32LE	lib/binary_parser.js	/^    'Int32LE'  : 4,$/;"	p
PRIMITIVE_TYPES.Int8	lib/binary_parser.js	/^    'Int8'     : 1,$/;"	p
PRIMITIVE_TYPES.UInt16BE	lib/binary_parser.js	/^    'UInt16BE' : 2,$/;"	p
PRIMITIVE_TYPES.UInt16LE	lib/binary_parser.js	/^    'UInt16LE' : 2,$/;"	p
PRIMITIVE_TYPES.UInt32BE	lib/binary_parser.js	/^    'UInt32BE' : 4,$/;"	p
PRIMITIVE_TYPES.UInt32LE	lib/binary_parser.js	/^    'UInt32LE' : 4,$/;"	p
PRIMITIVE_TYPES.UInt8	lib/binary_parser.js	/^    'UInt8'    : 1,$/;"	p
Parser	example/bmp.js	/^var Parser = require('..\/lib\/binary_parser.js').Parser;$/;"	v
Parser	example/classfile.js	/^var Parser = require('..\/lib\/binary_parser').Parser;$/;"	v
Parser	example/ip.js	/^var Parser = require('..\/lib\/binary_parser').Parser;$/;"	v
Parser	example/jpg.js	/^var Parser = require('..\/lib\/binary_parser').Parser;$/;"	v
Parser	example/tcp.js	/^var Parser = require('..\/lib\/binary_parser').Parser;$/;"	v
Parser	lib/binary_parser.js	/^var Parser = function() {$/;"	c
Parser	test.js	/^var Parser = require('.\/lib\/binary_parser').Parser;$/;"	v
Parser	test/composite_parser.js	/^var Parser = require('..\/lib\/binary_parser').Parser;$/;"	v
Parser	test/primitive_parser.js	/^var Parser = require('..\/lib\/binary_parser').Parser;$/;"	v
Parser.array	lib/binary_parser.js	/^Parser.prototype.array = function(varName, options) {$/;"	m
Parser.buffer	lib/binary_parser.js	/^Parser.prototype.buffer = function(varName, options) {$/;"	m
Parser.choice	lib/binary_parser.js	/^Parser.prototype.choice = function(varName, options) {$/;"	m
Parser.compile	lib/binary_parser.js	/^Parser.prototype.compile = function() {$/;"	m
Parser.create	lib/binary_parser.js	/^Parser.prototype.create = function(constructorFn) {$/;"	m
Parser.endianess	lib/binary_parser.js	/^Parser.prototype.endianess = function(endianess) {$/;"	m
Parser.generate	lib/binary_parser.js	/^Parser.prototype.generate = function(ctx) {$/;"	m
Parser.generateArray	lib/binary_parser.js	/^Parser.prototype.generateArray = function(ctx) {$/;"	m
Parser.generateAssert	lib/binary_parser.js	/^Parser.prototype.generateAssert = function(ctx) {$/;"	m
Parser.generateBit	lib/binary_parser.js	/^Parser.prototype.generateBit = function(ctx) {$/;"	m
Parser.generateBuffer	lib/binary_parser.js	/^Parser.prototype.generateBuffer = function(ctx) {$/;"	m
Parser.generateChoice	lib/binary_parser.js	/^Parser.prototype.generateChoice = function(ctx) {$/;"	m
Parser.generateChoiceCase	lib/binary_parser.js	/^Parser.prototype.generateChoiceCase = function(ctx, varName, type) {$/;"	m
Parser.generateFormatter	lib/binary_parser.js	/^Parser.prototype.generateFormatter = function(ctx, varName, formatter) {$/;"	m
Parser.generateNest	lib/binary_parser.js	/^Parser.prototype.generateNest = function(ctx) {$/;"	m
Parser.generateNext	lib/binary_parser.js	/^Parser.prototype.generateNext = function(ctx) {$/;"	m
Parser.generateSkip	lib/binary_parser.js	/^Parser.prototype.generateSkip = function(ctx) {$/;"	m
Parser.generateString	lib/binary_parser.js	/^Parser.prototype.generateString = function(ctx) {$/;"	m
Parser.getCode	lib/binary_parser.js	/^Parser.prototype.getCode = function() {$/;"	m
Parser.isInteger	lib/binary_parser.js	/^Parser.prototype.isInteger = function() {$/;"	m
Parser.nest	lib/binary_parser.js	/^Parser.prototype.nest = function(varName, options) {$/;"	m
Parser.parse	lib/binary_parser.js	/^Parser.prototype.parse = function(buffer, callback) {$/;"	m
Parser.setNextParser	lib/binary_parser.js	/^Parser.prototype.setNextParser = function(type, varName, options) {$/;"	m
Parser.sizeOf	lib/binary_parser.js	/^Parser.prototype.sizeOf = function() {$/;"	m
Parser.skip	lib/binary_parser.js	/^Parser.prototype.skip = function(length, options) {$/;"	m
Parser.start	lib/binary_parser.js	/^Parser.start = function() {$/;"	f
Parser.string	lib/binary_parser.js	/^Parser.prototype.string = function(varName, options) {$/;"	m
Quick Start	README.md	/^## Quick Start$/;"	f
README.md	README.md	1;"	F
SOF0	example/jpg.js	/^var SOF0 = Parser.start()$/;"	v
SOI	example/jpg.js	/^var SOI = Parser.start();$/;"	v
SOS	example/jpg.js	/^var SOS = Parser.start()$/;"	v
SPECIAL_TYPES.Array	lib/binary_parser.js	/^    'Array'    : null,$/;"	p
SPECIAL_TYPES.Bit	lib/binary_parser.js	/^    'Bit'      : null$/;"	p
SPECIAL_TYPES.Buffer	lib/binary_parser.js	/^    'Buffer'   : null,$/;"	p
SPECIAL_TYPES.Choice	lib/binary_parser.js	/^    'Choice'   : null,$/;"	p
SPECIAL_TYPES.Nest	lib/binary_parser.js	/^    'Nest'     : null,$/;"	p
SPECIAL_TYPES.Skip	lib/binary_parser.js	/^    'Skip'     : null,$/;"	p
SPECIAL_TYPES.String	lib/binary_parser.js	/^    'String'   : null,$/;"	p
Segment	example/jpg.js	/^var Segment = Parser.start()$/;"	v
StringOptions.length	test.js	/^var StringOptions = {length: 99, zeroTerminated:true};$/;"	p
StringOptions.zeroTerminated	test.js	/^var StringOptions = {length: 99, zeroTerminated:true};$/;"	p
Support	README.md	/^## Support$/;"	f
[u]int{8, 16, 32}{le, be}(name [,options])	README.md	/^### [u]int{8, 16, 32}{le, be}(name [,options])$/;"	f
array(name [,options])	README.md	/^### array(name [,options])$/;"	f
assert	test/composite_parser.js	/^var assert = require('assert');$/;"	v
assert	test/primitive_parser.js	/^var assert = require('assert');$/;"	v
author	package.json	/^  "author": {$/;"	f
binary_parser.js	lib/binary_parser.js	1;"	F
bit\[1-32\](name [,options])	README.md	/^### bit\\[1-32\\](name [,options])$/;"	f
bmp.js	example/bmp.js	1;"	F
buffer(name [,options])	README.md	/^### buffer(name [,options])$/;"	f
bugs	package.json	/^  "bugs" : "http:\/\/github.com\/Keichi\/binary-parser\/issues"$/;"	f
choice(name [,options])	README.md	/^### choice(name [,options])$/;"	f
classfile.js	example/classfile.js	1;"	F
compile()	README.md	/^### compile()$/;"	f
composite_parser.js	test/composite_parser.js	1;"	F
context.js	lib/context.js	1;"	F
create(constructorFunction)	README.md	/^### create(constructorFunction)$/;"	f
description	package.json	/^  "description": "Blazing-fast binary parser builder",$/;"	f
devDependencies	package.json	/^  "devDependencies": {$/;"	f
email	package.json	/^    "email" : "keichi.t@me.com",$/;"	f
endianess(endianess)	README.md	/^### endianess(endianess)$/;"	f
getCode()	README.md	/^### getCode()$/;"	f
ip.js	example/ip.js	1;"	F
jpg.js	example/jpg.js	1;"	F
keywords	package.json	/^  "keywords": [$/;"	f
license	package.json	/^  "license": "MIT",$/;"	f
main	example/Hello.java	/^    public static void main(String[] args) {$/;"	m	class:Hello	access:public	signature:(String[] args)
main	package.json	/^  "main": "lib\/binary_parser.js",$/;"	f
mocha	package.json	/^        "mocha": "*"$/;"	f
name	package.json	/^    "name" : "Keichi Takahashi",$/;"	f
name	package.json	/^  "name": "binary-parser",$/;"	f
nest(name [,options])	README.md	/^### nest(name [,options])$/;"	f
new Parser()	README.md	/^### new Parser()$/;"	f
package.json	package.json	1;"	F
parse(buffer[, callback])	README.md	/^### parse(buffer[, callback])$/;"	f
primitive_parser.js	test/primitive_parser.js	1;"	F
repository	package.json	/^  "repository" : {$/;"	f
scripts	package.json	/^  "scripts": {$/;"	f
skip(length)	README.md	/^### skip(length)$/;"	f
string(name [,options])	README.md	/^### string(name [,options])$/;"	f
tcp.js	example/tcp.js	1;"	F
test	package.json	/^    "test": "mocha --reporter spec"$/;"	f
test.js	test.js	1;"	F
type	package.json	/^    "type" : "git",$/;"	f
url	package.json	/^    "url" : "http:\/\/blog.keichi.net\/"$/;"	f
url	package.json	/^    "url" : "http:\/\/github.com\/Keichi\/binary-parser.git"$/;"	f
util	test/composite_parser.js	/^var util = require('util');$/;"	v
util	test/primitive_parser.js	/^var util = require('util');$/;"	v
version	package.json	/^  "version": "1.1.4",$/;"	f
{float, double}{le, be}(name [,options])	README.md	/^### {float, double}{le, be}(name [,options])$/;"	f
