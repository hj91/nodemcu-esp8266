"use strict";var Stampit=require("stampit"),Promise=require("bluebird");module.exports=Stampit().init(function(){var e=function(){this.addResponseHandler(1,t)}.bind(this),t=function(e,t){if(this.log.debug("handling read coils response."),this.log.debug("on read coils got PDU: "+JSON.stringify(e)+" pdu.length:"+e.length),this.log.debug(" request: "+JSON.stringify(t)),e.length<2)t.defer.reject(new Error("PDU length less than two"));else{var r=e.readUInt8(0),i=e.readUInt8(1),n={fc:r,byteCount:i,payload:e.slice(2),coils:[]};if(1===r){for(var s=0,o=1,l=0,d=0;d<i;d+=1){o=1,l=e.readUInt8(2+d);for(var a=0;a<8;a+=1)n.coils[s]=(l&o)>0,o<<=1,s+=1}t.defer.resolve(n)}else t.defer.reject(new Error("FC "+r+" is not valid - FC1 is expected"))}}.bind(this);this.readCoils=function(e,t){return new Promise(function(r,i){var n=Buffer.allocUnsafe(5);n.writeUInt8(1,0),n.writeUInt16BE(e,1),n.writeUInt16BE(t,3),this.queueRequest(1,n,{resolve:r,reject:i})}.bind(this))},e()});
//# sourceMappingURL=../../maps/handler/client/ReadCoils.js.map
