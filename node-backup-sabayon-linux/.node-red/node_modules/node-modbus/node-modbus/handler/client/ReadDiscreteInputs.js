"use strict";var stampit=require("stampit"),Promise=require("bluebird");module.exports=stampit().init(function(){var e=function(){this.addResponseHandler(2,t)}.bind(this),t=function(e,t){if(this.log.debug("handling read discrete inputs response."),this.log.debug("on read discrete inputs got PDU: "+JSON.stringify(e)+" pdu.length:"+e.length),this.log.debug("request: "+JSON.stringify(t)),e.length<2)t.defer.reject(new Error("PDU length less than two"));else{var r=e.readUInt8(0);if(2===r){for(var i=e.readUInt8(1),n=0,s={fc:r,byteCount:i,payload:e.slice(2),coils:[]},o=1,d=0,a=0;a<i;a+=1){o=1,d=e.readUInt8(2+a);for(var u=0;u<8;u+=1)s.coils[n]=(d&o)>0,o<<=1,n+=1}t.defer.resolve(s)}else t.defer.reject(new Error("FC "+r+" is not valid - FC2 is expected"))}}.bind(this);this.readDiscreteInputs=function(e,t){return new Promise(function(r,i){var n=Buffer.allocUnsafe(5);n.writeUInt8(2),n.writeUInt16BE(e,1),n.writeUInt16BE(t,3),t>2e3?i():this.queueRequest(2,n,{resolve:r,reject:i})}.bind(this))},e()});
//# sourceMappingURL=../../maps/handler/client/ReadDiscreteInputs.js.map
