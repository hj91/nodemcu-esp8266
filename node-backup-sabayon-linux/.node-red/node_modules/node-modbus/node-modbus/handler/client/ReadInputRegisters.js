"use strict";var Stampit=require("stampit"),Promise=require("bluebird");module.exports=Stampit().init(function(){var e=function(){this.addResponseHandler(4,t)}.bind(this),t=function(e,t){if(this.log.debug("handling read input registers response."),this.log.debug("on read input registers got PDU: "+JSON.stringify(e)+" pdu.length:"+e.length),this.log.debug("request: "+JSON.stringify(t)),e.length<2)t.defer.reject(new Error("PDU length less than two"));else{var r=e.readUInt8(0);if(4===r){for(var i=e.readUInt8(1),n={fc:r,byteCount:i,payload:e.slice(2),register:[]},s=i/2,o=0;o<s;o+=1)n.register.push(e.readUInt16BE(2+2*o));t.defer.resolve(n)}else t.defer.reject(new Error("FC "+r+" is not valid - FC4 is expected"))}}.bind(this);this.readInputRegisters=function(e,t){return new Promise(function(r,i){var n=Buffer.allocUnsafe(5);n.writeUInt8(4),n.writeUInt16BE(e,1),n.writeUInt16BE(t,3),this.queueRequest(4,n,{resolve:r,reject:i})}.bind(this))},e()});
//# sourceMappingURL=../../maps/handler/client/ReadInputRegisters.js.map
