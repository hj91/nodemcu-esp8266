"use strict";var stampit=require("stampit"),Promise=require("bluebird");module.exports=stampit().init(function(){var e=function(){this.addResponseHandler(15,t)}.bind(this),t=function(e,t){if(this.log.debug("handling multiple coils response."),this.log.debug("on write multiple coils got PDU: "+JSON.stringify(e)+" pdu.length:"+e.length),this.log.debug("request: "+JSON.stringify(t)),e.length<5)t.defer.reject(new Error("PDU length less than five"));else{var i=e.readUInt8(0);if(15===i){var r={fc:i,startAddress:e.readUInt16BE(1),quantity:e.readUInt16BE(3)};t.defer.resolve(r)}else t.defer.reject(new Error("FC "+i+" is not valid - FC15 is expected"))}}.bind(this);this.writeMultipleCoils=function(e,t,i){return new Promise(function(r,n){var s=Buffer.allocUnsafe(6),l=void 0;if(s.writeUInt8(15,0),s.writeUInt16BE(e,1),t instanceof Buffer)s.writeUInt16BE(i,3),s.writeUInt8(t.length,5),l=Buffer.concat([s,t]);else if(t instanceof Array){if(t.length>1968)return void n();var o=Math.ceil(t.length/8),f=0,a=0,u=0,d=Buffer.allocUnsafe(o);s.writeUInt16BE(t.length,3),s.writeUInt8(o,5);for(var h=0;h<t.length;h+=1)f+=t[h]?Math.pow(2,u):0,0!==(u=(u+1)%8)&&h!==t.length-1||(d.writeUInt8(f,a),a+=1,f=0);l=Buffer.concat([s,d])}this.queueRequest(15,l,{resolve:r,reject:n})}.bind(this))},e()});
//# sourceMappingURL=../../maps/handler/client/WriteMultipleCoils.js.map
