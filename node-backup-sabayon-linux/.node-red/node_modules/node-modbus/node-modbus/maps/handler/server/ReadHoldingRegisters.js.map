{"version":3,"sources":["handler/server/ReadHoldingRegisters.js"],"names":["stampit","require","module","exports","init","debug","this","log","responseDelay","bind","setRequestHandler","onRequest","setTimeout","pdu","cb","length","buf","Buffer","allocUnsafe","writeUInt8","quantity","readUInt16BE","byteStart","start","emit","mem","getHolding","head","response","concat","slice"],"mappings":"AAIA,aAEA,IAAIA,QAAUC,QAAQ,WAEtBC,OAAOC,QAAUH,UAEbI,KAAIA,WACF,IAAAA,EAASC,WAATC,KAAKC,IAAIF,MAAM,sDAGRG,KAAAA,gBACNF,KAAAE,cAAA,GAGDC,KAAKC,kBARP,EAAAC,IAQEF,KAAKH,MAGLM,EAAW,SAAYC,EAAAC,GACrBF,WAASP,WAGP,GAHFC,KAAKC,IAAIF,MAAM,4CAGE,IAAfQ,EAAAE,OAAe,CAAfT,KAAKC,IAAIF,MAAM,qBAEf,IAAIW,EAAMC,OAAOC,YAAY,GAO9B,OAJCF,EAAIG,WAAW,IAAf,GACAL,EAAAK,WAAA,EAAA,QAAAL,EAAGE,GAML,IACII,EAAeC,EADfC,EAAYC,aAAhB,GACIH,EAAWP,EAAIQ,aAAa,GAEhCf,KAAKkB,KAAK,8BAA+BF,EAAWF,GAEpD,IAAIK,EAAMnB,KAAKoB,aAGb,GAAAJ,EAAeG,EAAAV,QAAAO,EAAf,EAAeF,EAAfK,EAAAV,OAAA,CACAT,KAAIU,IAAMC,MAAAA,wCAAV,IAAID,EAAMC,OAAOC,YAAY,GAM9B,OAHCF,EAAIG,WAAW,IAAf,GACAL,EAAGE,WAAH,EAAA,QACAF,EAAAE,GAGF,IAAIW,EAAOV,OAAOC,YAAY,GAG9BS,EAAKR,WAAWC,EAAAA,GAAhBO,EAAKR,WAAsB,EAAXC,EAAc,GAE9B,IAAIQ,EAAWX,OAAOY,QAAQF,EAAMF,EAAIK,MAAMR,EAAWA,EAAuB,EAAXF,KAErEd,KAAKC,IAAIF,MAAM,2CAGfI,EAAKmB,IA5COnB,KAAAH,MAAhBA,KAAAE,gBA6CEC,KAAKH,MAzDXF","file":"../../../handler/server/ReadHoldingRegisters.js","sourcesContent":["/**\n * Modbus server read holding registers.\n * @module ModbusServerReadHoldingRegisters\n */\n'use strict'\n\nlet stampit = require('stampit')\n\nmodule.exports = stampit()\n  .init(function () {\n    let init = function () {\n      this.log.debug('initiating read holding registers request handler.')\n\n      if (!this.responseDelay) {\n        this.responseDelay = 0\n      }\n\n      this.setRequestHandler(3, onRequest)\n    }.bind(this)\n\n    let onRequest = function (pdu, cb) {\n      setTimeout(function () {\n        this.log.debug('handling read holding registers request.')\n\n        if (pdu.length !== 5) {\n          this.log.debug('wrong pdu length.')\n\n          let buf = Buffer.allocUnsafe(2)\n\n          buf.writeUInt8(0x83, 0)\n          buf.writeUInt8(0x02, 1)\n          cb(buf)\n\n          return\n        }\n\n        let start = pdu.readUInt16BE(1)\n        let byteStart = start * 2\n        let quantity = pdu.readUInt16BE(3)\n\n        this.emit('readHoldingRegistersRequest', byteStart, quantity)\n\n        let mem = this.getHolding()\n\n        if (byteStart > mem.length || byteStart + (quantity * 2) > mem.length) {\n          this.log.debug('request outside register boundaries.')\n          let buf = Buffer.allocUnsafe(2)\n\n          buf.writeUInt8(0x83, 0)\n          buf.writeUInt8(0x02, 1)\n          cb(buf)\n          return\n        }\n\n        let head = Buffer.allocUnsafe(2)\n\n        head.writeUInt8(0x03, 0)\n        head.writeUInt8(quantity * 2, 1)\n\n        let response = Buffer.concat([head, mem.slice(byteStart, byteStart + quantity * 2)])\n\n        this.log.debug('finished read holding register request.')\n\n        cb(response)\n      }.bind(this), this.responseDelay)\n    }.bind(this)\n\n    init()\n  })\n"]}