"use strict";var stampit=require("stampit"),logger=require("stampit-log"),StateMachine=require("stampit-state-machine"),ExceptionMessage={1:"ILLEGAL FUNCTION",2:"ILLEGAL DATA ADDRESS",3:"ILLEGAL DATA VALUE",4:"SLAVE DEVICE FAILURE",5:"ACKNOWLEDGE",6:"SLAVE DEVICE BUSY",8:"MEMORY PARITY ERROR",10:"GATEWAY PATH UNAVAILABLE",11:"GATEWAY TARGET DEVICE FAILED TO RESPOND"};module.exports=stampit().refs({logLabel:"ModbusCoreClient",logLevel:"info",logEnabled:!0}).compose(StateMachine).compose(logger).init(function(){var e={},t=null;this.reqFifo=[];var i=function(){this.timeout||(this.timeout=2e3),this.endianType||(this.endianType="LITTLE"),this.logLevel&&(this.log.logLevel=this.logLevel),this.log.info("log level: "+this.log.logLevel),this.on("data",u),this.on("timeout",r),this.on("newState_closed",n)}.bind(this),o=function(){0!==this.reqFifo.length?(this.log.debug(this.reqFifo.length+" requests in request pipe."),(t=this.reqFifo.shift())&&t.pdu&&(this.setState("waiting"),this.emit("send",t.pdu,s),this.log.debug("Data flushed."))):this.log.debug("Nothing in request pipe.")}.bind(this),s=function(){t.timeout=setTimeout(function(){t.defer.reject({err:"timeout"}),this.emit("trashCurrentRequest"),this.log.error("Request timed out after "+this.timeout/1e3+" sec"),this.emit("timeout")}.bind(this),this.timeout),this.log.debug("set timeout of "+this.timeout+" ms on send to wait for data")}.bind(this),r=function(){this.setState("ready")}.bind(this),n=function(){for(t&&(this.log.debug("Clearing timeout of the current request."),clearTimeout(t.timeout)),this.log.debug("Cleaning up request fifo.");this.reqFifo.length;)this.reqFifo.shift().defer.reject({err:"Fifo cleanup"})}.bind(this),u=function(i){if(t){if(clearTimeout(t.timeout),this.log.debug("received data and clean timeout PDU: "+JSON.stringify(i)),function(e){var i=e.readUInt8(0);if(i<128)return!1;if(e.length<2)return t.defer.reject("PDU length "+e.length+" invalid"),!0;var o=e.readUInt8(1),s={errorCode:i,exceptionCode:o,message:ExceptionMessage[o]};return t.defer.reject(s),!0}(i))return this.log.debug("Received pdu describes an error."),t=null,void this.setState("ready");var o=e[t.fc];if(!o)throw this.log.debug("Found not handler for fc",t.fc),new Error("No handler implemented for fc "+t.fc);o(i,t),this.setState("ready")}else this.log.debug("No current request.")}.bind(this);this.addResponseHandler=function(t,i){return e[t]=i,this}.bind(this),this.queueRequest=function(e,t,i){var s={fc:e,defer:i,pdu:t};this.inState("ready")?(this.reqFifo.push(s),o()):(this.log.warn("not ready to transport data state:"+this.getState()),this.inState("closed")&&this.emit("error","connection closed"),i.reject({err:'modbus client not in "ready" state'}))},i()});
//# sourceMappingURL=maps/modbus-client-core.js.map
