{"version":3,"sources":["core/modbus-core.js"],"names":["require","install","de","biancoroyal","modbus","core","internalDebug","getObjectId","ObjectID","getOriginalMessage","messageList","msg","origMsg","messageId","delete","payload","functionCodeModbus","dataType","module","exports"],"mappings":"AAOA,aACAA,QAAQ,sBAAsBC,UAE9B,IAAIC,GAAKA,IAAM,CAACC,YAAa,CAACC,OAAQ,CAACC,KAAM,MAA7CH,GAAAC,YAAeC,OAACD,KAAAA,cAAuBE,GAAAA,YAAYD,OAAAC,KAAAC,eAAAN,QAAA,QAAAA,CAAA,sBAApCE,GACfA,YAAGC,OAAYC,KAAOC,SAAKC,GAAAA,YAAmBH,OAAYC,KAAAA,UAAYE,QAA3B,QAA4CN,SAGvFE,GAAGC,YAAYC,OAAOC,KAAKE,YAAc,WAAzCL,OAAGC,IAAAA,GAAYC,YAAYG,OAAAA,KAA3BC,UAIAN,GAAGC,YAAYC,OAAOC,KAAKI,mBAAqB,SAAUC,EAAaC,GAAvET,IAAGC,EAAYC,EAAYK,IAAAA,EAAAA,QAAAA,iBAA+BC,EAUxD,OAPIE,GAAWA,EAAQC,WAAvBH,EAAIE,OAAWA,EAAQC,WACrBH,GAAAA,YAAYI,OAAOF,KAAQC,cAA3B,sBAAAD,EAAAC,UAAA,UAAAF,EAAAI,QAAAF,UAAA,MADFX,GAAAC,YAGOC,OAAAC,KAAAC,cAAA,qBAAAK,EAAAI,QAAAF,WAIAD,GAGTV,GAAGC,YAAYC,OAAOC,KAAKW,mBAAqB,SAAUC,GAA1Df,OAAGC,GACD,IAAA,OACE,OAAK,EACH,IAAA,QACF,OAAK,EACH,IAAA,kBACF,OAAK,EACH,IAAA,gBACF,OAAK,EACH,QACF,OAAAc,IAKJC,OAAOC,QAAUjB,GAAGC,YAAYC,OAAOC","file":"../../core/modbus-core.js","sourcesContent":["/**\n Copyright 2016,2017 - Klaus Landsdorf (http://bianco-royal.de/)\n All rights reserved.\n node-red-contrib-modbus\n\n @author <a href=\"mailto:klaus.landsdorf@bianco-royal.de\">Klaus Landsdorf</a> (Bianco Royal)\n */\n'use strict'\nrequire('source-map-support').install()\n\nvar de = de || {biancoroyal: {modbus: {core: {}}}} // eslint-disable-line no-use-before-define\nde.biancoroyal.modbus.core.internalDebug = de.biancoroyal.modbus.core.internalDebug || require('debug')('contribModbus:core') // eslint-disable-line no-use-before-define\nde.biancoroyal.modbus.core.ObjectID = de.biancoroyal.modbus.core.ObjectID || require('bson').ObjectID // eslint-disable-line no-use-before-define\n\nde.biancoroyal.modbus.core.getObjectId = function () {\n  return new de.biancoroyal.modbus.core.ObjectID()\n}\n\nde.biancoroyal.modbus.core.getOriginalMessage = function (messageList, msg) {\n  let origMsg = messageList.get(msg.payload.messageId) || undefined\n\n  if (origMsg && origMsg.messageId) {\n    messageList.delete(origMsg.messageId)\n    de.biancoroyal.modbus.core.internalDebug('Remove Message In:<' + origMsg.messageId + '> Out:<' + msg.payload.messageId + '>')\n  } else {\n    de.biancoroyal.modbus.core.internalDebug('Message Not Found ' + msg.payload.messageId)\n  }\n\n  return origMsg\n}\n\nde.biancoroyal.modbus.core.functionCodeModbus = function (dataType) {\n  switch (dataType) {\n    case 'Coil':\n      return 1\n    case 'Input':\n      return 2\n    case 'HoldingRegister':\n      return 3\n    case 'InputRegister':\n      return 4\n    default:\n      return dataType\n  }\n}\n\nmodule.exports = de.biancoroyal.modbus.core\n"]}