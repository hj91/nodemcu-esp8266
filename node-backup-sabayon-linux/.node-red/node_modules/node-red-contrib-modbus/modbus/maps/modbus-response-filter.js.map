{"version":3,"sources":["modbus-response-filter.js"],"names":["module","exports","RED","install","mbCore","require","modbusIOFileValuNames","nodes","registerType","config","this","name","ModbusResponseFilter","createNode","filter","registers","filterResponseBuffer","filterInput","filterValues","showStatusActivities","node","ioFile","configData","on","internalDebug","msg","payload","item","responseBuffer","values","input","length","send","filterFromPayload","showErrors","Error","httpAdmin","get","auth","needsPermission","req","res"],"mappings":"aAaAA,OAAOC,QAAU,SAAUC,GAA3BF,QAAOC,sBAAyBE,UAC9B,IAAAC,EAAAC,QAAA,sBAGIC,EAAwB,GA6DzBJ,EAdDK,MAAAC,aAAA,yBAhDF,SAAqBC,GACrBP,EAAII,MAAAA,WAAAA,KAAwBG,GAE5BC,KAAAC,KAASC,EAAAA,KACPV,KAAIK,OAAMM,EAAWC,OAIrBJ,KAAKK,UAAYN,EAAOM,WAAa,EADrCL,KAAKI,qBAALL,EAAAO,qBACAN,KAAKK,aAAYN,EAAOM,aAIxBL,KAAKO,YAAcR,EAAOQ,YAD1BP,KAAKQ,qBAAsBA,EAAAA,qBAC3BR,KAAKO,WAALR,EAAmBA,WAEnBC,KAAKS,OAAAA,EAAAA,MAAAA,QAAuBV,EAAOU,QAKnC,IAAIC,EAAOV,KAEXJ,EAAwBc,EAAKC,OAAOC,WAEpCF,EAAKC,OAAOE,GAAG,gBAAiB,SAAUD,GAF1ChB,EAAwBc,EAItBhB,EAAOoB,cAAc,+BAArBpB,EAAAA,kBAAqB,SAAAqB,GAiBnB,OAnBJA,EAAAC,QAAAD,EAAAC,QAAAZ,OAAA,SAAAa,GAOI,OAAOA,EAAKhB,OAASS,EAAKN,SAA1BM,EAAOO,6BADTF,EAAAG,eAKER,EAAOK,qBACRA,EAAAI,OAGCT,EAAOK,oBACRA,EAAAK,MAGCL,GAGFL,EAAAG,GAAA,QAAA,SAAAE,GAjBFL,EAAAL,UAsBSU,EAAIC,QAAQK,QAAUN,EAAIC,QAAQK,SAAWX,EAAKL,UAGpDK,EAAAY,KAAAZ,EAAAa,kBAAAR,KALCL,EAARc,YACMd,EAAKL,MAAAA,IAAWoB,MAAA,0CAAAf,EAAAL,YAEhBX,EAAIgB,cAAiB,0CAAAA,EAAAL,YAMtBK,EAAAY,KAAAZ,EAAAa,kBAAAR,QAUPvB,EAAIkC,UAAUC,IAAI,4BAA6BnC,EAAIoC,KAAKC,gBAAgB,eAAgB,SAAUC,EAAKC,GAFvGvC,EAAIK,KAAMC","file":"../modbus-response-filter.js","sourcesContent":["/**\n Copyright (c) 2017, Klaus Landsdorf (http://bianco-royal.de/)\n All rights reserved.\n node-red-contrib-modbus - The BSD 3-Clause License\n\n @author <a href=\"mailto:klaus.landsdorf@bianco-royal.de\">Klaus Landsdorf</a> (Bianco Royal)\n */\n/**\n * Modbus flexible Getter node.\n * @module NodeRedModbusFlexGetter\n *\n * @param RED\n */\nmodule.exports = function (RED) {\n  'use strict'\n  require('source-map-support').install()\n  let mbCore = require('./core/modbus-core')\n  var modbusIOFileValuNames = []\n\n  function ModbusResponseFilter (config) {\n    RED.nodes.createNode(this, config)\n\n    this.name = config.name\n    this.filter = config.filter\n    this.registers = config.registers || 0\n\n    this.filterResponseBuffer = config.filterResponseBuffer\n    this.filterValues = config.filterValues\n    this.filterInput = config.filterInput\n\n    this.showStatusActivities = config.showStatusActivities\n    this.showErrors = config.showErrors\n\n    this.ioFile = RED.nodes.getNode(config.ioFile)\n\n    let node = this\n\n    modbusIOFileValuNames = node.ioFile.configData\n\n    node.ioFile.on('updatedConfig', function (configData) {\n      modbusIOFileValuNames = configData\n      mbCore.internalDebug('Filter Config Data Update')\n    })\n\n    node.filterFromPayload = function (msg) {\n      msg.payload = msg.payload.filter((item) => {\n        return item.name === node.filter\n      })\n\n      if (node.filterResponseBuffer) {\n        delete msg.responseBuffer\n      }\n\n      if (node.filterValues) {\n        delete msg.values\n      }\n\n      if (node.filterInput) {\n        delete msg.input\n      }\n\n      return msg\n    }\n\n    node.on('input', function (msg) {\n      if (node.registers) {\n        if (!msg.payload.length || msg.payload.length !== node.registers) {\n          if (node.showErrors) {\n            node.error(new Error('Register Length Does Not Match Setting ' + node.registers))\n          }\n          mbCore.internalDebug('Register Length Does Not Match Setting ' + node.registers)\n        } else {\n          node.send(node.filterFromPayload(msg))\n        }\n      } else {\n        // without register safety\n        node.send(node.filterFromPayload(msg))\n      }\n    })\n  }\n\n  RED.nodes.registerType('modbus-response-filter', ModbusResponseFilter)\n\n  RED.httpAdmin.get('/modbus/iofile/valuenames', RED.auth.needsPermission('iofile.read'), function (req, res) {\n    res.json(modbusIOFileValuNames)\n  })\n}\n"]}