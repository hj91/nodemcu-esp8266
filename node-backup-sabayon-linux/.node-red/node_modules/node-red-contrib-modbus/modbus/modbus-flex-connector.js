"use strict";module.exports=function(i){require("source-map-support").install();var r=require("./modbus-basics"),c=require("debug")("contribModbus:flex:connector");i.nodes.registerType("modbus-flex-connector",function(o){i.nodes.createNode(this,o),this.name=o.name,this.maxReconnectsPerMinute=4|o.maxReconnectsPerMinute,this.emptyQueue=o.emptyQueue,this.showStatusActivities=o.showStatusActivities,this.showErrors=o.showErrors,this.connection=null;var n=this,t=i.nodes.getNode(o.server);function s(o){var e=r.setNodeStatusProperties(o,n.showStatusActivities);n.status({fill:e.fill,shape:e.shape,text:e.status})}s("waiting"),n.onModbusInit=function(){s("initialize")},n.onModbusConnect=function(){s("connected")},n.onModbusActive=function(){s("active")},n.onModbusError=function(o){s("failure"),n.showErrors&&n.warn(o)},n.onModbusClose=function(){s("closed")},n.onModbusBroken=function(){s("reconnecting after "+t.reconnectTimeout+" msec.")},t.on("mbinit",n.onModbusInit),t.on("mbconnected",n.onModbusConnect),t.on("mbactive",n.onModbusActive),t.on("mberror",n.onModbusError),t.on("mbbroken",n.onModbusBroken),t.on("mbclosed",n.onModbusClose),n.on("input",function(o){var e;t.client&&(o&&o.payload?(n.showStatusActivities&&(s(t.statlyMachine.getMachineState()),e=o,i.settings.verbose&&c("string"==typeof e?e:JSON.stringify(e))),o.payload.connectorType?(c("dynamicReconnect: "+JSON.stringify(o.payload)),o.payload.emptyQueue=n.emptyQueue,t.emit("dynamicReconnect",o)):n.error(new Error("Payload Not Valid - Connector Type"),o)):n.error(new Error("Payload Not Valid"),o))}),n.onModbusReconnectDone=function(o,e){n.showStatusActivities&&s("reading done")},n.onModbusReconnectError=function(o,e){c(o.message),r.setModbusError(n,t,o,e,s)},n.on("close",function(){s("closed")})})};
//# sourceMappingURL=maps/modbus-flex-connector.js.map
