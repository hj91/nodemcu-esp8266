"use strict";module.exports=function(s){require("source-map-support").install();var i=require("./modbus-basics"),n=require("./core/modbus-core"),d=require("debug")("contribModbus:flex:write");s.nodes.registerType("modbus-flex-write",function(e){s.nodes.createNode(this,e),this.name=e.name,this.showStatusActivities=e.showStatusActivities,this.showErrors=e.showErrors;var r=this,o=s.nodes.getNode(e.server);function t(e){var a=i.setNodeStatusProperties(e,!1);r.status({fill:a.fill,shape:a.shape,text:a.status})}r.bufferMessageList=new Map,t("waiting"),r.onModbusInit=function(){t("initialize")},r.onModbusConnect=function(){t("connected")},r.onModbusActive=function(){t("active")},r.onModbusError=function(e){t("failure"),r.showErrors&&r.warn(e)},r.onModbusClose=function(){t("closed")},r.onModbusBroken=function(){t("reconnecting after "+o.reconnectTimeout+" msec.")},o.on("mbinit",r.onModbusInit),o.on("mbconnected",r.onModbusConnect),o.on("mbactive",r.onModbusActive),o.on("mberror",r.onModbusError),o.on("mbbroken",r.onModbusBroken),o.on("mbclosed",r.onModbusClose),r.on("input",function(a){if(a&&a.hasOwnProperty("payload")){if(null==a.payload)return t("payload error"),void r.error("invalid msg.payload",a);if(o.client){if(a.payload)try{if("string"==typeof a.payload&&(a.payload=JSON.parse(a.payload)),a.payload.fc=parseInt(a.payload.fc),a.payload.unitid=parseInt(a.payload.unitid),a.payload.address=parseInt(a.payload.address),a.payload.quantity=parseInt(a.payload.quantity),!Number.isInteger(a.payload.fc)||5!==a.payload.fc&&6!==a.payload.fc&&15!==a.payload.fc&&16!==a.payload.fc)return void r.error("FC Not Valid",a);if(!(Number.isInteger(a.payload.address)&&0<=a.payload.address&&a.payload.address<=65535))return void r.error("Address Not Valid",a);if(!(Number.isInteger(a.payload.quantity)&&1<=a.payload.quantity&&a.payload.quantity<=65535))return void r.error("Quantity Not Valid",a);a.payload.hasOwnProperty("value")&&"string"==typeof a.payload.value&&("true"===a.payload.value||"false"===a.payload.value?a.payload.value="true"===a.payload.value:-1<a.payload.value.indexOf(",")&&(a.payload.value=JSON.parse(a.payload.value))),a.messageId=n.getObjectId(),r.bufferMessageList.set(a.messageId,a),d("Add Message "+a.messageId),a={topic:a.topic||r.id,payload:{value:a.payload.value||a.value,unitid:a.payload.unitid,fc:a.payload.fc,address:a.payload.address,quantity:a.payload.quantity,messageId:a.messageId},_msgid:a._msgid},o.emit("writeModbus",a,r.onModbusWriteDone,r.onModbusWriteError)}catch(e){r.error(e,a)}else r.error(new Error("Payload Not Valid"),a);var e;r.showStatusActivities&&(t(o.statlyMachine.getMachineState()),e=a,s.settings.verbose&&d("string"==typeof e?e:JSON.stringify(e)))}}}),r.onModbusWriteDone=function(e,a){r.showStatusActivities&&t("writing done"),r.send(function(e,a,o){var t=n.getOriginalMessage(r.bufferMessageList,o)||o;t.payload=e,t.topic=o.topic,t.responseBuffer=a,t.input=o;var s=Object.assign({},t);return s.payload=a,s.values=e,delete s.responseBuffer,[t,s]}(a.payload,e,a))},r.onModbusWriteError=function(e,a){d(e.message),i.setModbusError(r,o,e,n.getOriginalMessage(r.bufferMessageList,a)||a,t)},r.on("close",function(){t("closed")})})};
//# sourceMappingURL=maps/modbus-flex-write.js.map
