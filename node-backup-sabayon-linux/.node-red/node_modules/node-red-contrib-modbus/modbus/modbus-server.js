"use strict";module.exports=function(a){require("source-map-support").install();var l=require("stampit"),u=require("node-modbus"),d=require("./modbus-basics"),c=require("debug")("contribModbus:server");try{a.nodes.registerType("modbus-server",function(e){a.nodes.createNode(this,e),this.name=e.name,this.logEnabled=e.logEnabled,this.hostname=e.hostname||"0.0.0.0",this.serverPort=parseInt(e.serverPort),this.responseDelay=parseInt(e.responseDelay),this.delayUnit=e.delayUnit,this.coilsBufferSize=parseInt(8*e.coilsBufferSize),this.holdingBufferSize=parseInt(8*e.holdingBufferSize),this.inputBufferSize=parseInt(8*e.inputBufferSize);var n=this;function s(e){a.settings.verbose&&n.warn(n.name?n.name+": "+e:"Modbus response: "+e)}function o(e){a.settings.verbose&&c("string"==typeof e?e:JSON.stringify(e))}function r(e){d.statusLog&&o("server status: "+e);var s="red",r="dot";switch(e){case"initialized":s="green",r="ring";break;case"active":s="green",r="dot";break;default:e&&"waiting"!==e||(s="blue",e="waiting ...")}n.status({fill:s,shape:r,text:e})}n.server=null,r("initialized");var t="warn";a.settings.verbose&&(t="debug");try{var i=l().refs({logLabel:"ModbusServer",logLevel:t,logEnabled:n.logEnabled,hostname:n.hostname,port:n.serverPort,responseDelay:d.calc_rateByUnit(n.responseDelay,n.delayUnit),coils:Buffer.alloc(n.coilsBufferSize,0),holding:Buffer.alloc(n.holdingBufferSize,0),input:Buffer.alloc(n.inputBufferSize,0)}).compose(u.server.tcp.complete).init(function(){(function(){this.coils.fill(0),this.holding.fill(0),this.input.fill(0)}).bind(this)()});o("starting modbus server"),n.server=i()}catch(e){s(e),r("error")}null!=n.server?(o("modbus server started"),r("active")):(s("modbus server isn't ready"),r("error")),n.on("input",function(e){var s,r,t,i;o("Input:"+e),n.send((s=e,r=n.server.getHolding(),t=n.server.getCoils(),i=n.server.getInput(),[{type:"holding",message:s,payload:r},{type:"coils",message:s,payload:t},{type:"input",message:s,payload:i}]))}),n.on("close",function(){r("closed"),n.server.close(),n.server=null})})}catch(e){console.log(e.message)}};
//# sourceMappingURL=maps/modbus-server.js.map
