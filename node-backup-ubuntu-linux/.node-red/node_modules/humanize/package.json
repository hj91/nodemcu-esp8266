{
  "_args": [
    [
      "humanize@0.0.9",
      "/home/harshad/.node-red/node_modules/node-opcua-vendor-diagnostic"
    ]
  ],
  "_from": "humanize@0.0.9",
  "_id": "humanize@0.0.9",
  "_inCache": true,
  "_installable": true,
  "_location": "/humanize",
  "_npmUser": {
    "email": "taijin@gmail.com",
    "name": "taijin"
  },
  "_npmVersion": "1.3.8",
  "_phantomChildren": {},
  "_requested": {
    "name": "humanize",
    "raw": "humanize@0.0.9",
    "rawSpec": "0.0.9",
    "scope": null,
    "spec": "0.0.9",
    "type": "version"
  },
  "_requiredBy": [
    "/node-opcua-vendor-diagnostic"
  ],
  "_resolved": "https://registry.npmjs.org/humanize/-/humanize-0.0.9.tgz",
  "_shasum": "1994ffaecdfe9c441ed2bdac7452b7bb4c9e41a4",
  "_shrinkwrap": null,
  "_spec": "humanize@0.0.9",
  "_where": "/home/harshad/.node-red/node_modules/node-opcua-vendor-diagnostic",
  "author": {
    "email": "taijin@gmail.com",
    "name": "Tai-Jin Lee"
  },
  "bugs": {
    "url": "https://github.com/taijinlee/humanize/issues"
  },
  "dependencies": {},
  "description": "Javascript string formatter for human readability",
  "devDependencies": {
    "jshint": "0.7.1",
    "mocha": "1.0.3",
    "should": "0.6.3"
  },
  "directories": {},
  "dist": {
    "shasum": "1994ffaecdfe9c441ed2bdac7452b7bb4c9e41a4",
    "tarball": "https://registry.npmjs.org/humanize/-/humanize-0.0.9.tgz"
  },
  "engines": {
    "node": "*"
  },
  "homepage": "https://github.com/taijinlee/humanize",
  "keywords": [
    "browser",
    "client",
    "util"
  ],
  "main": "humanize.js",
  "maintainers": [
    {
      "name": "taijin",
      "email": "taijin@gmail.com"
    }
  ],
  "name": "humanize",
  "optionalDependencies": {},
  "readme": "# humanize #\n\nJavascript data formatter for human readability.\n\nIdea, name, and initial code blatently stolen from [milanvrekic/JS-humanize](http://github.com/milanvrekic/JS-humanize)\n\nCan be loaded via AMD or in node directly.\n\n## Installation ##\n\n    npm install humanize\n\n## Usage: ##\n```javascript\nvar humanize = require('humanize');\nhumanize.date('Y-m-d'); // 'yyyy-mm-dd'\nhumanize.filesize(1234567890); // '1.15 Gb'\n```\n\n## Functions available: ##\n\n####humanize.noConflict()####\nGive control of the \"humanize\" variable back to its previous owner. Returns a reference to the humanize object.\n\n####humanize.time()####\nRetrieves the current time in seconds\n\n####humanize.date(format [, timestamp / JS Date Object = new Date()])####\nThis is a port of [php.js date](http://phpjs.org/functions/date:380) and behaves exactly like [PHP's date](http://php.net/manual/en/function.date.php)\n\n####humanize.numberFormat(number [, decimals = 2, decPoint = '.', thousandsSep = ','])####\nFormat a number to have decimal significant decimal places, using decPoint as the decimal separator, and thousandsSep as thousands separater\n\n####humanize.naturalDay(timestamp [, format = 'Y-m-d'])####\nReturns 'today', 'tomorrow' or 'yesterday', as appropriate, otherwise format the date using the passed format with humanize.date()\n\n####humanize.relativeTime(timestamp)####\nReturns a relative time to the current time, seconds as the most granular up to years to the least granular.\n\n####humanize.ordinal(integer)####\nConverts a number into its [ordinal representation](http://en.wikipedia.org/wiki/Ordinal_number_\\(linguistics\\)).\n\n####humanize.filesize(filesize [, kilo = 1024, decimals = 2, decPoint = '.', thousandsSep = ',']) ####\nConverts a byte count to a human readable value using kilo as the basis, and numberFormat formatting\n\n####humanize.linebreaks(string)####\nConverts a string's newlines into properly formatted html ie. one new line -> br, two new lines -> p, entire thing wrapped in p\n\n####humanize.nl2br(string)####\nConverts a string's newlines into br's\n\n####humanize.truncatechars(string, length)####\nTruncates a string to length-1 and appends '…'. If string is shorter than length, then no-op\n\n####humanize.truncatewords(string, numWords)####\nTruncates a string to only include the first numWords words and appends '…'. If string has fewer words than newWords, then no-op\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/taijinlee/humanize.git"
  },
  "scripts": {
    "test": "./node_modules/jshint/bin/hint humanize.js; find specs -type f -a -name *.spec.js -exec ./node_modules/mocha/bin/mocha --globals requirejsVars -R list --require should {} \\;"
  },
  "version": "0.0.9"
}
