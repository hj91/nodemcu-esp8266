"use strict";module.exports=function(t){var i=require("./core/bacnet-core"),n=require("@biancoroyal/bacstack");t.nodes.registerType("BACnet-Client",function(e){t.nodes.createNode(this,e),this.name=e.name,this.adpuTimeout=e.adpuTimeout||6e3,this.port=e.port||47808,this.IPAddress=e.IPAddress||null,this.broadcastAddress=e.broadcastAddress||null;var s=this;s.devices=[],s.IPAddress?(i.internalDebugLog("client with IP settings"),s.client=new n({adpuTimeout:s.adpuTimeout,port:s.port,interface:s.IPAddress,broadcastAddress:s.broadcastAddress})):(i.internalDebugLog("client without IP settings"),s.client=new n({adpuTimeout:s.adpuTimeout,port:s.port})),s.client&&(s.client.on("iAm",function(e){s.devices.push(e),i.internalDebugLog("iAm Event"),i.internalDebugLog("address: ",e.address),i.internalDebugLog("deviceId: ",e.deviceId),i.internalDebugLog("maxAdpu: ",e.maxAdpu),i.internalDebugLog("segmentation: ",e.segmentation),i.internalDebugLog("vendorId: ",e.vendorId)}),s.client.on("timeout",function(){i.internalDebugLog("timeout")}),s.client.whoIs(),s.client.on("error",function(e){s.error(e,{payload:"BACnet Client Error"}),s.client.close(),s.client=null,s.devices=[],s.client=new n({adpuTimeout:s.adpuTimeout,port:s.port,interface:s.IPAddress,broadcastAddress:s.broadcastAddress})})),s.on("input",function(e){e.devices=s.devices,s.send(e)}),s.on("close",function(e){s.client&&(s.client.close(),s.client=null),e()}),s.whoIsExplicit=function(e,t,i,n){s.devices=[];var o={lowLimit:e,highLimit:t,deviceIPAddress:i};s.client.whoIs(o),setTimeout(n,3e3)},s.whoIs=function(e){s.devices=[],s.client.whoIs(),setTimeout(e,3e3)}})};
//# sourceMappingURL=maps/bacnet-client.js.map
