{"version":3,"sources":["core/opcua-iiot-core-browser.js"],"names":["require","install","de","biancoroyal","opcua","iiot","core","browser","crawler","internalDebugLog","detailDebugLog","browse","session","nodeIdToBrowse","this","reject","browseOptions","nodeId","referenceTypeId","includeSubtypes","browseDirection","coreBrowser","nodeOPCUA","browse_service","BrowseDirection","Forward","resultMask","err","browseResult","Promise","browseAddressSpaceItems","addressSpaceItems","forEach","item","push","resolve","createCrawler","NodeCrawler","crawl","nodeIdToCrawl","msg","message","Object","assign","Error","cacheNode","crawlerResult","follow","data","onBrowse","crawlAddressSpaceItems","rootNodeId","browseToRoot","OBJECTS_ROOT","payload","actiontype","root","transformToEntry","reference","toJSON","toString","isForward","browseName","displayName","typeDefinition","node","nodeClass","browseNode","browseErrorHandling","lists","results","_typeof","showErrors","error","items","isSessionBad","connector","browseTopic","length","setNodeStatusTo","module","exports"],"mappings":"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","file":"../../core/opcua-iiot-core-browser.js","sourcesContent":["/**\n The BSD 3-Clause License\n\n Copyright 2017,2018 - Klaus Landsdorf (http://bianco-royal.de/)\n Copyright 2015,2016 - Mika Karaila, Valmet Automation Inc. (node-red-contrib-opcua)\n All rights reserved.\n node-red-contrib-iiot-opcua\n */\n'use strict'\nrequire('source-map-support').install()\n\n/**\n * Nested namespace settings.\n *\n * @type {{biancoroyal: {opcua: {iiot: {core: {browser: {}}}}}}}\n *\n * @Namesapce de.biancoroyal.opcua.iiot.core.browser\n */\nvar de = de || {biancoroyal: {opcua: {iiot: {core: {browser: {crawler: {}}}}}}} // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.browser.core = de.biancoroyal.opcua.iiot.core.browser.core || require('./opcua-iiot-core') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.browser.internalDebugLog = de.biancoroyal.opcua.iiot.core.browser.internalDebugLog || require('debug')('opcuaIIoT:browser') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.browser.detailDebugLog = de.biancoroyal.opcua.iiot.core.browser.detailDebugLog || require('debug')('opcuaIIoT:browser:details') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.browser.crawler.internalDebugLog = de.biancoroyal.opcua.iiot.core.browser.crawler.internalDebugLog || require('debug')('opcuaIIoT:browser:crawler') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.browser.crawler.detailDebugLog = de.biancoroyal.opcua.iiot.core.browser.crawler.detailDebugLog || require('debug')('opcuaIIoT:browser:crawler:details') // eslint-disable-line no-use-before-define\n\nde.biancoroyal.opcua.iiot.core.browser.browse = function (session, nodeIdToBrowse) {\n  let coreBrowser = this\n  return new Promise(\n    function (resolve, reject) {\n      let browseOptions = [\n        {\n          nodeId: nodeIdToBrowse,\n          referenceTypeId: 'Organizes',\n          includeSubtypes: true,\n          browseDirection: coreBrowser.core.nodeOPCUA.browse_service.BrowseDirection.Forward,\n          resultMask: 63\n        },\n        {\n          nodeId: nodeIdToBrowse,\n          referenceTypeId: 'Aggregates',\n          includeSubtypes: true,\n          browseDirection: coreBrowser.core.nodeOPCUA.browse_service.BrowseDirection.Forward,\n          resultMask: 63\n        }\n      ]\n\n      session.browse(browseOptions, function (err, browseResult) {\n        if (err) {\n          reject(err)\n        } else {\n          resolve(browseResult)\n        }\n      })\n    }\n  )\n}\n\nde.biancoroyal.opcua.iiot.core.browser.browseAddressSpaceItems = function (session, addressSpaceItems) {\n  let coreBrowser = this\n  return new Promise(\n    function (resolve, reject) {\n      let browseOptions = []\n\n      addressSpaceItems.forEach(function (item) {\n        browseOptions.push({\n          nodeId: item.nodeId,\n          referenceTypeId: 'Organizes',\n          includeSubtypes: true,\n          browseDirection: coreBrowser.core.nodeOPCUA.browse_service.BrowseDirection.Forward,\n          resultMask: 63\n        })\n\n        browseOptions.push({\n          nodeId: item.nodeId,\n          referenceTypeId: 'Aggregates',\n          includeSubtypes: true,\n          browseDirection: coreBrowser.core.nodeOPCUA.browse_service.BrowseDirection.Forward,\n          resultMask: 63\n        })\n      })\n\n      session.browse(browseOptions, function (err, browseResult) {\n        if (err) {\n          reject(err)\n        } else {\n          resolve(browseResult)\n        }\n      })\n    }\n  )\n}\n\nde.biancoroyal.opcua.iiot.core.browser.createCrawler = function (session) {\n  this.core.assert(session !== null)\n  return new this.core.nodeOPCUA.NodeCrawler(session)\n}\n\nde.biancoroyal.opcua.iiot.core.browser.crawl = function (session, nodeIdToCrawl, msg) {\n  let coreBrowser = this\n  return new Promise(\n    function (resolve, reject) {\n      if (!nodeIdToCrawl) {\n        reject(new Error('NodeId To Crawl Not Valid'))\n        return\n      }\n\n      const message = Object.assign({}, msg)\n      const crawler = coreBrowser.createCrawler(session)\n      let crawlerResult = []\n\n      const data = {\n        onBrowse: function (crawler, cacheNode) {\n          crawlerResult.push(cacheNode)\n          coreBrowser.core.nodeOPCUA.NodeCrawler.follow(crawler, cacheNode, this)\n        }\n      }\n\n      crawler.crawl(nodeIdToCrawl, data, function (err) {\n        if (err) {\n          reject(err)\n        } else {\n          resolve({ rootNodeId: nodeIdToCrawl, message, crawlerResult })\n        }\n      })\n    })\n}\n\nde.biancoroyal.opcua.iiot.core.browser.crawlAddressSpaceItems = function (session, msg) {\n  let coreBrowser = this\n  return new Promise(\n    function (resolve, reject) {\n      if (!msg.addressSpaceItems) {\n        reject(new Error('AddressSpace Items Not Valid To Crawl'))\n        return\n      }\n\n      const message = Object.assign({}, msg)\n      const crawler = coreBrowser.createCrawler(session)\n      let crawlerResult = []\n\n      const data = {\n        onBrowse (crawler, cacheNode) {\n          if (!cacheNode) {\n            coreBrowser.internalDebugLog('Item Not To Crawl - Missing NodeId')\n          }\n          crawlerResult.push(cacheNode)\n          coreBrowser.core.nodeOPCUA.NodeCrawler.follow(crawler, cacheNode, this)\n        }\n      }\n\n      message.addressSpaceItems.forEach((item) => {\n        if (!item.nodeId) {\n          coreBrowser.internalDebugLog('Item Not To Crawl - Missing NodeId')\n          return\n        }\n\n        crawler.crawl(item.nodeId, data, function (err) {\n          if (err) {\n            reject(err)\n          } else {\n            resolve({ rootNodeId: item.nodeId, message, crawlerResult })\n          }\n        })\n      })\n    })\n}\n\nde.biancoroyal.opcua.iiot.core.browser.browseToRoot = function () {\n  this.detailDebugLog('Browse To Root ' + this.core.OBJECTS_ROOT)\n  return this.core.OBJECTS_ROOT\n}\n\nde.biancoroyal.opcua.iiot.core.browser.extractNodeIdFromTopic = function (msg, node) {\n  let rootNodeId = null\n\n  if (msg.payload.actiontype === 'browse') { // event driven browsing\n    if (msg.payload.root && msg.payload.root.nodeId) {\n      this.internalDebugLog('Root Selected External ' + msg.payload.root)\n      rootNodeId = msg.payload.root.nodeId\n    } else {\n      rootNodeId = node.nodeId\n    }\n    this.detailDebugLog('Extracted NodeId ' + rootNodeId)\n\n    rootNodeId = rootNodeId || this.browseToRoot()\n  }\n\n  return rootNodeId\n}\n\nde.biancoroyal.opcua.iiot.core.browser.transformToEntry = function (reference) {\n  if (reference) {\n    try {\n      return reference.toJSON()\n    } catch (err) {\n      this.internalDebugLog(err)\n\n      if (reference.referenceTypeId) {\n        return {\n          referenceTypeId: reference.referenceTypeId.toString(),\n          isForward: reference.isForward,\n          nodeId: reference.nodeId.toString(),\n          browseName: reference.browseName.toString(),\n          displayName: reference.displayName.toString(),\n          nodeClass: reference.nodeClass.toString(),\n          typeDefinition: reference.typeDefinition.toString()\n        }\n      }\n    }\n  } else {\n    this.internalDebugLog('Empty Reference On Browse')\n  }\n  return reference\n}\n\nde.biancoroyal.opcua.iiot.core.browser.initClientNode = function (node) {\n  let browseNode = this.core.initClientNode(node)\n  browseNode.items = []\n  browseNode.browseTopic = this.core.OBJECTS_ROOT\n  browseNode.messageList = []\n  return browseNode\n}\n\nde.biancoroyal.opcua.iiot.core.browser.browseErrorHandling = function (node, err, msg, lists) {\n  let results = lists.browserResults || []\n\n  if (err) {\n    this.internalDebugLog(typeof node + 'Error ' + err)\n    if (node.showErrors) {\n      node.error(err, msg)\n    }\n\n    if (this.core.isSessionBad(err) && node.connector) {\n      node.connector.resetBadSession()\n    }\n  } else {\n    this.internalDebugLog(typeof node + ' Done With Error')\n    if (results.length) {\n      this.detailDebugLog(results.length + 'items in lists of browser results')\n    }\n  }\n\n  if (node.showStatusActivities) {\n    this.core.setNodeStatusTo(node, 'error')\n  }\n}\n\nmodule.exports = de.biancoroyal.opcua.iiot.core.browser\n"]}