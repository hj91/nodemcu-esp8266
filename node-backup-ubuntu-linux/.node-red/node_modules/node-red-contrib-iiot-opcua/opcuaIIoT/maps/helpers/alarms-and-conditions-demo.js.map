{"version":3,"sources":["helpers/alarms-and-conditions-demo.js"],"names":["assert","require","constructAlarmAddressSpaceDemo","test","addressSpace","installAlarmsAndConditionsService","browseName","getOwnNamespace","addObject","description","organizedBy","notifierOf","rootFolder","objects","server","displayName","addVariable","propertyOf","tanks","dataType","eventSourceOf","componentOf","findEventType","conditionSource","instantiateExclusiveLimitAlarm","exclusiveLimitAlarmType","conditionName","oilTankLevel","optionals","inputNode","highHighLimit","highLimit","lowLimit","nonExclusiveLimitAlarmType","gasTankLevelCondition","instantiateNonExclusiveLimitAlarm","gasTankLevel","tankLevel2","tankLevelCondition2","tankLevel","tankLevelCondition","oilTankLevelCondition","exports"],"mappings":"AAuBA,aAEA,IAAIA,OAASC,QAAQ,iBAErB,SAASC,+BAAgCC,EAAMC,GAC7CA,EAAaC,oCAGXC,IAAAA,EAAUF,EADyCG,kBAAAC,UAAA,CAEnDC,WAAW,QACXC,YAAaN,qCACbO,YAAYP,EAAaQ,WAAWC,QAJtCF,WAAAP,EAAAQ,WAAAC,QAAAC,SASEC,EAAaX,EAF+CG,kBAAAS,YAAA,CAG5DP,WAAW,eACXQ,YAAYC,iBACZC,YAAU,wDACVC,WAAAA,EANFD,SASA,SACAC,cAAAF,IAOEG,EADiHjB,EAAAkB,cAAA,2BAEjHC,OAFiH,MAEjHA,GAEAR,IAAAA,EAAaX,EAJoGG,kBAAAiB,+BAAAC,EAAA,CAKjHhB,YAAaS,EACbQ,gBAAeC,EACfC,WACE,wBADSb,YAPsG,2BAUjHc,YAAWF,oCAAcD,cAAA,oBACzBI,UAAAA,CACAC,iBAZiH,WAAnHF,UAgBAF,EACAG,cAAA,GACAC,UAAA,GALEC,SAAU,KAWVb,EAAUf,EALkDG,kBAAAS,YAAA,CAM5DI,WAAAA,eANFL,YAAA,iBASAN,YAAIwB,wDACJjC,WAAOiC,EAEPd,SAAIe,SACFb,cAAaH,IAGbH,EAAaX,EAJ0GkB,cAAA,8BAKvHb,OAAa,MAAbA,GAEAmB,IAAAA,EACExB,EADSG,kBACmB4B,kCAAAF,EAAA,CADnBZ,YAP4GH,EAUvHW,gBAAWO,EAAc9B,WAAA,wBACzBwB,YAAa,2BACbC,YAAW,uCACXC,cAAU,oBAbZJ,UAAA,CAgBI,iBAAaD,WAGjBxB,UAAKkC,EACLlC,cAAKmC,GACNP,UAAA,GARGC,SAAU,KAGZ7B,EAAKoC,UAAYZ,EACjBxB,EAAKqC,mBAAqBC,EAE1BtC,EAAKkC,WAAaD,EAClBjC,EAAKmC,oBAAsBJ,EAG7BQ,QAAQxC,+BAAiCA","file":"../../helpers/alarms-and-conditions-demo.js","sourcesContent":["/*\n The MIT License (MIT)\n\n Copyright (c) 2017,2018 Klaus Landsdorf\n Copyright (c) 2014-2017 Etienne Rossignon\n\n Permission is hereby granted, free of charge, to any person obtaining a copy of\n this software and associated documentation files (the \"Software\"), to deal in\n the Software without restriction, including without limitation the rights to\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n the Software, and to permit persons to whom the Software is furnished to do so,\n subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n'use strict'\n\nlet assert = require('better-assert')\n\nfunction constructAlarmAddressSpaceDemo (test, addressSpace) {\n  addressSpace.installAlarmsAndConditionsService()\n\n  let tanks = addressSpace.getOwnNamespace().addObject({\n    browseName: 'Tanks',\n    description: 'The Object representing some tanks',\n    organizedBy: addressSpace.rootFolder.objects,\n    notifierOf: addressSpace.rootFolder.objects.server\n  })\n\n  let oilTankLevel = addressSpace.getOwnNamespace().addVariable({\n    browseName: 'OilTankLevel',\n    displayName: 'Oil Tank Level',\n    description: 'Fill level in percentage (0% to 100%) of the oil tank',\n    propertyOf: tanks,\n    dataType: 'Double',\n    eventSourceOf: tanks\n  })\n\n  // ---------------------------------------------------------------------------------\n  // Let's create a exclusive Limit Alarm that automatically raise itself\n  // when the tank level is out of limit\n  // ---------------------------------------------------------------------------------\n  let exclusiveLimitAlarmType = addressSpace.findEventType('ExclusiveLimitAlarmType')\n  assert(exclusiveLimitAlarmType != null)\n\n  let oilTankLevelCondition = addressSpace.getOwnNamespace().instantiateExclusiveLimitAlarm(exclusiveLimitAlarmType, {\n    componentOf: tanks,\n    conditionSource: oilTankLevel,\n    browseName: 'OilTankLevelCondition',\n    displayName: 'Oil Tank Level Condition',\n    description: 'ExclusiveLimitAlarmType Condition',\n    conditionName: 'OilLevelCondition',\n    optionals: [\n      'ConfirmedState', 'Confirm' // confirm state and confirm Method\n    ],\n    inputNode: oilTankLevel, // the letiable that will be monitored for change\n    highHighLimit: 0.9,\n    highLimit: 0.8,\n    lowLimit: 0.2\n  })\n\n  // --------------------------------------------------------------\n  // Let's create a second letiable with no Exclusive alarm\n  // --------------------------------------------------------------\n  let gasTankLevel = addressSpace.getOwnNamespace().addVariable({\n    browseName: 'GasTankLevel',\n    displayName: 'Gas Tank Level',\n    description: 'Fill level in percentage (0% to 100%) of the gas tank',\n    propertyOf: tanks,\n    dataType: 'Double',\n    eventSourceOf: tanks\n  })\n\n  let nonExclusiveLimitAlarmType = addressSpace.findEventType('NonExclusiveLimitAlarmType')\n  assert(nonExclusiveLimitAlarmType != null)\n\n  let gasTankLevelCondition = addressSpace.getOwnNamespace().instantiateNonExclusiveLimitAlarm(nonExclusiveLimitAlarmType, {\n    componentOf: tanks,\n    conditionSource: gasTankLevel,\n    browseName: 'GasTankLevelCondition',\n    displayName: 'Gas Tank Level Condition',\n    description: 'NonExclusiveLimitAlarmType Condition',\n    conditionName: 'GasLevelCondition',\n    optionals: [\n      'ConfirmedState', 'Confirm' // confirm state and confirm Method\n    ],\n    inputNode: gasTankLevel, // the letiable that will be monitored for change\n    highHighLimit: 0.9,\n    highLimit: 0.8,\n    lowLimit: 0.2\n  })\n\n  test.tankLevel = oilTankLevel\n  test.tankLevelCondition = oilTankLevelCondition\n\n  test.tankLevel2 = gasTankLevel\n  test.tankLevelCondition2 = gasTankLevelCondition\n}\n\nexports.constructAlarmAddressSpaceDemo = constructAlarmAddressSpaceDemo\n"]}