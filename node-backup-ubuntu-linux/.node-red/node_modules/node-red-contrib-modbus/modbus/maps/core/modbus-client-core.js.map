{"version":3,"sources":["core/modbus-client-core.js"],"names":["require","install","de","biancoroyal","modbus","core","client","internalDebug","internalDebugFSM","modbusSerialDebug","Stately","stateLogEnabled","networkErrors","createStatelyMachine","this","machine","NEW","init","stop","BROKEN","INIT","openserial","connect","failure","OPENED","close","CONNECTED","activate","ACTIVATED","read","write","queue","QUEUEING","empty","EMPTY","READING","WRITING","CLOSED","break","FAILED","STOPED","messagesAllowedStates","module","exports"],"mappings":"AAOA,aACAA,QAAQ,sBAAsBC,UAE9B,IAAIC,GAAKA,IAAM,CAACC,YAAa,CAACC,OAAQ,CAACC,KAAM,CAACC,OAAQ,OAAtDJ,GAAAC,YAAeC,OAACD,KAAAA,OAAcC,cAAgBE,GAAAA,YAAjBF,OAAgCC,KAAAC,OAAAC,eAAAP,QAAA,QAAAA,CAAA,6BAA9CE,GACfA,YAAGC,OAAYC,KAAOC,OAAKC,iBAAuBJ,GAAGC,YAAYC,OAAOC,KAAKC,OAAOC,kBAAiBP,QAAQ,QAARA,CAAiB,iCACtHE,GAAGC,YAAYC,OAAOC,KAAKC,OAAOE,kBAAmBN,GAAGC,YAAYC,OAAOC,KAAKC,OAAOE,mBAAoBR,QAAQ,QAARA,CAAiB,iBAC5HE,GAAGC,YAAYC,OAAOC,KAAKC,OAAOG,QAAAA,GAAAA,YAAuBN,OAAAA,KAAYC,OAAOC,SAAYI,QAAAA,cACxFP,GAAGC,YAAYC,OAAOC,KAAKC,OAAOI,gBAAaP,GAAAA,YAAmBE,OAAKC,KAAOI,OAAlCC,gBAG5CT,GAAGC,YAAYC,OAAOC,KAAKC,OAAOM,cAAgB,CAAC,kBAAmB,YAAa,aAAc,YAAjGV,eAAeE,eAAmBQ,cAAlC,WAEE,YAAa,YAAa,WAAY,cAAe,SAAU,gBAG/DV,GAAAC,YAAKQ,OAALN,KAAuBC,OAAvBO,qBAAA,WAGE,OAHFC,KAAKH,iBAAkB,EAGrBT,GAAOC,YAASC,OAAQC,KAAAC,OAAQI,QADuBK,QAAA,CAEvDC,IAAA,CAAAC,KAAW,OAAQC,KAAQ,UAC3BC,OAAS,CAAAF,KAAA,OAAcC,KAAU,UACjCE,KAAA,CAAAC,WAAsB,SAAAC,QAAa,YAAqBC,QAAS,UACjEC,OAAA,CAAAF,QAAc,YAAmBC,QAAY,SAAAE,MAAa,UAC1DC,UAAa,CAAAD,MAAA,SAAAE,SAAA,YAAAJ,QAAA,UACXK,UAAS,CACTH,MAAQ,SACRI,KAAA,UACAC,MAAS,UACTC,MAAA,WAXqDR,QAAA,UAcrDS,SAAA,CACAL,SAAQ,YACRE,KAAA,UACAC,MAAS,UACTG,MAAA,QACAV,QAAS,SAnB4CE,MAAA,UAsBvDS,MAAA,CAAAH,MAAY,WAAYR,QAAa,SAAWE,MAtBO,UAuBvDU,QAAW,CAAAR,SAAC,YAADJ,QAA0B,UACrCa,QAAU,CAACT,SAAW,YAAUJ,QAAS,UACzCc,OAAU,CAAAd,QAAU,SAAUe,MAAS,UACvCC,OAAU,CAAAd,MAAC,SAADa,MAAoB,SAAYpB,KAAhC,UA1BLsB,OAAP,CAAAT,MAAA,SAAAJ,SAAA,WAHF,QAiCAzB,GAAGC,YAAYC,OAAOC,KAAKC,OAAOmC,sBAAwB,CAAC,YAAa,WAAY,SAEpFC,OAAOC,QAAUzC,GAAGC,YAAYC,OAAOC,KAAKC","file":"../../core/modbus-client-core.js","sourcesContent":["/**\n Copyright (c) 2016,2017,2018 Klaus Landsdorf (http://bianco-royal.de/)\n All rights reserved.\n node-red-contrib-modbus\n\n @author <a href=\"mailto:klaus.landsdorf@bianco-royal.de\">Klaus Landsdorf</a> (Bianco Royal)\n */\n'use strict'\nrequire('source-map-support').install()\n\nvar de = de || {biancoroyal: {modbus: {core: {client: {}}}}} // eslint-disable-line no-use-before-define\nde.biancoroyal.modbus.core.client.internalDebug = de.biancoroyal.modbus.core.client.internalDebug || require('debug')('contribModbus:core:client') // eslint-disable-line no-use-before-define\nde.biancoroyal.modbus.core.client.internalDebugFSM = de.biancoroyal.modbus.core.client.internalDebugFSM || require('debug')('contribModbus:core:client:fsm') // eslint-disable-line no-use-before-define\nde.biancoroyal.modbus.core.client.modbusSerialDebug = de.biancoroyal.modbus.core.client.modbusSerialDebug || require('debug')('modbus-serial') // eslint-disable-line no-use-before-define\nde.biancoroyal.modbus.core.client.Stately = de.biancoroyal.modbus.core.client.Stately || require('stately.js') // eslint-disable-line no-use-before-define\nde.biancoroyal.modbus.core.client.stateLogEnabled = de.biancoroyal.modbus.core.client.stateLogEnabled // eslint-disable-line no-use-before-define\n\nde.biancoroyal.modbus.core.client.networkErrors = ['ESOCKETTIMEDOUT', 'ETIMEDOUT', 'ECONNRESET', 'ENETRESET',\n  'ECONNABORTED', 'ECONNREFUSED', 'ENETUNREACH', 'ENOTCONN',\n  'ESHUTDOWN', 'EHOSTDOWN', 'ENETDOWN', 'EWOULDBLOCK', 'EAGAIN', 'EHOSTUNREACH']\n\nde.biancoroyal.modbus.core.client.createStatelyMachine = function () {\n  this.stateLogEnabled = false\n\n  return de.biancoroyal.modbus.core.client.Stately.machine({\n    'NEW': {'init': 'INIT', 'stop': 'STOPED'},\n    'BROKEN': {'init': 'INIT', 'stop': 'STOPED'},\n    'INIT': {'openserial': 'OPENED', 'connect': 'CONNECTED', 'failure': 'FAILED'},\n    'OPENED': {'connect': 'CONNECTED', 'failure': 'FAILED', 'close': 'CLOSED'},\n    'CONNECTED': {'close': 'CLOSED', 'activate': 'ACTIVATED', 'failure': 'FAILED'},\n    'ACTIVATED': {\n      'close': 'CLOSED',\n      'read': 'READING',\n      'write': 'WRITING',\n      'queue': 'QUEUEING',\n      'failure': 'FAILED'\n    },\n    'QUEUEING': {\n      'activate': 'ACTIVATED',\n      'read': 'READING',\n      'write': 'WRITING',\n      'empty': 'EMPTY',\n      'failure': 'FAILED',\n      'close': 'CLOSED'\n    },\n    'EMPTY': {'queue': 'QUEUEING', 'failure': 'FAILED', 'close': 'CLOSED'},\n    'READING': {'activate': 'ACTIVATED', 'failure': 'FAILED'},\n    'WRITING': {'activate': 'ACTIVATED', 'failure': 'FAILED'},\n    'CLOSED': {'failure': 'FAILED', 'break': 'BROKEN'},\n    'FAILED': {'close': 'CLOSED', 'break': 'BROKEN', 'stop': 'STOPED'},\n    'STOPED': {'queue': 'STOPED', 'activate': 'STOPED'}\n  }, 'NEW')\n}\n\nde.biancoroyal.modbus.core.client.messagesAllowedStates = ['ACTIVATED', 'QUEUEING', 'EMPTY']\n\nmodule.exports = de.biancoroyal.modbus.core.client\n"]}