{"version":3,"sources":["core/modbus-core.js"],"names":["require","install","de","biancoroyal","modbus","core","internalDebug","getObjectId","ObjectID","getOriginalMessage","messageList","msg","origMsg","messageId","this","delete","payload","functionCodeModbusRead","dataType","functionCodeModbusWrite","buildMessage","values","response","topic","responseBuffer","rawMsg","Object","assign","module","exports"],"mappings":"AAOA,aACAA,QAAQ,sBAAsBC,UAE9B,IAAIC,GAAKA,IAAM,CAACC,YAAa,CAACC,OAAQ,CAACC,KAAM,MAA7CH,GAAAC,YAAeC,OAACD,KAAAA,cAAuBE,GAAAA,YAAYD,OAAAC,KAAAC,eAAAN,QAAA,QAAAA,CAAA,sBAApCE,GACfA,YAAGC,OAAYC,KAAOC,SAAKC,GAAAA,YAAmBH,OAAYC,KAAAA,UAAYE,QAA3B,QAA4CN,SAGvFE,GAAGC,YAAYC,OAAOC,KAAKE,YAAc,WAAzCL,OAAGC,IAAAA,GAAYC,YAAYG,OAAAA,KAA3BC,UAIAN,GAAGC,YAAYC,OAAOC,KAAKI,mBAAqB,SAAUC,EAAaC,GAAvET,IAAGC,EAAYC,EAAYK,IAAAA,EAAAA,QAAAA,WAYzB,OATIG,GAAWA,EAAQC,UAAnBD,EAAWA,OAAQC,EAAWA,YAChCC,KAAKJ,cAAYK,iEAA2BH,EAAAC,YAD9CX,GAAAC,YAIOC,OAAAC,KAAAC,cAAA,qBAAAK,EAAAK,QAAAH,WACLX,EAAGC,GAIES,GAGTV,GAAGC,YAAYC,OAAOC,KAAKY,uBAAyB,SAAUC,GAA9DhB,OAAGC,GACD,IAAA,OACE,OAAK,EACH,IAAA,QACF,OAAK,EACH,IAAA,kBACF,OAAK,EACH,IAAA,gBACF,OAAK,EACH,QACF,OAAA,IAKJD,GAAGC,YAAYC,OAAOC,KAAKc,wBAA0B,SAAUD,GAA/DhB,OAAGC,GACD,IAAA,OACE,OAAK,EACH,IAAA,kBACF,OAAK,EACH,IAAA,SACF,OAAK,GACH,IAAA,oBACF,OAAK,GACH,QACF,OAAA,IAKJD,GAAGC,YAAYC,OAAOC,KAAKe,aAAe,SAAUV,EAAaW,EAAQC,EAAUX,GAAnFT,IAAGC,EAAYC,KAAfK,mBAAAC,EAAoDA,GAClDE,EAAIA,QAAUS,EACdT,EAAQI,MAARL,EAAkBU,MAClBT,EAAQW,eAARD,EACAV,EAAQY,MAAAA,EAGR,IAAIC,EAASC,OAAOC,OAAO,GAAIf,GAK/B,OALAa,EAAIA,QAASC,EACbD,EAAOT,OAAPK,SACOA,EAAAA,eAGA,CAACT,EAASa,IAGnBG,OAAOC,QAAU3B,GAAGC,YAAYC,OAAOC","file":"../../core/modbus-core.js","sourcesContent":["/**\n Copyright (c) 2016,2017,2018 Klaus Landsdorf (http://bianco-royal.de/)\n All rights reserved.\n node-red-contrib-modbus\n\n @author <a href=\"mailto:klaus.landsdorf@bianco-royal.de\">Klaus Landsdorf</a> (Bianco Royal)\n */\n'use strict'\nrequire('source-map-support').install()\n\nvar de = de || {biancoroyal: {modbus: {core: {}}}} // eslint-disable-line no-use-before-define\nde.biancoroyal.modbus.core.internalDebug = de.biancoroyal.modbus.core.internalDebug || require('debug')('contribModbus:core') // eslint-disable-line no-use-before-define\nde.biancoroyal.modbus.core.ObjectID = de.biancoroyal.modbus.core.ObjectID || require('bson').ObjectID // eslint-disable-line no-use-before-define\n\nde.biancoroyal.modbus.core.getObjectId = function () {\n  return new de.biancoroyal.modbus.core.ObjectID()\n}\n\nde.biancoroyal.modbus.core.getOriginalMessage = function (messageList, msg) {\n  let origMsg = messageList.get(msg.payload.messageId)\n\n  if (origMsg && origMsg.messageId) {\n    if (!messageList.delete(origMsg.messageId)) {\n      this.internalDebug('WARNING: getOriginalMessage could not delete message from map ' + origMsg.messageId)\n    }\n  } else {\n    de.biancoroyal.modbus.core.internalDebug('Message Not Found ' + msg.payload.messageId)\n    origMsg = msg\n  }\n\n  return origMsg\n}\n\nde.biancoroyal.modbus.core.functionCodeModbusRead = function (dataType) {\n  switch (dataType) {\n    case 'Coil':\n      return 1\n    case 'Input':\n      return 2\n    case 'HoldingRegister':\n      return 3\n    case 'InputRegister':\n      return 4\n    default:\n      return -1\n  }\n}\n\nde.biancoroyal.modbus.core.functionCodeModbusWrite = function (dataType) {\n  switch (dataType) {\n    case 'Coil':\n      return 5\n    case 'HoldingRegister':\n      return 6\n    case 'MCoils':\n      return 15\n    case 'MHoldingRegisters':\n      return 16\n    default:\n      return -1\n  }\n}\n\nde.biancoroyal.modbus.core.buildMessage = function (messageList, values, response, msg) {\n  let origMsg = this.getOriginalMessage(messageList, msg)\n  origMsg.payload = values\n  origMsg.topic = msg.topic\n  origMsg.responseBuffer = response\n  origMsg.input = msg\n\n  let rawMsg = Object.assign({}, origMsg)\n  rawMsg.payload = response\n  rawMsg.values = values\n  delete rawMsg['responseBuffer']\n\n  return [origMsg, rawMsg]\n}\n\nmodule.exports = de.biancoroyal.modbus.core\n"]}