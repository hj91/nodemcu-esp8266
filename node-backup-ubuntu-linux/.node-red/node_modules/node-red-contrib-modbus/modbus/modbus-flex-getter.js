"use strict";module.exports=function(s){require("source-map-support").install();var o=require("./modbus-basics"),i=require("./core/modbus-core"),r=require("./core/modbus-io-core"),d=require("debug")("contribModbus:flex:getter");s.nodes.registerType("modbus-flex-getter",function(e){s.nodes.createNode(this,e),this.name=e.name,this.showStatusActivities=e.showStatusActivities,this.showErrors=e.showErrors,this.connection=null,this.useIOFile=e.useIOFile,this.ioFile=s.nodes.getNode(e.ioFile),this.useIOForPayload=e.useIOForPayload,this.logIOActivities=e.logIOActivities;var a=this;a.bufferMessageList=new Map;var t=s.nodes.getNode(e.server);t.registerForModbus(a),o.initModbusClientEvents(a,t),o.setNodeStatusTo("waiting",a),a.onModbusReadDone=function(e,s){a.showStatusActivities&&o.setNodeStatusTo("reading done",a),a.send(r.buildMessageWithIO(a,e.data,e,s))},a.onModbusReadError=function(e,s){d(e.message),a.showErrors&&a.error(e,s),o.setModbusError(a,t,e,i.getOriginalMessage(a.bufferMessageList,s))},a.on("input",function(s){if(!o.invalidPayloadIn(s)&&t.client){try{if("string"==typeof s.payload&&(s.payload=JSON.parse(s.payload)),s.payload.fc=parseInt(s.payload.fc)||3,s.payload.unitid=parseInt(s.payload.unitid),s.payload.address=parseInt(s.payload.address)||0,s.payload.quantity=parseInt(s.payload.quantity)||1,!(Number.isInteger(s.payload.fc)&&1<=s.payload.fc&&s.payload.fc<=4))return void a.error("FC Not Valid",s);if(!(Number.isInteger(s.payload.address)&&0<=s.payload.address&&s.payload.address<=65535))return void a.error("Address Not Valid",s);if(!(Number.isInteger(s.payload.quantity)&&1<=s.payload.quantity&&s.payload.quantity<=65535))return void a.error("Quantity Not Valid",s);s.messageId=i.getObjectId(),a.bufferMessageList.set(s.messageId,s),s={topic:s.topic||a.id,payload:{value:s.payload.value||s.value,unitid:s.payload.unitid,fc:s.payload.fc,address:s.payload.address,quantity:s.payload.quantity,messageId:s.messageId},_msgid:s._msgid},t.emit("readModbus",s,a.onModbusReadDone,a.onModbusReadError)}catch(e){d(e.message),a.showErrors&&a.error(e,s)}a.showStatusActivities&&o.setNodeStatusTo(t.statlyMachine.getMachineState(),a)}}),a.on("close",function(e){o.setNodeStatusTo("closed",a),a.bufferMessageList.clear(),t.deregisterForModbus(a,e)})})};
//# sourceMappingURL=maps/modbus-flex-getter.js.map
