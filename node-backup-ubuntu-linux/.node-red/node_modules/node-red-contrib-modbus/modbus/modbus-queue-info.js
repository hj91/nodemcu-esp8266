"use strict";module.exports=function(t){require("source-map-support").install();var h=require("./modbus-basics"),u=require("debug")("contribModbus:queue");t.nodes.registerType("modbus-queue-info",function(e){t.nodes.createNode(this,e),this.name=e.name,this.topic=e.topic,this.unitid=parseInt(e.unitid),this.lowLowLevel=parseInt(e.lowLowLevel),this.lowLevel=parseInt(e.lowLevel),this.highLevel=parseInt(e.highLevel),this.highHighLevel=parseInt(e.highHighLevel),this.errorOnHighLevel=e.errorOnHighLevel,this.queueReadIntervalTime=e.queueReadIntervalTime||1e3;var n=this,a=t.nodes.getNode(e.server);a.registerForModbus(n),n.queueReadInterval=null,h.setNodeStatusTo("waiting",n),n.resetStates=function(){n.lowLowLevelReached=!0,n.lowLevelReached=!1,n.highLevelReached=!1,n.highHighLevelReached=!1},n.resetStates(),n.readFromQueue=function(){var e=n.unitid||1;if(a.bufferCommands){(e<0||255<e)&&(e=1);var i=a.bufferCommandList.get(e).length;if((!i||!n.lowLowLevelReached&&i<n.lowLowLevel)&&n.resetStates(),!n.lowLevelReached&&i>n.lowLowLevel&&i<n.lowLevel){n.lowLevelReached=!0;var t={payload:Date.now(),topic:n.topic,state:"low level reached",unitid:e,modbusClientName:a.name,items:i};n.send(t)}if(!n.highLevelReached&&i>n.lowLevel&&i>n.highLevel){n.highLevelReached=!0;var u={payload:Date.now(),topic:n.topic,state:"high level reached",unitid:e,modbusClientName:a.name,highLevel:n.highLevel,items:i};n.errorOnHighLevel?n.error(new Error("Queue High Level Reached"),u):n.warn(u),n.send(u)}if(!n.highHighLevelReached&&i>n.highLevel&&i>n.highHighLevel){n.highHighLevelReached=!0;var o={payload:Date.now(),topic:n.topic,state:"high high level reached",unitid:e,modbusClientName:a.name,highLevel:n.highLevel,highHighLevel:n.highHighLevel,items:i};n.error(new Error("Queue High High Level Reached"),o),n.send(o)}var l="blue";n.lowLevelReached&&(l="green"),n.highLevelReached&&(l=n.errorOnHighLevel?"red":"yellow"),n.highHighLevelReached&&(l="red"),n.status({fill:l,shape:"ring",text:"active unit "+e+" queue items: "+i})}else h.setNodeStatusTo("active unit "+e+" without queue",n)},n.onModbusInit=function(){n.readFromQueue()},n.onModbusActive=function(){n.readFromQueue()},n.onModbusQueue=function(){n.readFromQueue()},a.on("mbinit",n.onModbusInit),a.on("mbqueue",n.onModbusQueue),a.on("mbactive",n.onModbusActive),n.queueReadInterval=setInterval(n.readFromQueue,n.queueReadIntervalTime),n.on("input",function(e){if(e.queueEnabled=a.bufferCommands,Number.isInteger(n.unitid)?(e.queue=a.bufferCommandList.get(n.unitid),e.unitid=n.unitid):e.queues=a.bufferCommandList,e.queueOptions={date:Date.now(),state:"queue request",modbusClientName:a.name,lowlowLevel:n.lowlowLevel,lowLevel:n.lowLevel,highLevel:n.highLevel,highHighLevel:n.highHighLevel},e&&e.resetQueue&&a.bufferCommands){if(a.initQueue(),t.settings.verbose){var i="Init Queue By External Node";a.warn(i),u(i)}n.resetStates(),n.status({fill:"blue",shape:"ring",text:"active empty unit queue"}),e.queueOptions.state="queue reset done"}n.send(e)}),n.on("close",function(e){h.setNodeStatusTo("closed",n),n.queueReadInterval&&clearInterval(n.queueReadInterval),n.queueReadInterval=null,a.deregisterForModbus(n,e)})})};
//# sourceMappingURL=maps/modbus-queue-info.js.map
