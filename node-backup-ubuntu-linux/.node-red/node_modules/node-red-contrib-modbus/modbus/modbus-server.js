"use strict";module.exports=function(o){require("source-map-support").install();var t=require("jsmodbus"),i=require("net"),n=require("./modbus-basics"),u=require("debug")("contribModbus:server");try{o.nodes.registerType("modbus-server",function(e){o.nodes.createNode(this,e),this.name=e.name,this.logEnabled=e.logEnabled,this.hostname=e.hostname||"0.0.0.0",this.serverPort=parseInt(e.serverPort),this.responseDelay=parseInt(e.responseDelay),this.delayUnit=e.delayUnit,this.coilsBufferSize=parseInt(8*e.coilsBufferSize),this.holdingBufferSize=parseInt(8*e.holdingBufferSize),this.inputBufferSize=parseInt(8*e.inputBufferSize),this.discreteBufferSize=parseInt(8*e.discreteBufferSize),this.showErrors=e.showErrors;var s=this;s.netServer=null,s.modbusServer=null,n.setNodeStatusTo("initialized",s);var r="warn";o.settings.verbose&&(r="debug");try{s.netServer=new i.Server,s.modbusServer=new t.server.TCP(s.netServer,{logLabel:"ModbusServer",logLevel:r,logEnabled:s.logEnabled,responseDelay:n.calc_rateByUnit(s.responseDelay,s.delayUnit),coils:Buffer.alloc(s.coilsBufferSize,0),holding:Buffer.alloc(s.holdingBufferSize,0),input:Buffer.alloc(s.inputBufferSize,0),discrete:Buffer.alloc(s.discreteBufferSize,0)}),s.modbusServer.on("connection",function(e){u("Modbus Server client connection"),e&&e.socket&&u("Modbus Server client to "+JSON.stringify(e.socket.address())+" from "+e.socket.remoteAddress+" "+e.socket.remotePort),n.setNodeStatusTo("active",s)}),s.netServer.listen(s.serverPort,s.hostname,function(){u("Modbus Server listening on modbus://"+s.hostname+":"+s.serverPort),n.setNodeStatusTo("initialized",s)})}catch(e){u(e.message),s.showErrors&&s.warn(e),n.setNodeStatusTo("error",s)}s.on("input",function(e){var r;s.send([{type:"holding",message:r=e,payload:s.modbusServer.holding},{type:"coils",message:r,payload:s.modbusServer.coils},{type:"input",message:r,payload:s.modbusServer.input},{type:"discrete",message:r,payload:s.modbusServer.discrete}])}),s.on("close",function(e){n.setNodeStatusTo("closed",s),s.netServer&&s.netServer.close(function(){u("Modbus Server closed"),e()}),s.modbusServer=null})})}catch(e){console.log(e.message)}};
//# sourceMappingURL=maps/modbus-server.js.map
