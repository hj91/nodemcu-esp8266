"use strict";require("source-map-support").install();var de=de||{biancoroyal:{opcua:{iiot:{core:{connector:{}}}}}};de.biancoroyal.opcua.iiot.core.connector.core=de.biancoroyal.opcua.iiot.core.connector.core||require("./opcua-iiot-core"),de.biancoroyal.opcua.iiot.core.connector.internalDebugLog=de.biancoroyal.opcua.iiot.core.connector.internalDebugLog||require("debug")("opcuaIIoT:connector"),de.biancoroyal.opcua.iiot.core.connector.detailDebugLog=de.biancoroyal.opcua.iiot.core.connector.detailDebugLog||require("debug")("opcuaIIoT:connector:details"),de.biancoroyal.opcua.iiot.core.connector.libDebugLog=de.biancoroyal.opcua.iiot.core.connector.libDebugLog||require("debug")("opcuaIIoT:connector:nodeopcua"),de.biancoroyal.opcua.iiot.core.connector.Stately=de.biancoroyal.opcua.iiot.core.connector.Stately||require("stately.js"),de.biancoroyal.opcua.iiot.core.connector.createStatelyMachine=function(){return de.biancoroyal.opcua.iiot.core.connector.Stately.machine({IDLE:{initopcua:"INITOPCUA",lock:"LOCKED",end:"END"},INITOPCUA:{open:"OPEN",close:"CLOSED",lock:"LOCKED",end:"END"},OPEN:{sessionrequest:"SESSIONREQUESTED",close:"CLOSED",lock:"LOCKED",end:"END"},SESSIONREQUESTED:{open:"OPEN",sessionactive:"SESSIONACTIVE",lock:"LOCKED",end:"END"},SESSIONACTIVE:{open:"OPEN",sessionclose:"SESSIONCLOSED",lock:"LOCKED",end:"END"},SESSIONRESTART:{idle:"IDLE",open:"OPEN",sessionclose:"SESSIONCLOSED",close:"CLOSED",lock:"LOCKED",end:"END"},SESSIONCLOSED:{idle:"IDLE",open:"OPEN",close:"CLOSED",sessionrestart:"SESSIONRESTART",lock:"LOCKED",unlock:"UNLOCKED",end:"END"},CLOSED:{open:"OPEN",lock:"LOCKED",unlock:"UNLOCKED",end:"END",idle:"IDLE"},LOCKED:{sessionclose:"SESSIONCLOSED",open:"OPEN",close:"CLOSED",unlock:"UNLOCKED",lock:"LOCKED",sessionrestart:"SESSIONRESTART",reconfigure:"RECONFIGURED",stopopcua:"STOPPED",renew:"RENEW",end:"END"},UNLOCKED:{idle:"IDLE",lock:"LOCKED",open:"OPEN",end:"END"},RECONFIGURED:{},RENEW:{},STOPPED:{},END:{}},"IDLE")},de.biancoroyal.opcua.iiot.core.connector.setListenerToClient=function(n){var t=de.biancoroyal.opcua.iiot.core.connector;if(!n.opcuaClient)return t.internalDebugLog("Client Not Valid On Setting Events To Client"),void(n.showErrors&&n.error(new Error("Client Not Valid To Set Event Listeners"),{payload:"No Client To Set Event Listeners"}));n.opcuaClient.on("close",function(e){e&&t.internalDebugLog("Connection Error On Close "+e),n.isInactiveOnOPCUA()?t.detailDebugLog("Connector Not Active On OPC UA Close Event"):n.resetOPCUAConnection("Connector To Server Close"),t.internalDebugLog("!!!!!!!!!!!!!!!!!!!!!!!!  CLIENT CONNECTION CLOSED !!!!!!!!!!!!!!!!!!!".bgWhite.red),t.internalDebugLog("CONNECTION CLOSED: "+n.endpoint),n.emit("server_connection_close")}),n.opcuaClient.on("backoff",function(e,o){t.internalDebugLog("!!! CONNECTION FAILED (backoff) FOR #".bgWhite.yellow,e," retrying ",o/1e3," sec. !!!"),t.internalDebugLog("CONNECTION FAILED: "+n.endpoint),n.stateMachine.lock()}),n.opcuaClient.on("abort",function(){t.internalDebugLog("!!! Abort backoff !!!"),t.internalDebugLog("CONNECTION BROKEN: "+n.endpoint),n.isInactiveOnOPCUA()?t.detailDebugLog("Connector Not Active On OPC UA Backoff Abort Event"):n.resetOPCUAConnection("Connector To Server Backoff Abort"),n.emit("server_connection_abort")}),n.opcuaClient.on("connection_reestablished",function(){t.internalDebugLog("!!!!!!!!!!!!!!!!!!!!!!!!  CLIENT CONNECTION RE-ESTABLISHED !!!!!!!!!!!!!!!!!!!".bgWhite.orange),t.internalDebugLog("CONNECTION RE-ESTABLISHED: "+n.endpoint),n.stateMachine.unlock()}),n.opcuaClient.on("start_reconnection",function(){t.internalDebugLog("!!!!!!!!!!!!!!!!!!!!!!!!  CLIENT STARTING RECONNECTION !!!!!!!!!!!!!!!!!!!".bgWhite.yellow),t.internalDebugLog("CONNECTION STARTING RECONNECTION: "+n.endpoint),n.stateMachine.lock()}),n.opcuaClient.on("timed_out_request",function(){t.internalDebugLog("!!!!!!!!!!!!!!!!!!!!!!!! CLIENT TIMED OUT REQUEST !!!!!!!!!!!!!!!!!!!".bgWhite.blue),t.internalDebugLog("CONNECTION TIMED OUT REQUEST: "+n.endpoint)}),n.opcuaClient.on("security_token_renewed",function(){t.detailDebugLog("!!!!!!!!!!!!!!!!!!!!!!!! CLIENT SECURITY TOKEN RENEWED !!!!!!!!!!!!!!!!!!!".bgWhite.violet),t.detailDebugLog("CONNECTION SECURITY TOKEN RENEWE: "+n.endpoint)}),n.opcuaClient.on("after_reconnection",function(){t.internalDebugLog("!!!!!!!!!!!!!!!!!!!!!!!!      CLIENT RECONNECTED     !!!!!!!!!!!!!!!!!!!".bgWhite.green),t.internalDebugLog("CONNECTION RECONNECTED: "+n.endpoint),n.emit("after_reconnection",n.opcuaClient),n.stateMachine.unlock()})},de.biancoroyal.opcua.iiot.core.connector.logSessionInformation=function(e){e.opcuaSession?(this.internalDebugLog("Session "+e.opcuaSession.name+" Id: "+e.opcuaSession.sessionId+" Started On "+e.endpoint),this.detailDebugLog("name :"+e.opcuaSession.name),this.detailDebugLog("sessionId :"+e.opcuaSession.sessionId),this.detailDebugLog("authenticationToken :"+e.opcuaSession.authenticationToken),this.internalDebugLog("timeout :"+e.opcuaSession.timeout),e.opcuaSession.serverNonce&&this.detailDebugLog((e.opcuaSession.serverNonce,e.opcuaSession.serverNonce.toString("hex"))),e.opcuaSession.serverCertificate?this.detailDebugLog((e.opcuaSession.serverCertificate,e.opcuaSession.serverCertificate.toString("base64"))):this.detailDebugLog("serverCertificate : None".red),this.detailDebugLog((e.opcuaSession.serverSignature,e.opcuaSession.serverSignature)),e.opcuaSession.lastRequestSentTime&&(this.detailDebugLog("lastRequestSentTime : "+e.opcuaSession.lastRequestSentTime),this.internalDebugLog((e.opcuaSession.lastRequestSentTime,new Date(e.opcuaSession.lastRequestSentTime).toISOString()))),e.opcuaSession.lastResponseReceivedTime&&(this.detailDebugLog("lastResponseReceivedTime : "+e.opcuaSession.lastResponseReceivedTime),this.internalDebugLog((e.opcuaSession.lastResponseReceivedTime,new Date(e.opcuaSession.lastResponseReceivedTime).toISOString())))):this.detailDebugLog("Session Not Valid To Log Information")},de.biancoroyal.opcua.iiot.core.connector.checkEndpoint=function(e){return!(!e.endpoint||!e.endpoint.includes("opc.tcp://"))||(this.internalDebugLog("Endpoint Not Valid -> "+e.endpoint),e.error(new Error("endpoint does not include opc.tcp://"),{payload:"Client Endpoint Error"}),!1)},module.exports=de.biancoroyal.opcua.iiot.core.connector;
//# sourceMappingURL=../maps/core/opcua-iiot-core-connector.js.map
