{"version":3,"sources":["core/opcua-iiot-core-client.js"],"names":["require","install","de","biancoroyal","opcua","iiot","core","client","internalDebugLog","detailDebugLog","readDebugLog","readDetailsDebugLog","writeDebugLog","writeDetailsDebugLog","READ_TYPE","Object","freeze","ALL","NODE_ID","NODE_CLASS","BROWSE_NAME","DISPLAY_NAME","VALUE","HISTORY","write","session","nodesToWrite","originMsg","resolve","reject","msg","assign","statusCodes","err","Error","read","nodesToRead","maxAge","dataValues","results","readVariableValue","Promise","readHistoryValue","startDate","endDate","readAllAttributes","stringifyFormatted","JSON","stringify"],"mappings":"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","file":"../../core/opcua-iiot-core-client.js","sourcesContent":["/**\n The BSD 3-Clause License\n\n Copyright 2016,2017,2018 - Klaus Landsdorf (http://bianco-royal.de/)\n Copyright 2015,2016 - Mika Karaila, Valmet Automation Inc. (node-red-contrib-opcua)\n All rights reserved.\n node-red-contrib-iiot-opcua\n */\n'use strict'\nrequire('source-map-support').install()\n\n/**\n * Nested namespace settings.\n *\n * @type {{biancoroyal: {opcua: {iiot: {core: {client: {}}}}}}}\n *\n * @Namesapce de.biancoroyal.opcua.iiot.core.client\n */\nvar de = de || {biancoroyal: {opcua: {iiot: {core: {client: {}}}}}} // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.client.core = de.biancoroyal.opcua.iiot.core.client.core || require('./opcua-iiot-core') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.client.internalDebugLog = de.biancoroyal.opcua.iiot.core.client.internalDebugLog || require('debug')('opcuaIIoT:client') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.client.detailDebugLog = de.biancoroyal.opcua.iiot.core.client.detailDebugLog || require('debug')('opcuaIIoT:client:details') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.client.readDebugLog = de.biancoroyal.opcua.iiot.core.client.readDebugLog || require('debug')('opcuaIIoT:client:read') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.client.readDetailsDebugLog = de.biancoroyal.opcua.iiot.core.client.readDetailsDebugLog || require('debug')('opcuaIIoT:client:read:details') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.client.writeDebugLog = de.biancoroyal.opcua.iiot.core.client.writeDebugLog || require('debug')('opcuaIIoT:client:write') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.client.writeDetailsDebugLog = de.biancoroyal.opcua.iiot.core.client.writeDetailsDebugLog || require('debug')('opcuaIIoT:client:write:details') // eslint-disable-line no-use-before-define\n\nde.biancoroyal.opcua.iiot.core.client.READ_TYPE = de.biancoroyal.opcua.iiot.core.client.READ_TYPE || Object.freeze({\n  ALL: 0,\n  NODE_ID: 1,\n  NODE_CLASS: 2,\n  BROWSE_NAME: 3,\n  DISPLAY_NAME: 4,\n  VALUE: 13,\n  HISTORY: 130\n}) // eslint-disable-line no-use-before-define\n\nde.biancoroyal.opcua.iiot.core.client.write = function (session, nodesToWrite, originMsg) {\n  return new Promise(\n    function (resolve, reject) {\n      if (session) {\n        let msg = Object.assign({}, originMsg)\n        session.write(nodesToWrite, function (err, statusCodes) {\n          if (err) {\n            reject(err)\n          } else {\n            resolve({\n              statusCodes,\n              nodesToWrite,\n              msg\n            })\n          }\n        })\n      } else {\n        reject(new Error('Session Not Valid To Write'))\n      }\n    }\n  )\n}\n\nde.biancoroyal.opcua.iiot.core.client.read = function (session, nodesToRead, maxAge, originMsg) {\n  return new Promise(\n    function (resolve, reject) {\n      if (session) {\n        let msg = Object.assign({}, originMsg)\n        session.read(nodesToRead, maxAge, function (err, dataValues) {\n          if (err) {\n            reject(err)\n          } else {\n            resolve({\n              results: dataValues,\n              nodesToRead,\n              msg\n            })\n          }\n        })\n      } else {\n        reject(new Error('Session Not Valid To Read'))\n      }\n    }\n  )\n}\n\nde.biancoroyal.opcua.iiot.core.client.readVariableValue = function (session, nodesToRead, originMsg) {\n  return new Promise(\n    function (resolve, reject) {\n      if (session) {\n        let msg = Object.assign({}, originMsg)\n        session.readVariableValue(nodesToRead, function (err, dataValues) {\n          if (err) {\n            reject(err)\n          } else {\n            resolve({\n              results: dataValues,\n              nodesToRead,\n              msg\n            })\n          }\n        })\n      } else {\n        reject(new Error('Session Not Valid To Read Variable Value'))\n      }\n    }\n  )\n}\n\nde.biancoroyal.opcua.iiot.core.client.readHistoryValue = function (session, nodesToRead, startDate, endDate, originMsg) {\n  return new Promise(\n    function (resolve, reject) {\n      if (session) {\n        let msg = Object.assign({}, originMsg)\n        session.readHistoryValue(nodesToRead, startDate, endDate, function (err, dataValues) {\n          if (err) {\n            reject(err)\n          } else {\n            resolve({\n              results: dataValues,\n              nodesToRead,\n              startDate,\n              endDate,\n              msg\n            })\n          }\n        })\n      } else {\n        reject(new Error('Session Not Valid To Read History Value'))\n      }\n    }\n  )\n}\n\nde.biancoroyal.opcua.iiot.core.client.readAllAttributes = function (session, nodesToRead, originMsg) {\n  return new Promise(\n    function (resolve, reject) {\n      if (session) {\n        let msg = Object.assign({}, originMsg)\n        session.readAllAttributes(nodesToRead, function (err, dataValues) {\n          if (err) {\n            reject(err)\n          } else {\n            resolve({\n              results: dataValues,\n              nodesToRead,\n              msg\n            })\n          }\n        })\n      } else {\n        reject(new Error('Session Not Valid To Read All Attributes'))\n      }\n    }\n  )\n}\n\nde.biancoroyal.opcua.iiot.core.client.stringifyFormatted = function (dataValues) {\n  return JSON.stringify(dataValues, null, 2)\n}\n\nmodule.exports = de.biancoroyal.opcua.iiot.core.client\n"]}