{"version":3,"sources":["core/opcua-iiot-core-connector.js"],"names":["require","install","de","biancoroyal","opcua","iiot","core","connector","internalDebugLog","detailDebugLog","libDebugLog","Stately","createStatelyMachine","machine","IDLE","initopcua","lock","end","open","sessionrequest","SESSIONREQUESTED","sessionactive","SESSIONACTIVE","sessionclose","SESSIONRESTART","idle","close","SESSIONCLOSED","sessionrestart","unlock","CLOSED","LOCKED","reconfigure","stopopcua","renew","UNLOCKED","RECONFIGURED","RENEW","STOPPED","END","setListenerToClient","node","opcuaClient","showErrors","error","Error","payload","on","err","isInactiveOnOPCUA","resetOPCUAConnection","bgWhite","red","endpoint","number","delay","yellow","stateMachine","orange","blue","violet","green","logSessionInformation","opcuaSession","name","sessionId","authenticationToken","timeout","serverNonce","this","toString","serverCertificate","serverSignature","lastRequestSentTime","Date","toISOString","lastResponseReceivedTime","checkEndpoint","includes","module","exports"],"mappings":"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","file":"../../core/opcua-iiot-core-connector.js","sourcesContent":["/**\n The BSD 3-Clause License\n\n Copyright 2017,2018 - Klaus Landsdorf (http://bianco-royal.de/)\n All rights reserved.\n node-red-contrib-iiot-opcua\n */\n'use strict'\nrequire('source-map-support').install()\n\n/**\n * Nested namespace settings.\n *\n * @type {{biancoroyal: {opcua: {iiot: {core: {connector: {}}}}}}}\n *\n * @Namesapce de.biancoroyal.opcua.iiot.core.connector\n */\nvar de = de || {biancoroyal: {opcua: {iiot: {core: {connector: {}}}}}} // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.connector.core = de.biancoroyal.opcua.iiot.core.connector.core || require('./opcua-iiot-core') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.connector.internalDebugLog = de.biancoroyal.opcua.iiot.core.connector.internalDebugLog || require('debug')('opcuaIIoT:connector') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.connector.detailDebugLog = de.biancoroyal.opcua.iiot.core.connector.detailDebugLog || require('debug')('opcuaIIoT:connector:details') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.connector.libDebugLog = de.biancoroyal.opcua.iiot.core.connector.libDebugLog || require('debug')('opcuaIIoT:connector:nodeopcua') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.connector.Stately = de.biancoroyal.opcua.iiot.core.connector.Stately || require('stately.js') // eslint-disable-line no-use-before-define\n\nde.biancoroyal.opcua.iiot.core.connector.createStatelyMachine = function () {\n  return de.biancoroyal.opcua.iiot.core.connector.Stately.machine({\n    'IDLE': {\n      'initopcua': 'INITOPCUA',\n      'lock': 'LOCKED',\n      'end': 'END'\n    },\n    'INITOPCUA': {\n      'open': 'OPEN',\n      'close': 'CLOSED',\n      'lock': 'LOCKED',\n      'end': 'END'\n    },\n    'OPEN': {\n      'sessionrequest': 'SESSIONREQUESTED',\n      'close': 'CLOSED',\n      'lock': 'LOCKED',\n      'end': 'END'\n    },\n    'SESSIONREQUESTED': {\n      'open': 'OPEN',\n      'sessionactive': 'SESSIONACTIVE',\n      'lock': 'LOCKED',\n      'end': 'END'\n    },\n    'SESSIONACTIVE': {\n      'open': 'OPEN',\n      'sessionclose': 'SESSIONCLOSED',\n      'lock': 'LOCKED',\n      'end': 'END'\n    },\n    'SESSIONRESTART': {\n      'idle': 'IDLE',\n      'open': 'OPEN',\n      'sessionclose': 'SESSIONCLOSED',\n      'close': 'CLOSED',\n      'lock': 'LOCKED',\n      'end': 'END'\n    },\n    'SESSIONCLOSED': {\n      'idle': 'IDLE',\n      'open': 'OPEN',\n      'close': 'CLOSED',\n      'sessionrestart': 'SESSIONRESTART',\n      'lock': 'LOCKED',\n      'unlock': 'UNLOCKED',\n      'end': 'END'\n    },\n    'CLOSED': {\n      'open': 'OPEN',\n      'lock': 'LOCKED',\n      'unlock': 'UNLOCKED',\n      'end': 'END',\n      'idle': 'IDLE'\n    },\n    'LOCKED': {\n      'sessionclose': 'SESSIONCLOSED',\n      'open': 'OPEN',\n      'close': 'CLOSED',\n      'unlock': 'UNLOCKED',\n      'lock': 'LOCKED',\n      'sessionrestart': 'SESSIONRESTART',\n      'reconfigure': 'RECONFIGURED',\n      'stopopcua': 'STOPPED',\n      'renew': 'RENEW',\n      'end': 'END'\n    },\n    'UNLOCKED': {\n      'idle': 'IDLE',\n      'lock': 'LOCKED',\n      'open': 'OPEN',\n      'end': 'END'\n    },\n    'RECONFIGURED': {},\n    'RENEW': {},\n    'STOPPED': {},\n    'END': {}\n  }, 'IDLE')\n}\n\nde.biancoroyal.opcua.iiot.core.connector.setListenerToClient = function (node) {\n  const connector = de.biancoroyal.opcua.iiot.core.connector\n\n  if (!node.opcuaClient) {\n    connector.internalDebugLog('Client Not Valid On Setting Events To Client')\n    if (node.showErrors) {\n      node.error(new Error('Client Not Valid To Set Event Listeners'), {payload: 'No Client To Set Event Listeners'})\n    }\n    return\n  }\n\n  node.opcuaClient.on('close', function (err) {\n    if (err) {\n      connector.internalDebugLog('Connection Error On Close ' + err)\n    }\n\n    if (node.isInactiveOnOPCUA()) {\n      connector.detailDebugLog('Connector Not Active On OPC UA Close Event')\n    } else {\n      node.resetOPCUAConnection('Connector To Server Close')\n    }\n\n    connector.internalDebugLog('!!!!!!!!!!!!!!!!!!!!!!!!  CLIENT CONNECTION CLOSED !!!!!!!!!!!!!!!!!!!'.bgWhite.red)\n    connector.internalDebugLog('CONNECTION CLOSED: ' + node.endpoint)\n    node.emit('server_connection_close')\n  })\n\n  node.opcuaClient.on('backoff', function (number, delay) {\n    connector.internalDebugLog('!!! CONNECTION FAILED (backoff) FOR #'.bgWhite.yellow, number, ' retrying ', delay / 1000.0, ' sec. !!!')\n    connector.internalDebugLog('CONNECTION FAILED: ' + node.endpoint)\n    node.stateMachine.lock()\n  })\n\n  node.opcuaClient.on('abort', function () {\n    connector.internalDebugLog('!!! Abort backoff !!!')\n    connector.internalDebugLog('CONNECTION BROKEN: ' + node.endpoint)\n\n    if (node.isInactiveOnOPCUA()) {\n      connector.detailDebugLog('Connector Not Active On OPC UA Backoff Abort Event')\n    } else {\n      node.resetOPCUAConnection('Connector To Server Backoff Abort')\n    }\n\n    node.emit('server_connection_abort')\n  })\n\n  node.opcuaClient.on('connection_reestablished', function () {\n    connector.internalDebugLog('!!!!!!!!!!!!!!!!!!!!!!!!  CLIENT CONNECTION RE-ESTABLISHED !!!!!!!!!!!!!!!!!!!'.bgWhite.orange)\n    connector.internalDebugLog('CONNECTION RE-ESTABLISHED: ' + node.endpoint)\n    node.stateMachine.unlock()\n  })\n\n  node.opcuaClient.on('start_reconnection', function () {\n    connector.internalDebugLog('!!!!!!!!!!!!!!!!!!!!!!!!  CLIENT STARTING RECONNECTION !!!!!!!!!!!!!!!!!!!'.bgWhite.yellow)\n    connector.internalDebugLog('CONNECTION STARTING RECONNECTION: ' + node.endpoint)\n    node.stateMachine.lock()\n  })\n\n  node.opcuaClient.on('timed_out_request', function () {\n    connector.internalDebugLog('!!!!!!!!!!!!!!!!!!!!!!!! CLIENT TIMED OUT REQUEST !!!!!!!!!!!!!!!!!!!'.bgWhite.blue)\n    connector.internalDebugLog('CONNECTION TIMED OUT REQUEST: ' + node.endpoint)\n  })\n\n  node.opcuaClient.on('security_token_renewed', function () {\n    connector.detailDebugLog('!!!!!!!!!!!!!!!!!!!!!!!! CLIENT SECURITY TOKEN RENEWED !!!!!!!!!!!!!!!!!!!'.bgWhite.violet)\n    connector.detailDebugLog('CONNECTION SECURITY TOKEN RENEWE: ' + node.endpoint)\n  })\n\n  node.opcuaClient.on('after_reconnection', function () {\n    connector.internalDebugLog('!!!!!!!!!!!!!!!!!!!!!!!!      CLIENT RECONNECTED     !!!!!!!!!!!!!!!!!!!'.bgWhite.green)\n    connector.internalDebugLog('CONNECTION RECONNECTED: ' + node.endpoint)\n    node.emit('after_reconnection', node.opcuaClient)\n    node.stateMachine.unlock()\n  })\n}\n\nde.biancoroyal.opcua.iiot.core.connector.logSessionInformation = function (node) {\n  if (!node.opcuaSession) {\n    this.detailDebugLog('Session Not Valid To Log Information')\n    return\n  }\n\n  this.internalDebugLog('Session ' + node.opcuaSession.name + ' Id: ' + node.opcuaSession.sessionId + ' Started On ' + node.endpoint)\n  this.detailDebugLog('name :' + node.opcuaSession.name)\n  this.detailDebugLog('sessionId :' + node.opcuaSession.sessionId)\n  this.detailDebugLog('authenticationToken :' + node.opcuaSession.authenticationToken)\n  this.internalDebugLog('timeout :' + node.opcuaSession.timeout)\n\n  if (node.opcuaSession.serverNonce) {\n    this.detailDebugLog('serverNonce :' + node.opcuaSession.serverNonce ? node.opcuaSession.serverNonce.toString('hex') : 'none')\n  }\n\n  if (node.opcuaSession.serverCertificate) {\n    this.detailDebugLog('serverCertificate :' + node.opcuaSession.serverCertificate ? node.opcuaSession.serverCertificate.toString('base64') : 'none')\n  } else {\n    this.detailDebugLog('serverCertificate : None'.red)\n  }\n\n  this.detailDebugLog('serverSignature :' + node.opcuaSession.serverSignature ? node.opcuaSession.serverSignature : 'none')\n\n  if (node.opcuaSession.lastRequestSentTime) {\n    this.detailDebugLog('lastRequestSentTime : ' + node.opcuaSession.lastRequestSentTime)\n    this.internalDebugLog('lastRequestSentTime converted :' + node.opcuaSession.lastRequestSentTime ? new Date(node.opcuaSession.lastRequestSentTime).toISOString() : 'none')\n  }\n\n  if (node.opcuaSession.lastResponseReceivedTime) {\n    this.detailDebugLog('lastResponseReceivedTime : ' + node.opcuaSession.lastResponseReceivedTime)\n    this.internalDebugLog('lastResponseReceivedTime converted :' + node.opcuaSession.lastResponseReceivedTime ? new Date(node.opcuaSession.lastResponseReceivedTime).toISOString() : 'none')\n  }\n}\n\nde.biancoroyal.opcua.iiot.core.connector.checkEndpoint = function (node) {\n  if (node.endpoint && node.endpoint.includes('opc.tcp://')) {\n    return true\n  } else {\n    this.internalDebugLog('Endpoint Not Valid -> ' + node.endpoint)\n    node.error(new Error('endpoint does not include opc.tcp://'), {payload: 'Client Endpoint Error'})\n    return false\n  }\n}\n\nmodule.exports = de.biancoroyal.opcua.iiot.core.connector\n"]}