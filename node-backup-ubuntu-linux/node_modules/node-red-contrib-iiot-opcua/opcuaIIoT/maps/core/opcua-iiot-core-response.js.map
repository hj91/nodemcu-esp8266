{"version":3,"sources":["core/opcua-iiot-core-response.js"],"names":["require","install","de","biancoroyal","opcua","iiot","core","response","internalDebugLog","detailDebugLog","EMPTY_LIST","NONE","analyzeBrowserResults","node","msg","this","handlePayloadStatusCode","analyzeReadResults","readtype","item","injectType","analyzeEventResultStatus","analyzeMethodResults","methodType","setNodeStatus","entryStatus","informationText","fillColor","length","status","fill","shape","text","analyzeWriteResults","handlePayloadArrayOfStatusCodes","setNodeStatusInfo","analyzeSubscribeResultStatus","payload","statusCodes","handlePayloadArrayOfObjects","handlePayloadObject","entryStatusText","entry","results","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","statusCode","name","includes","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","defaultCompress","hasOwnProperty","trimMessageExtensions","trimMessagePayloadExtensions","compressBrowseMessageStructure","browserResults","itemList","forEach","nodeId","toString","browseName","namespaceIndex","displayName","compressReadMessageStructure","nodesToRead","index","addressSpaceItems","push","dataType","compressWriteMessageStructure","valuesToWrite","compressMethodMessageStructure"],"mappings":"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","file":"../../core/opcua-iiot-core-response.js","sourcesContent":["/**\n The BSD 3-Clause License\n\n Copyright 2016,2017,2018 - Klaus Landsdorf (http://bianco-royal.de/)\n Copyright 2015,2016 - Mika Karaila, Valmet Automation Inc. (node-red-contrib-opcua)\n All rights reserved.\n node-red-contrib-iiot-opcua\n */\n'use strict'\nrequire('source-map-support').install()\n\n/**\n * Nested namespace settings.\n *\n * @type {{biancoroyal: {opcua: {iiot: {core: {response: {}}}}}}}\n *\n * @Namesapce de.biancoroyal.opcua.iiot.core.response\n */\nvar de = de || {biancoroyal: {opcua: {iiot: {core: {response: {}}}}}} // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.response.core = de.biancoroyal.opcua.iiot.core.response.core || require('./opcua-iiot-core') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.response.internalDebugLog = de.biancoroyal.opcua.iiot.core.response.internalDebugLog || require('debug')('opcuaIIoT:response') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.response.detailDebugLog = de.biancoroyal.opcua.iiot.core.response.detailDebugLog || require('debug')('opcuaIIoT:response:details') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.response.EMPTY_LIST = 0\nde.biancoroyal.opcua.iiot.core.response.NONE = 0\n\nde.biancoroyal.opcua.iiot.core.response.analyzeBrowserResults = function (node, msg) {\n  this.handlePayloadStatusCode(node, msg)\n}\n\nde.biancoroyal.opcua.iiot.core.response.analyzeReadResults = function (node, msg) {\n  this.handlePayloadStatusCode(node, msg)\n  if (msg.readtype === 'HistoryValue') {\n    msg.payload.forEach((item) => {\n      delete item['statusCode']\n    })\n  }\n}\n\nde.biancoroyal.opcua.iiot.core.response.analyzeListenerResults = function (node, msg) {\n  switch (msg.injectType) {\n    case 'subscribe':\n      this.analyzeSubscribeResultStatus(node, msg)\n      break\n    case 'event':\n      this.analyzeEventResultStatus(node, msg)\n      break\n    default:\n      break\n  }\n}\n\nde.biancoroyal.opcua.iiot.core.response.analyzeMethodResults = function (node, msg) {\n  switch (msg.methodType) {\n    case 'basic':\n      this.handlePayloadStatusCode(node, msg)\n      break\n    case 'complex':\n      this.handlePayloadStatusCode(node, msg)\n      break\n    default:\n      break\n  }\n}\n\nde.biancoroyal.opcua.iiot.core.response.setNodeStatus = function (node, entryStatus, informationText) {\n  let fillColor = 'green'\n\n  if (entryStatus && entryStatus.length === 3) {\n    if (entryStatus[2] > this.EMPTY_LIST) {\n      fillColor = 'yellow'\n    }\n\n    if (entryStatus[1] > this.EMPTY_LIST) {\n      fillColor = 'red'\n    }\n  }\n\n  if (node.status.text !== informationText) {\n    node.status({fill: fillColor, shape: 'dot', text: informationText})\n  }\n}\n\nde.biancoroyal.opcua.iiot.core.response.analyzeWriteResults = function (node, msg) {\n  let entryStatus = this.handlePayloadArrayOfStatusCodes(msg)\n  this.setNodeStatusInfo(node, msg, entryStatus)\n}\n\nde.biancoroyal.opcua.iiot.core.response.analyzeSubscribeResultStatus = function (node, msg) {\n  this.handlePayloadStatusCode(node, msg)\n}\n\nde.biancoroyal.opcua.iiot.core.response.analyzeEventResultStatus = function (node, msg) {\n  this.handlePayloadStatusCode(node, msg)\n}\n\nde.biancoroyal.opcua.iiot.core.response.handlePayloadStatusCode = function (node, msg) {\n  let entryStatus = [0, 0, 0]\n\n  if (msg.payload.length || msg.payload.results || msg.payload.statusCodes) {\n    entryStatus = this.handlePayloadArrayOfObjects(msg)\n  } else {\n    entryStatus = this.handlePayloadObject(msg)\n  }\n  this.setNodeStatusInfo(node, msg, entryStatus)\n}\n\nde.biancoroyal.opcua.iiot.core.response.setNodeStatusInfo = function (node, msg, entryStatus) {\n  msg.entryStatus = entryStatus\n  msg.entryStatusText = 'Good:' + entryStatus[0] + ' Bad:' + entryStatus[1] + ' Other:' + entryStatus[2]\n  this.setNodeStatus(node, msg.entryStatus, msg.entryStatusText)\n}\n\nde.biancoroyal.opcua.iiot.core.response.handlePayloadArrayOfObjects = function (msg) {\n  let entry = null\n  let entryStatus = [0, 0, 0]\n  let results = []\n\n  if (msg.payload.results) {\n    results = msg.payload.results\n  } else if (msg.payload.statusCodes) {\n    results = msg.payload.statusCodes\n  } else {\n    if (msg.payload.length) { results = msg.payload }\n  }\n\n  for (entry of results) {\n    if (entry.statusCode && entry.statusCode.name) {\n      switch (entry.statusCode.name) {\n        case 'Good':\n          entryStatus[0] += 1\n          break\n        case 'Bad':\n          entryStatus[1] += 1\n          break\n        default:\n          if (entry.statusCode.name.includes('Good')) {\n            entryStatus[0] += 1\n          } else if (entry.statusCode.name.includes('Bad')) {\n            entryStatus[1] += 1\n          } else {\n            entryStatus[2] += 1\n          }\n      }\n    } else {\n      entryStatus[2] += 1\n    }\n  }\n\n  return entryStatus\n}\n\nde.biancoroyal.opcua.iiot.core.response.handlePayloadObject = function (msg) {\n  let entryStatus = [0, 0, 0]\n\n  if (msg.payload.results || msg.payload.statusCodes) {\n    entryStatus = this.handlePayloadArrayOfObjects(msg)\n  }\n\n  if (msg.payload && msg.payload.statusCode) {\n    if (msg.payload.statusCode.name) {\n      switch (msg.payload.statusCode.name) {\n        case 'Good':\n          entryStatus[0] += 1\n          break\n        case 'Bad':\n          entryStatus[1] += 1\n          break\n        default:\n          if (msg.payload.statusCode.name.includes('Good')) {\n            entryStatus[0] += 1\n          } else if (msg.payload.statusCode.name.includes('Bad')) {\n            entryStatus[1] += 1\n          } else {\n            entryStatus[2] += 1\n          }\n      }\n    } else {\n      entryStatus[2] += 1\n    }\n  } else {\n    entryStatus[2] += 1\n  }\n\n  return entryStatus\n}\n\nde.biancoroyal.opcua.iiot.core.response.handlePayloadArrayOfStatusCodes = function (msg) {\n  let entry = null\n  let entryStatus = [0, 0, 0]\n\n  if (msg.payload.statusCodes) {\n    for (entry of msg.payload.statusCodes) {\n      if (entry && entry.name) {\n        switch (entry.name) {\n          case 'Good':\n            entryStatus[0] += 1\n            break\n          case 'Bad':\n            entryStatus[1] += 1\n            break\n          default:\n            if (entry.name.includes('Good')) {\n              entryStatus[0] += 1\n            } else if (entry.name.includes('Bad')) {\n              entryStatus[1] += 1\n            } else {\n              entryStatus[2] += 1\n            }\n        }\n      } else {\n        entryStatus[2] += 1\n      }\n    }\n  } else {\n    entryStatus[2] += 1\n  }\n\n  return entryStatus\n}\n\nde.biancoroyal.opcua.iiot.core.response.defaultCompress = function (msg) {\n  if (msg.payload.hasOwnProperty('value') && msg.payload.value.hasOwnProperty('value')) {\n    msg.payload = msg.payload.value.value\n  } else {\n    if (msg.payload.length) {\n      msg.payload.forEach((item) => {\n        if (item.hasOwnProperty('value') && item.value.hasOwnProperty('value')) {\n          item = item.value.value\n        }\n      })\n    }\n  }\n  this.trimMessageExtensions(msg)\n}\n\nde.biancoroyal.opcua.iiot.core.response.trimMessageExtensions = function (msg) {\n  delete msg['nodesToRead']\n  delete msg['nodesToReadCount']\n  delete msg['addressItemsToRead']\n  delete msg['addressItemsToReadCount']\n  delete msg['addressItemsToBrowse']\n  delete msg['addressItemsToBrowseCount']\n  delete msg['addressSpaceItems']\n  delete msg['injectType']\n  delete msg['nodetype']\n  delete msg['entryStatus']\n  delete msg['entryStatusText']\n}\n\nde.biancoroyal.opcua.iiot.core.response.trimMessagePayloadExtensions = function (msg) {\n  delete msg.payload['listenerParameters']\n}\n\nde.biancoroyal.opcua.iiot.core.response.compressBrowseMessageStructure = function (msg) {\n  if (msg.payload.hasOwnProperty('browserResults') && msg.payload.browserResults.length) {\n    let itemList = []\n    msg.payload.browserResults.forEach((item) => {\n      itemList.push({\n        nodeId: item.nodeId.toString(),\n        browseName: (item.browseName.namespaceIndex) ? item.browseName.namespaceIndex + ':' + item.browseName.name : item.browseName,\n        displayName: item.displayName.text\n      })\n    })\n    msg.payload = itemList\n    this.trimMessageExtensions(msg)\n    this.trimMessagePayloadExtensions(msg)\n  } else {\n    this.defaultCompress(msg)\n  }\n}\n\nde.biancoroyal.opcua.iiot.core.response.compressReadMessageStructure = function (msg) {\n  switch (msg.readtype) {\n    case 'AllAttributes':\n      delete msg.payload['nodesToRead']\n      delete msg['resultsConverted']\n      break\n    case 'VariableValue':\n      let itemList = []\n      let results = msg.payload\n      let nodesToRead = msg.nodesToRead\n\n      if (msg.payload.results) {\n        results = msg.payload.results\n        nodesToRead = msg.payload.nodesToRead\n      }\n\n      results.forEach((item, index) => {\n        if (item.hasOwnProperty('value') && item.value.hasOwnProperty('value')) {\n          let nodeId = null\n          if (nodesToRead && index < nodesToRead.length) {\n            nodeId = nodesToRead[index]\n          } else {\n            if (msg.addressSpaceItems && index < msg.addressSpaceItems.length) {\n              nodeId = msg.addressSpaceItems[index]\n            }\n          }\n\n          itemList.push({\n            value: item.value.value,\n            dataType: item.value.dataType,\n            nodeId\n          })\n        }\n      })\n      msg.payload = itemList\n      delete msg['nodesToRead']\n      delete msg['nodesToReadCount']\n      delete msg['addressSpaceItems']\n      break\n    default:\n      break\n  }\n\n  delete msg['readtype']\n  delete msg['attributeId']\n\n  delete msg['addressItemsToRead']\n  delete msg['addressItemsToReadCount']\n\n  this.trimMessageExtensions(msg)\n}\n\nde.biancoroyal.opcua.iiot.core.response.compressWriteMessageStructure = function (msg) {\n  this.defaultCompress(msg)\n\n  let itemList = []\n  msg.payload.statusCodes.forEach((item, index) => {\n    itemList.push({\n      nodeId: (msg.payload.nodesToWrite) ? msg.payload.nodesToWrite[index] : msg.addressSpaceItems[index],\n      statusCode: item,\n      value: (msg.valuesToWrite) ? msg.valuesToWrite[index] : null\n    })\n  })\n  msg.payload = itemList\n\n  delete msg['valuesToWrite']\n}\n\nde.biancoroyal.opcua.iiot.core.response.compressListenMessageStructure = function (msg) {\n  if (msg.payload.hasOwnProperty('value') && msg.payload.value.hasOwnProperty('value')) {\n    msg.payload = {\n      value: msg.payload.value.value,\n      dataType: msg.payload.value.dataType,\n      nodeId: (msg.addressSpaceItems[0].nodeId) ? msg.addressSpaceItems[0].nodeId : msg.addressSpaceItems[0]\n    }\n  } else {\n    if (msg.payload.length) {\n      let itemList = []\n      msg.payload.forEach((item, index) => {\n        if (item.hasOwnProperty('value') && item.value.hasOwnProperty('value')) {\n          itemList.push({\n            value: item.value.value,\n            dataType: item.value.dataType,\n            nodeId: (msg.addressSpaceItems[index].nodeId) ? msg.addressSpaceItems[index].nodeId : msg.addressSpaceItems[index]\n          })\n        }\n      })\n      msg.payload = itemList\n    }\n  }\n  this.trimMessageExtensions(msg)\n}\n\nde.biancoroyal.opcua.iiot.core.response.compressMethodMessageStructure = function (msg) {\n  this.defaultCompress(msg)\n  this.trimMessageExtensions(msg)\n\n  delete msg['inputArguments']\n  delete msg['objectId']\n  delete msg['methodId']\n  delete msg['methodType']\n\n  delete msg.payload['definition']\n}\n\nde.biancoroyal.opcua.iiot.core.response.compressDefaultMessageStructure = function (msg) {\n  this.defaultCompress(msg)\n  this.trimMessageExtensions(msg)\n}\n\nmodule.exports = de.biancoroyal.opcua.iiot.core.response\n"]}