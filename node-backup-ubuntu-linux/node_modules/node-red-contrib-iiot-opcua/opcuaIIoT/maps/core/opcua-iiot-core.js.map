{"version":3,"sources":["core/opcua-iiot-core.js"],"names":["require","install","de","biancoroyal","opcua","iiot","core","nodeOPCUA","nodeOPCUAId","internalDebugLog","detailDebugLog","specialDebugLog","OBJECTS_ROOT","TEN_SECONDS_TIMEOUT","RUNNING_STATE","os","assert","underscore","isWindows","test","platform","FAKTOR_SEC_TO_MSEC","endianness","arch","getPathFromRequireResolve","requireResolve","pathToNodeOPCUA","replace","this","getNodeOPCUAPath","getNodeOPCUAClientPath","DEFAULT_TIMEOUT","resolve","getTimeUnitName","unit","unitAbbreviation","time","convertedTime","buildBrowseMessage","topic","nodeId","browseName","nodeClassType","payload","toInt32","x","uintSixteen","Math","pow","getNodeStatus","statusValue","statusLog","fillValue","shapeValue","shape","status","buildNewVariant","datatype","value","variantValue","DataType","Float","dataType","parseFloat","Double","UInt16","uint16","Uint16Array","UInt32","Uint32Array","uint32","Int32","parseInt","fill","Int16","Int64","Boolean","LocalizedText","DateTime","Date","getBasicDataTypes","forEach","item","name","String","JSON","stringify","getVariantValue","parse","toString","datatypeList","Null","Byte","Guid","ByteString","XmlElement","NodeId","ExpandedNodeId","StatusCode","ExtensionObject","DataValue","Variant","DiagnosticInfo","convertDataValue","convertDataValueByDataType","convertedValue","valueType","_typeof","Buffer","isNaN","toLowerCase","hasOwnProperty","err","regex_ns_i","regex_ns_s","parseNamspaceFromMsgTopic","msg","nodeNamespace","indexOf","nodeItem","parseForNodeIdentifier","nodeIdentifier","includes","substring","type","NodeIdType","NUMERIC","identifier","GUID","BYTESTRING","STRING","parseIdentifierFromItemNodeId","newOPCUANodeIdFromItemNodeId","namespace","parseNamspaceFromItemNodeId","newOPCUANodeIdFromMsgTopic","parseIdentifierFromMsgTopic","pushItemToWriteList","nodesToWrite","push","attributeId","Value","indexRange","addressSpaceItems","length","itemList","index","valuesToWrite","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","datatypeName","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","buildNodesToRead","nodesToRead","nodePayloadList","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","nodeList","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_iterator6","addressItemsToRead","buildNodesFromBrowser","buildNodeListFromClient","buildNodesToListen","nodetype","availableMemory","freemem","totalmem","isSessionBad","setNodeStatusTo","node","connector","opcuaClient","AttributeIds","buildNodesToWrite","identifierType","callerType","stateMachine","getMachineState","showErrors","error","Error","emit","setNodeOPCUAConnected","setNodeOPCUAClosed","setNodeOPCUASessionStarted","opcuaSession","setNodeOPCUASessionClosed","setNodeOPCUASessionRestart","setNodeOPCUASessionError","setNodeOPCUARestart","registerToConnector","registerForOPCUA","on","setNodeInitalState","id","deregisterForOPCUA","checkSessionNotValid","session","sessionId","showStatusActivities","statusParameter","oldStatusParameter","text","initClientNode","reconnectTimeout","sessionTimeout","getItemFilterValueWithElement","element","filterValue","handleErrorInsideNode","message","checkCrawlerItemIsNotToFilter","result","key","match","checkResponseItemIsNotToFilter","checkItemForUnsetState","activateUnsetFilter","checkConnectorState"],"mappings":"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","file":"../../core/opcua-iiot-core.js","sourcesContent":["/**\n The BSD 3-Clause License\n\n Copyright 2016,2017,2018 - Klaus Landsdorf (http://bianco-royal.de/)\n Copyright 2015,2016 - Mika Karaila, Valmet Automation Inc. (node-red-contrib-opcua)\n All rights reserved.\n node-red-contrib-iiot-opcua\n */\n'use strict'\nrequire('source-map-support').install()\n\n/**\n * Nested namespace settings.\n *\n * @type {{biancoroyal: {opcua: {iiot: {core: {}}}}}}\n *\n * @Namesapce de.biancoroyal.opcua.iiot.core\n */\nvar de = de || {biancoroyal: {opcua: {iiot: {core: {}}}}} // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.nodeOPCUA = de.biancoroyal.opcua.iiot.core.nodeOPCUA || require('node-opcua') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.nodeOPCUAId = de.biancoroyal.opcua.iiot.core.nodeOPCUAId || require('node-opcua-nodeid') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.internalDebugLog = de.biancoroyal.opcua.iiot.core.internalDebugLog || require('debug')('opcuaIIoT:core') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.detailDebugLog = de.biancoroyal.opcua.iiot.core.detailDebugLog || require('debug')('opcuaIIoT:core:details') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.specialDebugLog = de.biancoroyal.opcua.iiot.core.specialDebugLog || require('debug')('opcuaIIoT:core:special') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.OBJECTS_ROOT = de.biancoroyal.opcua.iiot.core.OBJECTS_ROOT || 'ns=0;i=84' // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.TEN_SECONDS_TIMEOUT = de.biancoroyal.opcua.iiot.core.TEN_SECONDS_TIMEOUT || 10 // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.RUNNING_STATE = de.biancoroyal.opcua.iiot.core.RUNNING_STATE || 'SESSIONACTIVE' // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.os = de.biancoroyal.opcua.iiot.core.os || require('os') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.assert = de.biancoroyal.opcua.iiot.core.assert || require('better-assert') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.underscore = de.biancoroyal.opcua.iiot.core.underscore || require('underscore') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.isWindows = de.biancoroyal.opcua.iiot.core.isWindows || /^win/.test(de.biancoroyal.opcua.iiot.core.os.platform()) // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.FAKTOR_SEC_TO_MSEC = de.biancoroyal.opcua.iiot.core.FAKTOR_SEC_TO_MSEC || 1000 // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.DEFAULT_TIMEOUT = de.biancoroyal.opcua.iiot.core.DEFAULT_TIMEOUT || 1000 // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.internalDebugLog(de.biancoroyal.opcua.iiot.core.os.endianness())\nde.biancoroyal.opcua.iiot.core.internalDebugLog(de.biancoroyal.opcua.iiot.core.os.hostname())\nde.biancoroyal.opcua.iiot.core.internalDebugLog(de.biancoroyal.opcua.iiot.core.os.platform())\nde.biancoroyal.opcua.iiot.core.internalDebugLog(de.biancoroyal.opcua.iiot.core.os.type())\nde.biancoroyal.opcua.iiot.core.internalDebugLog(de.biancoroyal.opcua.iiot.core.os.arch())\n\nde.biancoroyal.opcua.iiot.core.getPathFromRequireResolve = function (requireResolve) {\n  let pathToNodeOPCUA = ''\n\n  if (this.isWindows) {\n    pathToNodeOPCUA = requireResolve.replace('\\\\index.js', '')\n  } else {\n    pathToNodeOPCUA = requireResolve.replace('/index.js', '')\n  }\n\n  this.internalDebugLog('path to node-opcua: ' + pathToNodeOPCUA)\n\n  return pathToNodeOPCUA\n}\n\nde.biancoroyal.opcua.iiot.core.getNodeOPCUAPath = function () {\n  return this.getPathFromRequireResolve(require.resolve('node-opcua'))\n}\n\nde.biancoroyal.opcua.iiot.core.getNodeOPCUAClientPath = function () {\n  return this.getPathFromRequireResolve(require.resolve('node-opcua-client'))\n}\n\nde.biancoroyal.opcua.iiot.core.getNodeOPCUAServerPath = function () {\n  return this.getPathFromRequireResolve(require.resolve('node-opcua-server'))\n}\n\nde.biancoroyal.opcua.iiot.core.getTimeUnitName = function (unit) {\n  let unitAbbreviation = ''\n\n  switch (unit) {\n    case 'ms':\n      unitAbbreviation = 'msec.'\n      break\n    case 's':\n      unitAbbreviation = 'sec.'\n      break\n    case 'm':\n      unitAbbreviation = 'min.'\n      break\n    case 'h':\n      unitAbbreviation = 'h.'\n      break\n    default:\n      break\n  }\n\n  return unitAbbreviation\n}\n\nde.biancoroyal.opcua.iiot.core.calcMillisecondsByTimeAndUnit = function (time, unit) {\n  let convertedTime\n\n  switch (unit) {\n    case 'ms':\n      convertedTime = time\n      break\n    case 's':\n      convertedTime = time * 1000 // seconds\n      break\n    case 'm':\n      convertedTime = time * 60000 // minutes\n      break\n    case 'h':\n      convertedTime = time * 3600000 // hours\n      break\n    default:\n      convertedTime = 10000 // 10 sec.\n      break\n  }\n\n  return convertedTime\n}\n\nde.biancoroyal.opcua.iiot.core.buildBrowseMessage = function (topic) {\n  return {\n    'topic': topic,\n    'nodeId': '',\n    'browseName': '',\n    'nodeClassType': '',\n    'typeDefinition': '',\n    'payload': ''\n  }\n}\n\nde.biancoroyal.opcua.iiot.core.toInt32 = function (x) {\n  let uintSixteen = x\n\n  if (uintSixteen >= Math.pow(2, 15)) {\n    uintSixteen = x - Math.pow(2, 16)\n    return uintSixteen\n  } else {\n    return uintSixteen\n  }\n}\n\nde.biancoroyal.opcua.iiot.core.getNodeStatus = function (statusValue, statusLog) {\n  let fillValue = 'yellow'\n  let shapeValue = 'ring'\n\n  switch (statusValue) {\n    case 'initialize':\n    case 'connecting':\n      fillValue = 'yellow'\n      break\n    case 'connected':\n    case 'keepalive':\n    case 'subscribe':\n    case 'started':\n      if (!statusLog) {\n        statusValue = 'active'\n        shapeValue = 'dot'\n      }\n      fillValue = 'green'\n      break\n    case 'active':\n    case 'subscribed':\n    case 'listening':\n      fillValue = 'green'\n      shapeValue = 'dot'\n      break\n    case 'disconnected':\n    case 'terminated':\n      fillValue = 'red'\n      break\n    case 'waiting':\n      fillValue = 'blue'\n      shapeValue = 'dot'\n      statusValue = 'waiting ...'\n      break\n    case 'error':\n      fillValue = 'red'\n      shapeValue = 'dot'\n      break\n    default:\n      if (!statusValue) {\n        fillValue = 'blue'\n        statusValue = 'waiting ...'\n      }\n  }\n\n  return {fill: fillValue, shape: shapeValue, status: statusValue}\n}\n\nde.biancoroyal.opcua.iiot.core.buildNewVariant = function (datatype, value) {\n  let opcua = de.biancoroyal.opcua.iiot.core.nodeOPCUA\n  let variantValue = null\n\n  this.detailDebugLog('buildNewVariant datatype: ' + datatype + ' value:' + value)\n\n  switch (datatype) {\n    case 'Float':\n    case opcua.DataType.Float:\n      variantValue = {\n        dataType: opcua.DataType.Float,\n        value: parseFloat(value)\n      }\n      break\n    case 'Double':\n    case opcua.DataType.Double:\n      variantValue = {\n        dataType: opcua.DataType.Double,\n        value: parseFloat(value)\n      }\n      break\n    case 'UInt16':\n    case opcua.DataType.UInt16:\n      let uint16 = new Uint16Array([value])\n      variantValue = {\n        dataType: opcua.DataType.UInt16,\n        value: uint16[0]\n      }\n      break\n    case 'UInt32':\n    case opcua.DataType.UInt32:\n      let uint32 = new Uint32Array([value])\n      variantValue = {\n        dataType: opcua.DataType.UInt32,\n        value: uint32[0]\n      }\n      break\n    case 'Int32':\n    case opcua.DataType.Int32:\n      variantValue = {\n        dataType: opcua.DataType.Int32,\n        value: parseInt(value)\n      }\n      break\n    case 'Int16':\n    case opcua.DataType.Int16:\n      variantValue = {\n        dataType: opcua.DataType.Int16,\n        value: parseInt(value)\n      }\n      break\n    case 'Int64':\n    case opcua.DataType.Int64:\n      variantValue = {\n        dataType: opcua.DataType.Int64,\n        value: parseInt(value)\n      }\n      break\n    case 'Boolean':\n    case opcua.DataType.Boolean:\n      if (value && value !== 'false') {\n        variantValue = {\n          dataType: opcua.DataType.Boolean,\n          value: true\n        }\n      } else {\n        variantValue = {\n          dataType: opcua.DataType.Boolean,\n          value: false\n        }\n      }\n      break\n    case 'LocalizedText':\n    case opcua.DataType.LocalizedText:\n      variantValue = {\n        dataType: opcua.DataType.LocalizedText,\n        value: JSON.parse(value) /* [{text:'Hello', locale:'en'}, {text:'Hallo', locale:'de'} ... ] */\n      }\n      break\n    case 'DateTime':\n    case opcua.DataType.DateTime:\n      variantValue = {\n        dataType: opcua.DataType.DateTime,\n        value: new Date(value)\n      }\n      break\n    default:\n      if (datatype !== '') {\n        const datatypeList = this.getBasicDataTypes()\n        datatypeList.forEach((item) => {\n          if (item.name === datatype || item.dataType === datatype) {\n            variantValue = {\n              dataType: item.dataType,\n              value: value\n            }\n          }\n        })\n      } else {\n        variantValue = {\n          dataType: opcua.DataType.String,\n          value: value\n        }\n      }\n      break\n  }\n\n  this.detailDebugLog('buildNewVariant variantValue: ' + JSON.stringify(variantValue))\n\n  return variantValue\n}\n\nde.biancoroyal.opcua.iiot.core.getVariantValue = function (datatype, value) {\n  let opcua = de.biancoroyal.opcua.iiot.core.nodeOPCUA\n\n  switch (datatype) {\n    case 'Float':\n    case 'Double':\n    case opcua.DataType.Double:\n      return parseFloat(value)\n    case 'UInt16':\n    case opcua.DataType.UInt16:\n      let uint16 = new Uint16Array([value])\n      return uint16[0]\n    case 'UInt32':\n    case opcua.DataType.UInt32:\n      let uint32 = new Uint32Array([value])\n      return uint32[0]\n    case 'Int16':\n    case opcua.DataType.Int16:\n    case 'Int32':\n    case 'Integer':\n    case opcua.DataType.Int32:\n    case 'Int64':\n    case opcua.DataType.Int64:\n      return parseInt(value)\n    case 'Boolean':\n    case opcua.DataType.Boolean:\n      return (value && value !== 'false')\n    case 'DateTime':\n    case opcua.DataType.DateTime:\n      return new Date(value)\n    case 'String':\n    case opcua.DataType.String:\n      return (typeof value !== 'string') ? value.toString() : value\n    default:\n      return value\n  }\n}\n\nde.biancoroyal.opcua.iiot.core.getBasicDataTypes = function () {\n  let opcua = de.biancoroyal.opcua.iiot.core.nodeOPCUA\n\n  return [\n    {name: 'Null', dataType: opcua.DataType.Null},\n    {name: 'Boolean', dataType: opcua.DataType.Boolean},\n    {name: 'SByte', dataType: opcua.DataType.SByte},\n    {name: 'Byte', dataType: opcua.DataType.Byte},\n    {name: 'Int16', dataType: opcua.DataType.Int16},\n    {name: 'UInt16', dataType: opcua.DataType.UInt16},\n    {name: 'Int32', dataType: opcua.DataType.Int32},\n    {name: 'UInt32', dataType: opcua.DataType.UInt32},\n    {name: 'Int64', dataType: opcua.DataType.Int64},\n    {name: 'UInt64', dataType: opcua.DataType.UInt64},\n    {name: 'Float', dataType: opcua.DataType.Float},\n    {name: 'Double', dataType: opcua.DataType.Double},\n    {name: 'DateTime', dataType: opcua.DataType.DateTime},\n    {name: 'String', dataType: opcua.DataType.String},\n    {name: 'Guid', dataType: opcua.DataType.Guid},\n    {name: 'ByteString', dataType: opcua.DataType.ByteString},\n    {name: 'XmlElement', dataType: opcua.DataType.XmlElement},\n    {name: 'NodeId', dataType: opcua.DataType.NodeId},\n    {name: 'ExpandedNodeId', dataType: opcua.DataType.ExpandedNodeId},\n    {name: 'StatusCode', dataType: opcua.DataType.StatusCode},\n    {name: 'LocalizedText', dataType: opcua.DataType.LocalizedText},\n    {name: 'ExtensionObject', dataType: opcua.DataType.ExtensionObject},\n    {name: 'DataValue', dataType: opcua.DataType.DataValue},\n    {name: 'Variant', dataType: opcua.DataType.Variant},\n    {name: 'DiagnosticInfo', dataType: opcua.DataType.DiagnosticInfo}\n  ]\n}\n\nde.biancoroyal.opcua.iiot.core.convertDataValue = function (value) {\n  return de.biancoroyal.opcua.iiot.core.convertDataValueByDataType(value, value.dataType)\n}\n\nde.biancoroyal.opcua.iiot.core.convertDataValueByDataType = function (value, dataType) {\n  let opcua = de.biancoroyal.opcua.iiot.core.nodeOPCUA\n  let convertedValue = null\n\n  if (!value.hasOwnProperty('value')) {\n    this.specialDebugLog('value has no value and that is not allowed ' + JSON.stringify(value))\n    return value\n  }\n\n  let valueType = typeof value.value\n\n  this.detailDebugLog('convertDataValue: ' + JSON.stringify(value) +\n    ' value origin type ' + valueType + ' convert to' + ' ' + dataType)\n\n  try {\n    switch (dataType) {\n      case 'NodeId':\n      case opcua.DataType.NodeId:\n        convertedValue = value.value.toString()\n        break\n      case 'NodeIdType':\n      case opcua.DataType.NodeIdType:\n        if (value.value instanceof Buffer) {\n          convertedValue = value.value.toString()\n        } else {\n          convertedValue = value.value\n        }\n        break\n      case 'ByteString':\n      case opcua.DataType.ByteString:\n        convertedValue = value.value\n        break\n      case 'Byte':\n      case opcua.DataType.Byte:\n        if (valueType === 'boolean') {\n          convertedValue = value.value ? 1 : 0\n        } else {\n          convertedValue = parseInt(value.value)\n        }\n        break\n      case opcua.DataType.QualifiedName:\n        convertedValue = value.value.toString()\n        break\n      case 'LocalizedText':\n      case opcua.DataType.LocalizedText:\n        convertedValue = value.value\n        break\n      case 'Float':\n      case opcua.DataType.Float:\n        if (isNaN(value.value)) {\n          convertedValue = value.value\n        } else {\n          convertedValue = parseFloat(value.value)\n        }\n        break\n      case 'Double':\n      case opcua.DataType.Double:\n        if (isNaN(value.value)) {\n          convertedValue = value.value\n        } else {\n          convertedValue = parseFloat(value.value)\n        }\n        break\n      case 'UInt16':\n      case opcua.DataType.UInt16:\n        let uint16 = new Uint16Array([value.value])\n        convertedValue = uint16[0]\n        break\n      case 'UInt32':\n      case opcua.DataType.UInt32:\n        let uint32 = new Uint32Array([value.value])\n        convertedValue = uint32[0]\n        break\n      case 'Int16':\n      case opcua.DataType.Int16:\n      case 'Int32':\n      case opcua.DataType.Int32:\n      case 'Int64':\n      case opcua.DataType.Int64:\n        if (valueType === 'boolean') {\n          convertedValue = value.value ? 1 : 0\n        } else {\n          if (isNaN(value.value)) {\n            convertedValue = value.value\n          } else {\n            convertedValue = parseInt(value.value)\n          }\n        }\n        break\n      case 'Boolean':\n      case opcua.DataType.Boolean:\n        if (valueType === 'boolean') {\n          convertedValue = value.value\n        } else {\n          if (isNaN(value.value)) {\n            convertedValue = (value.value && value.value.toString().toLowerCase() !== 'false')\n          } else {\n            convertedValue = (value.value)\n          }\n        }\n        break\n      case 'String':\n      case opcua.DataType.String:\n        if (valueType !== 'string') {\n          convertedValue = value.value.toString()\n        } else {\n          convertedValue = value.value\n        }\n        break\n      case 'Null':\n      case opcua.DataType.Null:\n        convertedValue = null\n        break\n      default:\n        this.internalDebugLog('convertDataValue unused DataType: ' + dataType)\n        if (value.hasOwnProperty('value')) {\n          convertedValue = value.value\n        } else {\n          convertedValue = null\n        }\n        break\n    }\n  } catch (err) {\n    this.detailDebugLog('convertDataValue ' + err)\n  }\n\n  this.detailDebugLog('convertDataValue is: ' + convertedValue)\n\n  return convertedValue\n}\n\nde.biancoroyal.opcua.iiot.core.regex_ns_i = /ns=([0-9]+);i=([0-9]+)/\nde.biancoroyal.opcua.iiot.core.regex_ns_s = /ns=([0-9]+);s=(.*)/\nde.biancoroyal.opcua.iiot.core.regex_ns_b = /ns=([0-9]+);b=(.*)/\nde.biancoroyal.opcua.iiot.core.regex_ns_g = /ns=([0-9]+);g=(.*)/\n\nde.biancoroyal.opcua.iiot.core.parseNamspaceFromMsgTopic = function (msg) {\n  let nodeNamespace = null\n\n  if (msg && msg.topic) {\n    // TODO: real parsing instead of string operations\n    // TODO: which type are relevant here? (String, Integer ...)\n    nodeNamespace = msg.topic.substring(3, msg.topic.indexOf(';'))\n  }\n\n  return nodeNamespace\n}\n\nde.biancoroyal.opcua.iiot.core.parseNamspaceFromItemNodeId = function (item) {\n  let nodeNamespace = null\n  let nodeItem = item.nodeId || item\n\n  if (nodeItem) {\n    // TODO: real parsing instead of string operations\n    // TODO: which type are relevant here? (String, Integer ...)\n    nodeNamespace = nodeItem.substring(3, nodeItem.indexOf(';'))\n  }\n\n  return nodeNamespace\n}\n\nde.biancoroyal.opcua.iiot.core.parseForNodeIdentifier = function (nodeItem) {\n  let nodeIdentifier = null\n\n  if (nodeItem) {\n    // TODO: real parsing instead of string operations\n    if (nodeItem.includes(';i=')) {\n      nodeIdentifier = {\n        identifier: parseInt(nodeItem.substring(nodeItem.indexOf(';i=') + 3)),\n        type: de.biancoroyal.opcua.iiot.core.nodeOPCUAId.NodeIdType.NUMERIC\n      }\n    } else if (nodeItem.includes(';g=')) {\n      nodeIdentifier = {\n        identifier: nodeItem.substring(nodeItem.indexOf(';g=') + 3),\n        type: de.biancoroyal.opcua.iiot.core.nodeOPCUAId.NodeIdType.GUID\n      }\n    } else {\n      if (nodeItem.includes(';b=')) {\n        nodeIdentifier = {\n          identifier: nodeItem.substring(nodeItem.indexOf(';b=') + 3),\n          type: de.biancoroyal.opcua.iiot.core.nodeOPCUAId.NodeIdType.BYTESTRING\n        }\n      } else {\n        nodeIdentifier = {\n          identifier: nodeItem.substring(nodeItem.indexOf(';s=') + 3),\n          type: de.biancoroyal.opcua.iiot.core.nodeOPCUAId.NodeIdType.STRING\n        }\n      }\n    }\n  }\n  return nodeIdentifier\n}\n\nde.biancoroyal.opcua.iiot.core.parseIdentifierFromMsgTopic = function (msg) {\n  return this.parseForNodeIdentifier(msg.topic)\n}\n\nde.biancoroyal.opcua.iiot.core.parseIdentifierFromItemNodeId = function (item) {\n  return this.parseForNodeIdentifier(item.nodeId || item)\n}\n\nde.biancoroyal.opcua.iiot.core.newOPCUANodeIdFromItemNodeId = function (item) {\n  let namespace = de.biancoroyal.opcua.iiot.core.parseNamspaceFromItemNodeId(item)\n  let nodeIdentifier = de.biancoroyal.opcua.iiot.core.parseIdentifierFromItemNodeId(item)\n\n  this.internalDebugLog('newOPCUANodeIdFromItemNodeId: ' + JSON.stringify(item) + ' -> ' + JSON.stringify(nodeIdentifier) + ' namespace:' + namespace)\n  return new de.biancoroyal.opcua.iiot.core.nodeOPCUAId.NodeId(nodeIdentifier.type, nodeIdentifier.identifier, namespace)\n}\n\nde.biancoroyal.opcua.iiot.core.newOPCUANodeIdFromMsgTopic = function (msg) {\n  let namespace = de.biancoroyal.opcua.iiot.core.parseNamspaceFromMsgTopic(msg)\n  let nodeIdentifier = de.biancoroyal.opcua.iiot.core.parseIdentifierFromMsgTopic(msg)\n\n  this.internalDebugLog('newOPCUANodeIdFromMsgTopic: ' + JSON.stringify(nodeIdentifier))\n  return new de.biancoroyal.opcua.iiot.core.nodeOPCUAId.NodeId(nodeIdentifier.type, nodeIdentifier.identifier, namespace)\n}\n\nde.biancoroyal.opcua.iiot.core.pushItemToWriteList = function (msg, nodesToWrite, item, value) {\n  let opcua = de.biancoroyal.opcua.iiot.core.nodeOPCUA\n\n  nodesToWrite.push({\n    nodeId: this.newOPCUANodeIdFromItemNodeId(item),\n    attributeId: opcua.AttributeIds.Value,\n    indexRange: null,\n    value\n  })\n}\nde.biancoroyal.opcua.iiot.core.buildNodesToWrite = function (msg) {\n  let core = this\n  let nodesToWrite = []\n\n  this.detailDebugLog('buildNodesToWrite input: ' + JSON.stringify(msg))\n  let item = null\n\n  // compatible mode to nodesToWrite of node-opcua\n  if (!msg.addressSpaceItems || !msg.addressSpaceItems.length) {\n    let itemList = msg.payload.nodesToWrite || msg.nodesToWrite\n    if (itemList && itemList.length) {\n      msg.addressSpaceItems = itemList\n    }\n  }\n\n  if (msg.addressSpaceItems) {\n    let index = 0\n    if (msg.valuesToWrite) {\n      for (item of msg.addressSpaceItems) {\n        core.pushItemToWriteList(msg, nodesToWrite, item, {value: this.buildNewVariant(item.datatypeName, msg.valuesToWrite[index++])})\n      }\n    } else {\n      for (item of msg.addressSpaceItems) {\n        if (item.value) {\n          core.pushItemToWriteList(msg, nodesToWrite, item, {value: this.buildNewVariant(item.datatypeName, item.value)})\n        } else {\n          core.pushItemToWriteList(msg, nodesToWrite, item, {value: this.buildNewVariant(item.datatypeName, (msg.payload.length && msg.payload.length === msg.addressSpaceItems.length) ? msg.payload[index++] : msg.payload)})\n        }\n      }\n    }\n  }\n\n  this.internalDebugLog('buildNodesToWrite output: ' + JSON.stringify(nodesToWrite))\n\n  return nodesToWrite\n}\n\nde.biancoroyal.opcua.iiot.core.buildNodesToRead = function (msg) {\n  let nodesToRead = []\n  let item = null\n\n  this.detailDebugLog('buildNodesToRead input: ' + JSON.stringify(msg))\n\n  let nodePayloadList = msg.payload.nodesToRead || msg.payload.nodesToWrite\n  if (nodePayloadList && nodePayloadList.length) {\n    // read to read\n    for (item of nodePayloadList) {\n      item = item.nodeId || item\n      nodesToRead.push(item.toString())\n    }\n  } else {\n    let nodeList = msg.nodesToRead || msg.nodesToWrite\n    if (nodeList && nodeList.length) {\n      // legacy\n      for (item of nodeList) {\n        item = item.nodeId || item\n        nodesToRead.push(item.toString())\n      }\n    } else {\n      // new structure\n      if (msg.payload.addressSpaceItems && msg.payload.addressSpaceItems.length) {\n        for (item of msg.payload.addressSpaceItems) {\n          nodesToRead.push(item.nodeId)\n        }\n      } else {\n        if (msg.addressSpaceItems && msg.addressSpaceItems.length) {\n          for (item of msg.addressSpaceItems) {\n            nodesToRead.push(item.nodeId)\n          }\n        }\n      }\n    }\n  }\n\n  this.internalDebugLog('buildNodesToRead output: ' + JSON.stringify(nodesToRead))\n\n  return nodesToRead\n}\n\nde.biancoroyal.opcua.iiot.core.buildNodesToListen = function (msg) {\n  return msg.addressItemsToRead || msg.addressSpaceItems\n}\n\nde.biancoroyal.opcua.iiot.core.buildNodesFromBrowser = function (msg) {\n  return msg.addressItemsToRead || msg.addressSpaceItems\n}\n\nde.biancoroyal.opcua.iiot.core.buildNodeListFromClient = function (msg) {\n  switch (msg.nodetype) {\n    case 'read':\n    case 'write':\n      return this.buildNodesToRead(msg)\n    case 'listen':\n      return this.buildNodesToListen(msg)\n    case 'browse':\n    case 'crawl':\n      return this.buildNodesFromBrowser(msg)\n    default:\n      this.internalDebugLog('unknown node type injected to filter for ' + msg.nodetype)\n      return []\n  }\n}\n\nde.biancoroyal.opcua.iiot.core.availableMemory = function () {\n  return this.os.freemem() / this.os.totalmem() * 100.0\n}\n\nde.biancoroyal.opcua.iiot.core.isSessionBad = function (err) {\n  return (err.toString().includes('Session') ||\n    err.toString().includes('Channel') ||\n    err.toString().includes('Transaction') ||\n    err.toString().includes('timeout') ||\n    err.toString().includes('Connection'))\n}\n\nde.biancoroyal.opcua.iiot.core.setNodeInitalState = function (nodeState, node) {\n  switch (nodeState) {\n    case 'INITOPCUA':\n    case 'SESSIONREQUESTED':\n      this.setNodeStatusTo(node, 'connecting')\n      break\n    case 'OPEN':\n    case 'SESSIONCLOSED':\n      node.opcuaClient = node.connector.opcuaClient\n      this.setNodeStatusTo(node, 'connected')\n      break\n    case 'SESSIONACTIVE':\n      node.opcuaSession = node.connector.opcuaSession\n      this.setNodeStatusTo(node, 'active')\n      break\n    case 'LOCKED':\n      this.setNodeStatusTo(node, 'locked')\n      break\n    case 'UNLOCKED':\n      this.setNodeStatusTo(node, 'unlocked')\n      break\n    case 'STOPPED':\n      this.setNodeStatusTo(node, 'stopped')\n      break\n    case 'END':\n      this.setNodeStatusTo(node, 'end')\n      break\n    default:\n      this.setNodeStatusTo(node, 'waiting')\n  }\n}\n\nde.biancoroyal.opcua.iiot.core.isNodeId = function (nodeId) {\n  if (!nodeId || !nodeId.identifierType) {\n    return false\n  }\n\n  switch (nodeId.identifierType) {\n    case this.nodeOPCUA.NodeIdType.NUMERIC:\n    case this.nodeOPCUA.NodeIdType.STRING:\n    case this.nodeOPCUA.NodeIdType.GUID:\n      return true\n    default:\n      return false\n  }\n}\n\nde.biancoroyal.opcua.iiot.core.checkConnectorState = function (node, msg, callerType) {\n  this.internalDebugLog('Check Connector State ' + node.connector.stateMachine.getMachineState() + ' By ' + callerType)\n\n  if (node.connector && node.connector.stateMachine && node.connector.stateMachine.getMachineState() !== this.RUNNING_STATE) {\n    this.internalDebugLog('Wrong Client State ' + node.connector.stateMachine.getMachineState() + ' By ' + callerType)\n    if (node.showErrors) {\n      node.error(new Error('Client Not ' + this.RUNNING_STATE + ' On ' + callerType), msg)\n    }\n    this.setNodeStatusTo(node, 'not running')\n    node.emit('opcua_client_not_ready')\n    return false\n  } else {\n    return true\n  }\n}\n\nde.biancoroyal.opcua.iiot.core.setNodeOPCUAConnected = function (node, opcuaClient) {\n  node.opcuaClient = opcuaClient\n  this.setNodeStatusTo(node, 'connecting')\n}\n\nde.biancoroyal.opcua.iiot.core.setNodeOPCUAClosed = function (node) {\n  node.opcuaClient = null\n  this.setNodeStatusTo(node, 'disconnected')\n}\n\nde.biancoroyal.opcua.iiot.core.setNodeOPCUASessionStarted = function (node, opcuaSession) {\n  node.opcuaSession = opcuaSession\n  this.setNodeStatusTo(node, 'active')\n}\n\nde.biancoroyal.opcua.iiot.core.setNodeOPCUASessionClosed = function (node) {\n  node.opcuaSession = null\n  this.setNodeStatusTo(node, 'connecting')\n}\n\nde.biancoroyal.opcua.iiot.core.setNodeOPCUASessionRestart = function (node) {\n  this.setNodeStatusTo(node, 'restart')\n}\n\nde.biancoroyal.opcua.iiot.core.setNodeOPCUASessionError = function (node) {\n  node.opcuaSession = null\n  this.setNodeStatusTo(node, 'connecting')\n}\n\nde.biancoroyal.opcua.iiot.core.setNodeOPCUARestart = function (node, opcuaClient) {\n  this.internalDebugLog('Connector Restart')\n  if (opcuaClient) {\n    node.opcuaClient = opcuaClient\n  }\n  this.setNodeStatusTo(node, 'connecting')\n}\n\nde.biancoroyal.opcua.iiot.core.registerToConnector = function (node) {\n  let core = de.biancoroyal.opcua.iiot.core\n\n  if (!node) {\n    core.internalDebugLog('Node Not Valid On Register To Connector')\n    return\n  }\n\n  if (!node.connector) {\n    node.error(new Error('Connector Config Node Not Valid On Registering Client Node ' + node.id), {payload: 'No Connector Configured'})\n    return\n  }\n\n  node.connector.registerForOPCUA(node)\n\n  node.connector.on('connector_init', () => {\n    if (node.opcuaClient) {\n      node.opcuaClient = null\n    }\n\n    if (node.opcuaSession) {\n      node.opcuaSession = null\n    }\n  })\n\n  node.connector.on('connection_started', (opcuaClient) => {\n    core.setNodeOPCUAConnected(node, opcuaClient)\n  })\n\n  node.connector.on('server_connection_close', () => {\n    core.setNodeOPCUAClosed(node)\n  })\n\n  node.connector.on('server_connection_abort', () => {\n    core.setNodeOPCUAClosed(node)\n  })\n\n  node.connector.on('connection_closed', () => {\n    core.setNodeOPCUAClosed(node)\n  })\n\n  node.connector.on('reset_opcua_connection', () => {\n    core.setNodeOPCUASessionClosed(node)\n  })\n\n  node.connector.on('session_started', (opcuaSession) => {\n    core.setNodeOPCUASessionStarted(node, opcuaSession)\n  })\n\n  node.connector.on('session_closed', () => {\n    core.setNodeOPCUASessionClosed(node)\n  })\n\n  node.connector.on('session_restart', () => {\n    core.setNodeOPCUAClosed(node)\n  })\n\n  node.connector.on('session_error', () => {\n    core.setNodeOPCUASessionError(node)\n  })\n\n  node.connector.on('after_reconnection', () => {\n    core.setNodeOPCUARestart(node)\n  })\n\n  core.setNodeInitalState(node.connector.stateMachine.getMachineState(), node)\n}\n\nde.biancoroyal.opcua.iiot.core.deregisterToConnector = function (node, done) {\n  let core = de.biancoroyal.opcua.iiot.core\n  if (!node) {\n    core.internalDebugLog('Node Not Valid On Register To Connector')\n    done()\n    return\n  }\n\n  if (!node.connector) {\n    node.error(new Error('Connector Not Valid On Register To Connector'), {payload: 'No Connector Configured'})\n    done()\n    return\n  }\n\n  node.connector.deregisterForOPCUA(node, done)\n}\n\nde.biancoroyal.opcua.iiot.core.checkSessionNotValid = function (session, callerType) {\n  if (!session) {\n    this.internalDebugLog('Session Not Valid On Check For ' + callerType)\n    return true\n  }\n\n  if (session.sessionId === 'terminated') {\n    this.internalDebugLog('Session Is Valid But Terminated On Check For ' + callerType)\n    return true\n  }\n\n  return false\n}\n\nde.biancoroyal.opcua.iiot.core.setNodeStatusTo = function (node, statusValue) {\n  let statusParameter = this.getNodeStatus(statusValue, node.showStatusActivities)\n  if (!this.underscore.isEqual(node.oldStatusParameter, statusParameter)) {\n    this.detailDebugLog('Node ' + node.id + ' Status To ' + statusValue)\n    node.oldStatusParameter = statusParameter\n    node.status({fill: statusParameter.fill, shape: statusParameter.shape, text: statusParameter.status})\n  }\n}\n\nde.biancoroyal.opcua.iiot.core.initClientNode = function (node) {\n  node.reconnectTimeout = this.DEFAULT_TIMEOUT\n  node.sessionTimeout = null\n  node.opcuaSession = null\n  node.opcuaClient = null\n  return node\n}\n\nde.biancoroyal.opcua.iiot.core.getItemFilterValueWithElement = function (item, element) {\n  let filterValue = null\n\n  switch (element.name) {\n    case 'browseName':\n    case 'statusCode':\n      filterValue = item[element.name].name\n      break\n    case 'displayName':\n      filterValue = item[element.name].text\n      break\n    case 'value':\n    case 'dataType':\n      if (item.value && item.value.hasOwnProperty('value')) {\n        filterValue = item.value[element.name]\n      } else {\n        filterValue = item[element.name]\n      }\n      break\n    default:\n      filterValue = item[element.name]\n  }\n\n  return filterValue\n}\n\nde.biancoroyal.opcua.iiot.core.handleErrorInsideNode = function (node, err) {\n  this.internalDebugLog(typeof node + ' ' + err.message)\n  if (node.showErrors) {\n    node.error(err, {payload: err.message})\n  }\n}\n\nde.biancoroyal.opcua.iiot.core.checkCrawlerItemIsNotToFilter = function (node, item, element, result) {\n  try {\n    let filterValue = this.getItemFilterValueWithElement(item, element)\n\n    if (filterValue && filterValue.key && filterValue.key.match) {\n      if (filterValue.key.match(element.value)) {\n        result &= false\n      }\n    } else {\n      if (filterValue && filterValue.match) {\n        if (filterValue.match(element.value)) {\n          result &= false\n        }\n      } else {\n        if (filterValue && filterValue.toString) {\n          filterValue = filterValue.toString()\n          if (filterValue && filterValue.match) {\n            if (filterValue.match(element.value)) {\n              result &= false\n            }\n          }\n        }\n      }\n    }\n  } catch (err) {\n    this.handleErrorInsideNode(node, err)\n  }\n\n  return result\n}\n\nde.biancoroyal.opcua.iiot.core.checkResponseItemIsNotToFilter = function (node, item, element, result) {\n  try {\n    let filterValue = this.getItemFilterValueWithElement(item, element)\n\n    if (filterValue) {\n      if (filterValue.key && filterValue.key.match) {\n        result &= filterValue.key.match(element.value) !== null\n      } else {\n        if (filterValue.match) {\n          result &= filterValue.match(element.value) !== null\n        } else {\n          if (filterValue.toString) {\n            filterValue = filterValue.toString()\n            if (filterValue.match) {\n              result &= filterValue.match(element.value) !== null\n            }\n          }\n        }\n      }\n    } else {\n      result &= false // undefined items\n    }\n  } catch (err) {\n    this.handleErrorInsideNode(node, err)\n  }\n\n  return result\n}\n\nde.biancoroyal.opcua.iiot.core.checkItemForUnsetState = function (node, item) {\n  let result = true\n\n  if (node.activateUnsetFilter) {\n    result &= item !== null\n\n    if (item && item.hasOwnProperty('value')) {\n      if (item.value && item.value.hasOwnProperty('value')) {\n        result &= item.value.value !== null\n      } else {\n        result &= item.value !== null\n      }\n    }\n  }\n\n  return result\n}\n\nmodule.exports = de.biancoroyal.opcua.iiot.core\n"]}