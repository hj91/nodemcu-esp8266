[
    {
        "id": "41da91f8.ccc64",
        "type": "tab",
        "label": "Temp_RH_modbus_READ",
        "disabled": false,
        "info": ""
    },
    {
        "id": "80ea7c9d.62484",
        "type": "tab",
        "label": "datalogging",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e07746d8.1cb838",
        "type": "tab",
        "label": "logo with mqtt",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b39e2f1b.925dc",
        "type": "tab",
        "label": "chart example",
        "disabled": false,
        "info": ""
    },
    {
        "id": "34c2c505.7dce4a",
        "type": "tab",
        "label": "energy meter modbus",
        "disabled": false,
        "info": ""
    },
    {
        "id": "cd3a535c.0e484",
        "type": "tab",
        "label": "logo plc example",
        "disabled": false,
        "info": ""
    },
    {
        "id": "81de9994.36a3e8",
        "type": "tab",
        "label": "inject random values in influxdb",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c1db326d.9ec41",
        "type": "tab",
        "label": "add mqtt values in influxdb",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a56a147b.9fd3a8",
        "type": "tab",
        "label": "opcua to influxdb",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d7cf2401.0b5398",
        "type": "tab",
        "label": "IIoT OPC UA Demo",
        "disabled": false,
        "info": ""
    },
    {
        "id": "4eefdd8b.535664",
        "type": "tab",
        "label": "nodejs opcua server reading",
        "disabled": false,
        "info": ""
    },
    {
        "id": "1af4f2ac.6d855d",
        "type": "tab",
        "label": "kepware",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3affe5a7.6055aa",
        "type": "tab",
        "label": "buffer-to-string",
        "disabled": false,
        "info": ""
    },
    {
        "id": "639ad303.73121c",
        "type": "tab",
        "label": "bufferparse-example",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c31360ff.8939b",
        "type": "tab",
        "label": "modbus to influxdb",
        "disabled": false,
        "info": ""
    },
    {
        "id": "570720e7.87c29",
        "type": "modbus-client",
        "z": "",
        "name": "local",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "tcpHost": "192.168.1.3",
        "tcpPort": "502",
        "tcpType": "TPC-RTU-BUFFERED",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "10000",
        "reconnectTimeout": "2000"
    },
    {
        "id": "db95e5fd.c14f38",
        "type": "ui_group",
        "z": "",
        "name": "Modbus Test",
        "tab": "eb5a65d4.f485e8",
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "daa070ac.8b472",
        "type": "modbus-client",
        "z": "",
        "name": "local",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "tcpHost": "192.168.1.3",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectTimeout": "200"
    },
    {
        "id": "eb5a65d4.f485e8",
        "type": "ui_tab",
        "z": "",
        "name": "Modbus",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1e4d223d.468e5e",
        "type": "modbus-client",
        "z": "",
        "name": "esp-temp-rh-dht",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "tcpHost": "192.168.1.4",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectTimeout": "2000"
    },
    {
        "id": "394f3c93.b81c74",
        "type": "modbus-client",
        "z": "",
        "name": "Modbus Server",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": true,
        "tcpHost": "192.168.1.9",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": "1",
        "commandDelay": "1000",
        "clientTimeout": "2000",
        "reconnectTimeout": "1000"
    },
    {
        "id": "d4d1055.e097ef8",
        "type": "mui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "m-base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "m-page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "m-page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "m-page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "m-group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "m-group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "m-group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "m-widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "m-widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "m-widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "da6a4c23.9e0a2",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "Verdana,Verdana,Geneva,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#000000",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "Verdana,Verdana,Geneva,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "true",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "c399d6f2.eea1a8",
        "type": "modbustcp-server",
        "z": "",
        "name": "LOGO",
        "host": "192.168.0.3",
        "port": "502",
        "unit_id": "1",
        "reconnecttimeout": "20"
    },
    {
        "id": "a48a611.7e82ba",
        "type": "modbustcp-server",
        "z": "",
        "name": "",
        "host": "192.168.1.3",
        "port": "502",
        "unit_id": "1",
        "reconnecttimeout": "20"
    },
    {
        "id": "846dafce.73674",
        "type": "modbustcp-server",
        "z": "",
        "name": "esp8266_DHT",
        "host": "192.168.1.3",
        "port": "502",
        "unit_id": "1",
        "reconnecttimeout": "10"
    },
    {
        "id": "5ed179aa.7d9c58",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "5946a938.d9f098",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "120",
        "cleansession": true,
        "birthTopic": "harshad/temp",
        "birthQos": "0",
        "birthRetain": "true",
        "birthPayload": "1",
        "closeTopic": "",
        "closePayload": "",
        "willTopic": "harshad/RH",
        "willQos": "0",
        "willRetain": "true",
        "willPayload": "0"
    },
    {
        "id": "b665bf55.7603b",
        "type": "ui_group",
        "z": "",
        "name": "Control",
        "tab": "221d9f99.1a17c",
        "disp": true,
        "width": "4",
        "collapse": false
    },
    {
        "id": "58664d6f.31f324",
        "type": "ui_group",
        "z": "",
        "name": "Status",
        "tab": "221d9f99.1a17c",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "221d9f99.1a17c",
        "type": "ui_tab",
        "z": "",
        "name": "Logger",
        "icon": "dashboard"
    },
    {
        "id": "331b8ef7.204ea2",
        "type": "OpcUa-Endpoint",
        "z": "",
        "endpoint": "opc.tcp://192.168.1.75:49320/KEPServerEX",
        "secpol": "None",
        "secmode": "NONE",
        "login": false
    },
    {
        "id": "61699234.fb921c",
        "type": "mqtt-broker",
        "z": "",
        "broker": "mqtt.sensetecnic.com",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "75a4513d.5fdea",
        "type": "modbus-client",
        "z": "",
        "name": "Serial_2400_8_N_1",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": true,
        "tcpHost": "192.168.0.7",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB0",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": "1",
        "commandDelay": "30",
        "clientTimeout": "2000",
        "reconnectTimeout": "5000"
    },
    {
        "id": "c453d476.dcc6e8",
        "type": "ui_group",
        "z": "",
        "name": "SDM120 Energy Meter",
        "tab": "fcb70e24.12155",
        "order": 2,
        "disp": true,
        "width": "6"
    },
    {
        "id": "2ae3cb36.fd4994",
        "type": "mqtt-broker",
        "z": "",
        "name": "raspberrypi",
        "broker": "192.168.1.50",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "fcb70e24.12155",
        "type": "ui_tab",
        "z": "",
        "name": "Modbus",
        "icon": "memory",
        "order": 15
    },
    {
        "id": "b2ce1fa4.70709",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "e29f6998.912038",
        "type": "mqtt-broker",
        "z": "",
        "broker": "mqtt.sensetecnic.com",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "11543882.f97917",
        "type": "ui_group",
        "z": "",
        "name": "OPC-UA",
        "tab": "eb5a65d4.f485e8",
        "disp": true,
        "width": "10",
        "collapse": false
    },
    {
        "id": "cdfee87c.9d8218",
        "type": "ui_group",
        "z": "",
        "name": "Tank",
        "tab": "",
        "disp": true,
        "width": "10"
    },
    {
        "id": "bbb23af.177f3c8",
        "type": "ui_group",
        "z": "",
        "name": "Sprayer",
        "tab": "",
        "disp": true,
        "width": "10"
    },
    {
        "id": "1e2e720a.0acd6e",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "b1398ca9.a1fd1",
        "type": "modbus-client",
        "z": "",
        "name": "Serial_2400_8_N_1",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": true,
        "tcpHost": "10.10.100.254",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB0",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": "",
        "commandDelay": 30,
        "clientTimeout": 2000,
        "reconnectTimeout": 5000
    },
    {
        "id": "4a66be02.779ac",
        "type": "ui_group",
        "z": "",
        "name": "Logo PLC ",
        "tab": "d96614ff.9a18e8",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "ecb9462f.df5928",
        "type": "mqtt-broker",
        "z": "",
        "name": "raspberrypi",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "d96614ff.9a18e8",
        "type": "ui_tab",
        "z": "",
        "name": "Modbus",
        "icon": "memory",
        "order": 15
    },
    {
        "id": "1be7a1e.049e25e",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "56f2c2a3.583abc",
        "type": "ui_group",
        "z": "",
        "name": "OPC-UA",
        "tab": "9c077c2c.bbb3a",
        "disp": true,
        "width": "10",
        "collapse": true
    },
    {
        "id": "3b9ab0da.70acf",
        "type": "ui_group",
        "z": "",
        "name": "Tank",
        "tab": "9c077c2c.bbb3a",
        "disp": true,
        "width": "10",
        "collapse": false
    },
    {
        "id": "b2f0d7bf.7e3618",
        "type": "ui_group",
        "z": "",
        "name": "Sprayer",
        "tab": "3013f7bf.062b28",
        "disp": true,
        "width": "10",
        "collapse": false
    },
    {
        "id": "bc8710dd.405f1",
        "type": "OpcUa-Endpoint",
        "z": "",
        "endpoint": "opc.tcp://192.168.1.25:49320",
        "secpol": "None",
        "secmode": "NONE",
        "login": false
    },
    {
        "id": "a75e56df.7de078",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "9c077c2c.bbb3a",
        "type": "ui_tab",
        "z": "",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "3013f7bf.062b28",
        "type": "ui_tab",
        "z": "",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a9b02ec0.7319a",
        "type": "mui_group",
        "name": "mGroup 1",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "9d19ade8.9cf28",
        "type": "modbus-client",
        "z": "",
        "name": "modsim",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "tcpHost": "10.10.100.100",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectTimeout": "2000"
    },
    {
        "id": "48945f38.42bba",
        "type": "ui_group",
        "z": "",
        "name": "Read",
        "tab": "b69889ff.0072a8",
        "order": 3,
        "disp": true,
        "width": "6"
    },
    {
        "id": "bdf64513.838a68",
        "type": "modbus-client",
        "z": "",
        "name": "LOGO_PLC",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": true,
        "tcpHost": "192.168.0.3",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB0",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "57600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectTimeout": 2000
    },
    {
        "id": "87b8aee6.2de4",
        "type": "ui_group",
        "z": "",
        "name": "Output",
        "tab": "b69889ff.0072a8",
        "order": 5,
        "disp": true,
        "width": "24"
    },
    {
        "id": "a24c1130.63837",
        "type": "ui_group",
        "z": "",
        "name": "Write",
        "tab": "b69889ff.0072a8",
        "order": 4,
        "disp": true,
        "width": "6"
    },
    {
        "id": "945f8763.c1f538",
        "type": "ui_group",
        "z": "",
        "name": "TCP",
        "tab": "b69889ff.0072a8",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "dd9cafd7.40a8a",
        "type": "ui_group",
        "z": "",
        "name": "Serial",
        "tab": "b69889ff.0072a8",
        "order": 2,
        "disp": true,
        "width": "6"
    },
    {
        "id": "b69889ff.0072a8",
        "type": "ui_tab",
        "z": "",
        "name": "Modscan",
        "icon": "dashboard",
        "order": 2
    },
    {
        "id": "af9a5353.60b73",
        "type": "modbus-client",
        "z": "",
        "name": "local",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "tcpHost": "127.0.0.1",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectTimeout": 2000
    },
    {
        "id": "d98f8610.93ede8",
        "type": "ui_group",
        "z": "",
        "name": "Modbus Test",
        "tab": "ea9831b0.535b9",
        "disp": true,
        "width": "6"
    },
    {
        "id": "eb09573a.4e6928",
        "type": "modbus-client",
        "z": "",
        "name": "local",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "tcpHost": "127.0.0.1",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectTimeout": 2000
    },
    {
        "id": "ea9831b0.535b9",
        "type": "ui_tab",
        "z": "",
        "name": "Modbus",
        "icon": "dashboard"
    },
    {
        "id": "c2e46061.02aa8",
        "type": "modbus-client",
        "z": "",
        "name": "LOGO_PLC",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": true,
        "tcpHost": "192.168.0.3",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB0",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": "1",
        "commandDelay": "30",
        "clientTimeout": "2000",
        "reconnectTimeout": "5000"
    },
    {
        "id": "dd892386.8cd3d",
        "type": "ui_group",
        "z": "",
        "name": "SDM120 Energy Meter",
        "tab": "8a36e452.6665e8",
        "order": 2,
        "disp": true,
        "width": "6"
    },
    {
        "id": "7f47d8c0.d5e168",
        "type": "mqtt-broker",
        "z": "",
        "name": "raspberrypi",
        "broker": "192.168.1.50",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "8a36e452.6665e8",
        "type": "ui_tab",
        "z": "",
        "name": "Modbus",
        "icon": "memory",
        "order": 15
    },
    {
        "id": "cfd424ae.94ba28",
        "type": "modbus-client",
        "z": "",
        "name": "scan",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "tcpHost": "10.10.100.254",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectTimeout": "2000"
    },
    {
        "id": "916f2b15.767478",
        "type": "ui_group",
        "z": "",
        "name": "Read",
        "tab": "a8fb608.19b4ba",
        "order": 3,
        "disp": true,
        "width": "6"
    },
    {
        "id": "3bab9449.63999c",
        "type": "modbus-client",
        "z": "",
        "name": "MODSCAN",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "tcpHost": "10.10.100.254",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB0",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "57600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectTimeout": "2000"
    },
    {
        "id": "707047b5.f8eab8",
        "type": "ui_group",
        "z": "",
        "name": "Output",
        "tab": "a8fb608.19b4ba",
        "order": 5,
        "disp": true,
        "width": "24"
    },
    {
        "id": "383db2e8.944c1e",
        "type": "ui_group",
        "z": "",
        "name": "Write",
        "tab": "a8fb608.19b4ba",
        "order": 4,
        "disp": true,
        "width": "6"
    },
    {
        "id": "248990da.63f9b",
        "type": "ui_group",
        "z": "",
        "name": "TCP",
        "tab": "a8fb608.19b4ba",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "2d940063.12c41",
        "type": "ui_group",
        "z": "",
        "name": "Serial",
        "tab": "a8fb608.19b4ba",
        "order": 2,
        "disp": true,
        "width": "6"
    },
    {
        "id": "a8fb608.19b4ba",
        "type": "ui_tab",
        "z": "",
        "name": "Modscan",
        "icon": "dashboard",
        "order": 2
    },
    {
        "id": "678336b8.67cad8",
        "type": "modbustcp-server",
        "z": "",
        "name": "LOGO PLC",
        "host": "192.168.0.3",
        "port": "502",
        "unit_id": "1",
        "reconnecttimeout": "20"
    },
    {
        "id": "a8e97191.6aece",
        "type": "ui_group",
        "z": "",
        "name": "Charts",
        "tab": "961ebed3.d5e8d",
        "order": 2,
        "disp": false,
        "width": "6"
    },
    {
        "id": "b6c4c676.172c28",
        "type": "ui_group",
        "z": "",
        "name": "Inputs",
        "tab": "961ebed3.d5e8d",
        "order": 1,
        "disp": false,
        "width": "6"
    },
    {
        "id": "496c04af.3a0cdc",
        "type": "ui_group",
        "z": "",
        "name": "Group 3",
        "tab": "961ebed3.d5e8d",
        "order": 3,
        "disp": false,
        "width": "6"
    },
    {
        "id": "961ebed3.d5e8d",
        "type": "ui_tab",
        "z": "",
        "name": "Charts",
        "icon": "dashboard",
        "order": 2
    },
    {
        "id": "f362788e.9e7518",
        "type": "pushbullet-config",
        "z": "",
        "name": "harshad"
    },
    {
        "id": "92bf326e.5c58e",
        "type": "s7comm",
        "z": "",
        "ip": "192.168.0.3",
        "port": "102",
        "rack": "0",
        "slot": "2",
        "payload": [
            {
                "S7_Type": "I",
                "S7_DBnum": "0",
                "S7_Datatype": "X",
                "S7_Offset": "0",
                "S7_BitOffset": "0",
                "S7_Quantity": "1",
                "S7_Name": ""
            }
        ]
    },
    {
        "id": "6a0c2830.7ce658",
        "type": "modbustcp-server",
        "z": "",
        "name": "",
        "host": "192.168.0.3",
        "port": "502",
        "unit_id": "1",
        "reconnecttimeout": "10"
    },
    {
        "id": "956a5b0d.ae9d08",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "b02e223a.8b7f6",
        "type": "influxdb",
        "z": "",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "kepware",
        "name": "kepware",
        "usetls": false,
        "tls": ""
    },
    {
        "id": "393b7451.4a11cc",
        "type": "modbus-client",
        "z": "",
        "name": "Serial_2400_8_N_1",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": true,
        "tcpHost": "10.10.100.254",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB0",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": "",
        "commandDelay": 30,
        "clientTimeout": 2000,
        "reconnectTimeout": 5000
    },
    {
        "id": "8580805c.799ed",
        "type": "ui_group",
        "z": "",
        "name": "SDM120 Energy Meter",
        "tab": "5ab9f045.8f4b9",
        "order": 2,
        "disp": true,
        "width": "6"
    },
    {
        "id": "fd4c4e83.f27d9",
        "type": "mqtt-broker",
        "z": "",
        "name": "amazon aws",
        "broker": "http://34.203.249.121/",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "5ab9f045.8f4b9",
        "type": "ui_tab",
        "z": "",
        "name": "Modbus",
        "icon": "memory",
        "order": 15
    },
    {
        "id": "bde741aa.fc3ca",
        "type": "influxdb",
        "z": "",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "opcuapython",
        "name": "opcualocal",
        "usetls": false,
        "tls": "cff98b62.009678"
    },
    {
        "id": "cff98b62.009678",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false
    },
    {
        "id": "9df6ce68.a69ad",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "test",
        "name": "test",
        "usetls": true,
        "tls": "4763fbd2.50ffd4"
    },
    {
        "id": "4763fbd2.50ffd4",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false
    },
    {
        "id": "597a11b.3f7fcf",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "test 1.8 flux",
        "usetls": false,
        "tls": "3bc5f53c.776eea"
    },
    {
        "id": "3bc5f53c.776eea",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false
    },
    {
        "id": "7b92dedd.5f228",
        "type": "OpcUa-Endpoint",
        "z": "",
        "endpoint": "opc.tcp://127.0.0.1:55388/",
        "secpol": "None",
        "secmode": "NONE",
        "login": false
    },
    {
        "id": "d96329a7.167f18",
        "type": "ui_group",
        "z": "",
        "name": "Default",
        "tab": "7cdce5bc.ddaa2c",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "7cdce5bc.ddaa2c",
        "type": "ui_tab",
        "z": "",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a9de47ba.945aa8",
        "type": "OPCUA-IIoT-Connector",
        "z": "",
        "discoveryUrl": "",
        "endpoint": "opc.tcp://localhost:55388/",
        "keepSessionAlive": true,
        "loginEnabled": false,
        "securityPolicy": "None",
        "securityMode": "NONE",
        "name": "LOCAL DEMO SERVER",
        "showErrors": false,
        "individualCerts": false,
        "publicCertificateFile": "",
        "privateKeyFile": "",
        "defaultSecureTokenLifetime": "60000",
        "endpointMustExist": false,
        "autoSelectRightEndpoint": false,
        "strategyMaxRetry": "",
        "strategyInitialDelay": "",
        "strategyMaxDelay": "",
        "strategyRandomisationFactor": "",
        "requestedSessionTimeout": "",
        "connectionStartDelay": "",
        "reconnectDelay": "",
        "maxBadSessionRequests": ""
    },
    {
        "id": "e7eea987.3fd158",
        "type": "OpcUa-Endpoint",
        "z": "",
        "endpoint": "opc.tcp://192.168.1.10:4842",
        "secpol": "None",
        "secmode": "NONE",
        "login": false
    },
    {
        "id": "9098688a.18fc18",
        "type": "influxdb",
        "z": "",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "randomvalue",
        "name": "randomvalue",
        "usetls": false,
        "tls": "cff98b62.009678"
    },
    {
        "id": "c03af4ac.0fc338",
        "type": "influxdb",
        "z": "",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "mqtt",
        "name": "mqtt",
        "usetls": false,
        "tls": "cff98b62.009678"
    },
    {
        "id": "1c89f4c8.33da7b",
        "type": "influxdb",
        "z": "",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "opcuapython",
        "name": "opcuapython",
        "usetls": false,
        "tls": "cff98b62.009678"
    },
    {
        "id": "eaf79397.0b314",
        "type": "influxdb",
        "z": "",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "randomvalues",
        "name": "randomvalues",
        "usetls": false,
        "tls": "cff98b62.009678"
    },
    {
        "id": "5aeba82e.85c5c8",
        "type": "influxdb",
        "z": "",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "opcualocal",
        "name": "opcualocal",
        "usetls": false,
        "tls": "cff98b62.009678"
    },
    {
        "id": "20a9d50a.e32c0a",
        "type": "influxdb",
        "z": "",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "modbus",
        "name": "modbus",
        "usetls": false,
        "tls": "cff98b62.009678"
    },
    {
        "id": "601516ee.4687a8",
        "type": "influxdb",
        "z": "",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "harshad",
        "name": "",
        "usetls": false,
        "tls": "cff98b62.009678"
    },
    {
        "id": "bfbcbabe.546b58",
        "type": "debug",
        "z": "41da91f8.ccc64",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1087.5,
        "y": 291,
        "wires": []
    },
    {
        "id": "418b6685.e4a738",
        "type": "split",
        "z": "41da91f8.ccc64",
        "name": "",
        "splt": ",",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 492.5,
        "y": 168,
        "wires": [
            [
                "b9297a3f.2ef5f8",
                "2d2c5e26.d38ab2"
            ]
        ]
    },
    {
        "id": "b9297a3f.2ef5f8",
        "type": "switch",
        "z": "41da91f8.ccc64",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "index",
                "v": "0",
                "vt": "num",
                "v2": "3",
                "v2t": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 674.5,
        "y": 149,
        "wires": [
            [
                "b1f215a0.c32288"
            ]
        ]
    },
    {
        "id": "b1f215a0.c32288",
        "type": "switch",
        "z": "41da91f8.ccc64",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "index",
                "v": "3",
                "vt": "num",
                "v2": "3",
                "v2t": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 876,
        "y": 138,
        "wires": [
            [
                "6b0acc29.3f4344",
                "510ff547.a5c4fc"
            ]
        ]
    },
    {
        "id": "6b0acc29.3f4344",
        "type": "debug",
        "z": "41da91f8.ccc64",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1135,
        "y": 110,
        "wires": []
    },
    {
        "id": "2d2c5e26.d38ab2",
        "type": "switch",
        "z": "41da91f8.ccc64",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "index",
                "v": "3",
                "vt": "num",
                "v2": "6",
                "v2t": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 657,
        "y": 261,
        "wires": [
            [
                "a688066b.c9e0b8"
            ]
        ]
    },
    {
        "id": "a688066b.c9e0b8",
        "type": "switch",
        "z": "41da91f8.ccc64",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "index",
                "v": "6",
                "vt": "num",
                "v2": "6",
                "v2t": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 847,
        "y": 282,
        "wires": [
            [
                "bfbcbabe.546b58",
                "f65b0cf9.779c1"
            ]
        ]
    },
    {
        "id": "1f38dacb.673135",
        "type": "function",
        "z": "80ea7c9d.62484",
        "name": "Store Data",
        "func": "var local=flow.get('local') || {};\nvar topic=msg.topic;\nvar payload=msg.payload;\nvar last_payload=\"\";\nvar msg2={};\nvar by_topic=local.by_topic || false; // log by topic\nvar all_data=local.all_data || true; // log all data or only changed data\nvar store_time=local[\"store_time\"] ||false;\nvar store_topic=local[\"store_topic\"] ||false;\nvar start_logger=local[\"start_logger\"] || false;\nvar ignore_switches=local['ignore-switches'] || false;\nvar max_size =5000000; //maximum log file size\n\n//node.log(\" topic =\"+topic +\"message \"+msg.payload);\n//node.log(\" store topic =\"+ store_topic +start_logger);\n//\nfunction get_filename(topic,payload)\n{\n\n if (!(topic in local))\n\tlocal[topic]={}; //create\n\nvar filename=local[topic][\"cf_name\"] || \"log000.txt\";\n\n//node.log(filename);\nvar cf_counter=local[topic].cf_counter || 0;\nvar cf_size=local[topic].cf_size || 0;\n//node.log(\"file size=\"+cf_size +\" counter  \"+cf_counter);\ncf_size = cf_size +payload.length;\n\nif (cf_size>max_size)\n{\n//node.log(\"size limit reached\")\ncf_counter+=1\nvar count=cf_counter.toString();\nif (count.length==1)\ncount=\"00\"+count;\nif (count.length==2)\ncount=\"0\"+count;\n//\nfilename=\"log\"+count+\".txt\";\ncf_size=0;\n}\n//node.log(\"file size=\"+cf_size +\" counter  \"+cf_counter);\n//\nlocal[topic][\"cf_name\"]=filename;\nlocal[topic][\"cf_counter\"]= cf_counter;\nlocal[topic][\"cf_size\"]= cf_size;\nflow.set(\"local\",local);\nmsg2.payload=cf_counter;\n\n//\nreturn filename;\n\n\n}\nfunction message_changed(payload,topic)\n{\n  \tif (!local.all_data) //not logging all data\n\t {  \n\t\tif (!(local[topic]===undefined)) //test exists\n\t\t{\n\t\n\t\tlast_payload=local[topic][\"last_payload\"];\n\n\t\t//node.log(\"last payload \"+ last_payload);\n\t\t//node.log(\"This payload \"+ payload);\n\t\t}\n\t\telse\n\t\t\t\tlocal[\"topic\"]={}; //initialise\n\n\t\t//\n\t\tif (payload===last_payload)\n\t\t{\n\t\t//node.log(\"same data \"+topic +\"not logging\");\n\t\treturn false;\n\t\t}\n\t}  \n\treturn true;\n}\n\n//node.log(\"start_logger is \"+start_logger);\n\n\nif (start_logger)\n{\n//node.log(\"logging all data \"+local.all_data+ \"by topic\"+local.by_topic);\n\n\n\n\n//\nvar d = new Date();\nvar t = d.getTime();\ntry {\nnew_payload=JSON.parse(payload); //convert to javascript\n//node.log(\"data is already Json\");\npayload=new_payload;\n}\ncatch (e){\n\t//node.log(\"data is not Json\");\n}\n\nif (store_time && store_topic)\t\n\tpayload={\"time\":t,\"payload\":payload,\"topic\":topic};\nif (store_time && !store_topic)\n\tpayload={\"time\":t,\"payload\":payload};\nif (!store_time && store_topic)\n\tpayload={\"payload\":payload,\"topic\":topic};\nif (!store_time && !store_topic)\n\tpayload={\"payload\":payload};\t\npayload=JSON.stringify(payload);\n//node.log(\"payload is \",payload);\nif (local.by_topic===true)\n    var topic=msg.topic;\nelse\n    var topic=\"default\";\n\nvar filename=get_filename(topic,payload);\nl=topic.length;\nif (topic[l-1] !=\"/\")\nmsg.filename = \"/home/pi/logs/\"+ topic +\"/\"+filename;\nelse\nmsg.filename = \"/home/pi/logs/\"+ topic +filename;\n//node.log(\"filename= \"+msg.filename);\nmsg.payload=payload;\nif(message_changed(payload,topic))\n{\nlocal[topic][\"last_payload\"]=payload;\nflow.set('local',local);\n\nreturn [msg,msg2];\n}\nelse\nreturn [null,msg2];\n}\n\nreturn [null,null];",
        "outputs": 2,
        "noerr": 0,
        "x": 542,
        "y": 117,
        "wires": [
            [
                "4e62840d.c5e65c"
            ],
            []
        ]
    },
    {
        "id": "57d05ed6.9239c",
        "type": "mqtt in",
        "z": "80ea7c9d.62484",
        "name": "",
        "topic": "harshad/#",
        "qos": "0",
        "datatype": "auto",
        "broker": "5946a938.d9f098",
        "x": 192,
        "y": 117,
        "wires": [
            [
                "1f38dacb.673135"
            ]
        ]
    },
    {
        "id": "4e62840d.c5e65c",
        "type": "file",
        "z": "80ea7c9d.62484",
        "name": "/home/harshad/logsensordata",
        "filename": "data-log",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 844,
        "y": 119,
        "wires": [
            []
        ]
    },
    {
        "id": "a12fe371.993ae",
        "type": "debug",
        "z": "80ea7c9d.62484",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 662,
        "y": 477,
        "wires": []
    },
    {
        "id": "74e9c137.d4b9c",
        "type": "ui_switch",
        "z": "80ea7c9d.62484",
        "name": "",
        "label": "All Data",
        "group": "b665bf55.7603b",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "false",
        "topic": "ALL-DATA",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 372,
        "y": 197,
        "wires": [
            [
                "8ffd77c.3137488"
            ]
        ]
    },
    {
        "id": "c4717a23.a9f3b8",
        "type": "ui_switch",
        "z": "80ea7c9d.62484",
        "name": "",
        "label": "Log By Topic",
        "group": "b665bf55.7603b",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "false",
        "topic": "BY-TOPIC",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 402,
        "y": 257,
        "wires": [
            [
                "8ffd77c.3137488"
            ]
        ]
    },
    {
        "id": "201d7521.eb0f1a",
        "type": "ui_switch",
        "z": "80ea7c9d.62484",
        "name": "",
        "label": "Start Logging",
        "group": "b665bf55.7603b",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "false",
        "topic": "START",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 412,
        "y": 437,
        "wires": [
            [
                "8ffd77c.3137488"
            ]
        ]
    },
    {
        "id": "ca62b85c.532808",
        "type": "inject",
        "z": "80ea7c9d.62484",
        "name": "Set Initial switch states",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "init",
        "payload": "false",
        "payloadType": "bool",
        "x": 312,
        "y": 577,
        "wires": [
            [
                "bcb2c89c.a695e8"
            ]
        ]
    },
    {
        "id": "c9d16047.93df",
        "type": "ui_text",
        "z": "80ea7c9d.62484",
        "group": "58664d6f.31f324",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Stop/Start",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 812,
        "y": 257,
        "wires": []
    },
    {
        "id": "4f1e549a.0bfc7c",
        "type": "ui_switch",
        "z": "80ea7c9d.62484",
        "name": "",
        "label": "Store Date-Time",
        "group": "b665bf55.7603b",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "false",
        "topic": "STORE-TIME",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 412,
        "y": 377,
        "wires": [
            [
                "8ffd77c.3137488"
            ]
        ]
    },
    {
        "id": "fa7cc2f9.6cede",
        "type": "ui_switch",
        "z": "80ea7c9d.62484",
        "name": "",
        "label": "Store Topic",
        "group": "b665bf55.7603b",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "false",
        "topic": "STORE-TOPIC",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 402,
        "y": 317,
        "wires": [
            [
                "8ffd77c.3137488"
            ]
        ]
    },
    {
        "id": "8ffd77c.3137488",
        "type": "function",
        "z": "80ea7c9d.62484",
        "name": "Set Switches",
        "func": "var local=flow.get('local') || {};\nvar topic=msg.topic;\nvar msg1={};\nvar msg2={};\nmsg2.payload=\"\";\nvar by_topic=local[\"by_topic\"]|| false; // log by topic\nvar all_data=local[\"all_data\"] || true; // log all data or only changed data\nvar store_time=local[\"store_time\"] ||false;\nvar store_topic=local[\"store_topic\"] ||false;\nvar start_logger=local[\"start_logger\"] || false;\nvar ignore_switches=local['ignore-switches'] || false;\npayload=msg.payload;\nnode.log(\"in switch status\");\n\nfunction reset()\n{\nlocal={};\nlocal[\"all_data\"]=true\n local[\"by_topic\"]=false;   \n local[\"store_topic\"]=false; \n local[\"all_data\"]=true;\n local[\"store_time\"]=false;  \n local['ignore-switches']=false;\n local[\"start_logger\"]=false;\n \n}\n\tif (topic==\"RESET\")\n\t{\n\t    reset(); //reset stored data to default\n\t    flow.set('local',local);\n\t    msg2.payload=\"Manual Reset\";\n\t    node.log(\"start_logger is \"+local[\"start_logger\"]);\n\t    msg1.payload=\"Logging Stopped\";\n\t    return[msg1,msg2];\n\t    \n\t}\n\n\tif (topic==\"START\")\n\t{\n\t\tif (payload){\n\t\t\tnode.log(\"start_logger \");\n\t\t\tlocal[\"start_logger\"]=payload;\n\t\t\tlocal['ignore-switches']=true;\n\t\t\tflow.set('local',local);\n\t\t\tnode.log(\"start_logger \"+local.start_logger)\n\t\t\tmsg1.payload=\"Logging started\";\n\t\t\t\n\t\t\treturn [msg1,msg2];\n\t\t}\n\telse\n\t{\n\t\t\tmsg1.payload=\"Logging Stopped\";\n\t\t\tlocal[\"start_logger\"]=false;\n\t\t\treset(); //reset stored data to default\n\t\t\tflow.set('local',local);\n\t\t\tmsg2.payload=false //reset switches\n\t\t\treturn [msg1,msg2];\n\t}\n\t}\n\t\t\n\tif (topic==\"BY-TOPIC\" && !ignore_switches)\n\t{\n\t\tif (payload)\n\t\t{\n\t\t  local[\"by_topic\"]=true;\n\t\t  flow.set('local',local);\n\t\t  return [null,msg2];\n\t\t}\n\t\telse\n\t\t{\n\t\t  local[\"by_topic\"]=false;\n\t\t  flow.set('local',local);\n\t\t  return [null,msg2];\n\t\t}\t\n\t}\n\tif (topic==\"ALL-DATA\" && !ignore_switches)\n\t{\n\t\tif (payload)\n\t\t{\n\n\t\t  local[\"all_data\"]=true;\n\t\t  flow.set('local',local);\n\t\t  return [null,msg2];\n\t\t}\n\t\telse\n\t\t{\n\n\t\t  local[\"all_data\"]=false;\n\t\t  flow.set('local',local);\n\t\t  return [null,msg2];\n\t\t}\n\t}\n\tif (topic==\"STORE-TOPIC\" && !ignore_switches)\n\t{\n\t\tif (payload)\n\t\t{\n\t\t  local[\"store_topic\"]=true;\n\t\t  flow.set('local',local);\n\t\t return [null,msg2];\n\t\t}\n\telse\n\t\t{\n\t\t  local[\"store_topic\"]=false;\n\t\t  flow.set('local',local);\n\t\t  return [null,msg2];\n\t\t}\n\t}\n\t\n\tif (topic==\"STORE-TIME\" && !ignore_switches)\n\t{\n\t\tif (payload)\n\t\t{\n\t\t  local[\"store_time\"]=true;\n\t\t  flow.set('local',local);\n\t\t return [null,msg2];\n\t\t}\n\telse\n\t\t{\n\t\t  local[\"store_time\"]=false;\n\t\t  flow.set('local',local);\n\t\t return [null,msg2];\n\t\t}\n\t}\t\t\n\n\n\n\n",
        "outputs": 3,
        "noerr": 0,
        "x": 622,
        "y": 317,
        "wires": [
            [
                "c9d16047.93df"
            ],
            [
                "4cc67c0a.61c9c4"
            ],
            []
        ]
    },
    {
        "id": "bcb2c89c.a695e8",
        "type": "ui_button",
        "z": "80ea7c9d.62484",
        "name": "",
        "group": "b665bf55.7603b",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "RESET",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "false",
        "payloadType": "bool",
        "topic": "RESET",
        "x": 212,
        "y": 457,
        "wires": [
            [
                "8ffd77c.3137488",
                "a12fe371.993ae",
                "201d7521.eb0f1a",
                "4f1e549a.0bfc7c",
                "fa7cc2f9.6cede",
                "c4717a23.a9f3b8",
                "f4a3d881.e896f8"
            ]
        ]
    },
    {
        "id": "f4a3d881.e896f8",
        "type": "change",
        "z": "80ea7c9d.62484",
        "name": "reset true",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 212,
        "y": 217,
        "wires": [
            [
                "74e9c137.d4b9c"
            ]
        ]
    },
    {
        "id": "4cc67c0a.61c9c4",
        "type": "ui_text",
        "z": "80ea7c9d.62484",
        "group": "58664d6f.31f324",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 822,
        "y": 317,
        "wires": []
    },
    {
        "id": "f65b0cf9.779c1",
        "type": "mqtt out",
        "z": "41da91f8.ccc64",
        "name": "",
        "topic": "harshad/Temp",
        "qos": "",
        "retain": "",
        "broker": "5ed179aa.7d9c58",
        "x": 949,
        "y": 446,
        "wires": []
    },
    {
        "id": "1b3bf103.0b994f",
        "type": "debug",
        "z": "41da91f8.ccc64",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 494.5,
        "y": 376,
        "wires": []
    },
    {
        "id": "c6779262.b6627",
        "type": "modbustcp-read",
        "z": "41da91f8.ccc64",
        "name": "esp8266_DHT",
        "topic": "",
        "dataType": "HoldingRegister",
        "adr": "10",
        "quantity": "7",
        "rate": "5",
        "rateUnit": "s",
        "server": "846dafce.73674",
        "ieeeType": "off",
        "ieeeBE": true,
        "x": 203,
        "y": 286,
        "wires": [
            [
                "418b6685.e4a738",
                "1b3bf103.0b994f"
            ]
        ]
    },
    {
        "id": "9d302311.26e9b",
        "type": "mqtt in",
        "z": "41da91f8.ccc64",
        "name": "",
        "topic": "harshad/RH",
        "qos": "2",
        "datatype": "auto",
        "broker": "5ed179aa.7d9c58",
        "x": 1032,
        "y": 215,
        "wires": [
            [
                "6f44c50a.469b4c",
                "2f9ca583.0f621a"
            ]
        ]
    },
    {
        "id": "6f44c50a.469b4c",
        "type": "ui_gauge",
        "z": "41da91f8.ccc64",
        "name": "",
        "group": "db95e5fd.c14f38",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "RH",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1299,
        "y": 260,
        "wires": []
    },
    {
        "id": "510ff547.a5c4fc",
        "type": "mqtt out",
        "z": "41da91f8.ccc64",
        "name": "",
        "topic": "harshad/RH",
        "qos": "",
        "retain": "",
        "broker": "5ed179aa.7d9c58",
        "x": 1071,
        "y": 30,
        "wires": []
    },
    {
        "id": "fa1f011e.72ed2",
        "type": "mqtt in",
        "z": "41da91f8.ccc64",
        "name": "",
        "topic": "harshad/Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "5ed179aa.7d9c58",
        "x": 1189,
        "y": 423,
        "wires": [
            [
                "b56c8114.47325",
                "3275c869.6a67b8"
            ]
        ]
    },
    {
        "id": "b56c8114.47325",
        "type": "ui_gauge",
        "z": "41da91f8.ccc64",
        "name": "",
        "group": "db95e5fd.c14f38",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temp",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1255,
        "y": 483,
        "wires": []
    },
    {
        "id": "2f9ca583.0f621a",
        "type": "ui_chart",
        "z": "41da91f8.ccc64",
        "name": "",
        "group": "db95e5fd.c14f38",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "RH chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1263,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "3275c869.6a67b8",
        "type": "ui_chart",
        "z": "41da91f8.ccc64",
        "name": "",
        "group": "db95e5fd.c14f38",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Temp chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1249,
        "y": 570,
        "wires": [
            []
        ]
    },
    {
        "id": "3d0a85c5.b395ba",
        "type": "function",
        "z": "b39e2f1b.925dc",
        "name": "",
        "func": "var m={};\nm.labels = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"];\nm.series = ['Series A', 'Series B', 'Series C'];\nm.data = [\n    [65, 59, 80, 81, 56, 55, 40],\n    [28, 48, 40, 19, 86, 27, 90],\n    [38, 28, 20, 49, 45, 60, 20]\n  ];\nreturn {payload:[m]};",
        "outputs": 1,
        "noerr": 0,
        "x": 436,
        "y": 377,
        "wires": [
            [
                "16ecc97c.da6307",
                "9541de7d.b9d06",
                "a71a1569.bbbe68",
                "d7df765f.0424d8"
            ]
        ]
    },
    {
        "id": "16ecc97c.da6307",
        "type": "ui_chart",
        "z": "b39e2f1b.925dc",
        "name": "",
        "group": "a8e97191.6aece",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "line chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "No Data",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 706,
        "y": 117,
        "wires": [
            []
        ]
    },
    {
        "id": "cc2825cf.d0d0d8",
        "type": "function",
        "z": "b39e2f1b.925dc",
        "name": "",
        "func": "var chart = [{\n    \"series\":[\"A\",\"B\",\"C\"],\n    \"data\":[[{\"x\":1504029632890,\"y\":5},{\"x\":1504029636001,\"y\":4},{\"x\":1504029638656,\"y\":2}],[{\"x\":1504029633514,\"y\":6},{\"x\":1504029636622,\"y\":7},{\"x\":1504029639539,\"y\":6}],[{\"x\":1504029634400,\"y\":7},{\"x\":1504029637959,\"y\":9},{\"x\":1504029640317,\"y\":7}]],\n    \"labels\":[\"\"]\n}];\nmsg.payload = chart;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 436,
        "y": 217,
        "wires": [
            [
                "16ecc97c.da6307"
            ]
        ]
    },
    {
        "id": "67ce277a.ad7f08",
        "type": "ui_button",
        "z": "b39e2f1b.925dc",
        "name": "",
        "group": "b6c4c676.172c28",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Time Line 1",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 296,
        "y": 217,
        "wires": [
            [
                "cc2825cf.d0d0d8"
            ]
        ]
    },
    {
        "id": "9541de7d.b9d06",
        "type": "ui_chart",
        "z": "b39e2f1b.925dc",
        "name": "",
        "group": "a8e97191.6aece",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "bar chart",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "No Data",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 2,
        "x": 706,
        "y": 177,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "406b4d66.892eb4",
        "type": "ui_button",
        "z": "b39e2f1b.925dc",
        "name": "",
        "group": "b6c4c676.172c28",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "array",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 276,
        "y": 377,
        "wires": [
            [
                "3d0a85c5.b395ba"
            ]
        ]
    },
    {
        "id": "1d2c747c.9d07ac",
        "type": "inject",
        "z": "b39e2f1b.925dc",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 296,
        "y": 577,
        "wires": [
            [
                "609a336c.00fbac"
            ]
        ]
    },
    {
        "id": "3851d48c.9708ac",
        "type": "function",
        "z": "b39e2f1b.925dc",
        "name": "",
        "func": "var m={};\nm.labels = [10,20,30,40,50,60,70];\nm.series = ['Series A', 'Series B', 'Series C', 'Series D'];\nm.data = [\n    [65, 59, 80, 81, 56, 55, 40],\n    [28, 48, 40, 19, 86, 27, 90],\n    [38, 28, 20, 49, 45, 60, 20],\n    [58, 18, 40, 29, 15, 30, 60]\n  ];\nreturn {payload:[m]};",
        "outputs": 1,
        "noerr": 0,
        "x": 436,
        "y": 417,
        "wires": [
            [
                "16ecc97c.da6307",
                "9541de7d.b9d06",
                "a71a1569.bbbe68",
                "d7df765f.0424d8"
            ]
        ]
    },
    {
        "id": "f3ea6fad.3bd16",
        "type": "ui_button",
        "z": "b39e2f1b.925dc",
        "name": "",
        "group": "b6c4c676.172c28",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "array2",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 276,
        "y": 417,
        "wires": [
            [
                "3851d48c.9708ac"
            ]
        ]
    },
    {
        "id": "f94ad265.e8ce7",
        "type": "function",
        "z": "b39e2f1b.925dc",
        "name": "",
        "func": "var chart = [{\n    \"series\":[\"A\",\"B\",\"C\"],\n        \"data\":[[{\"x\":1,\"y\":5},{\"x\":2,\"y\":4},{\"x\":3,\"y\":2}],[{\"x\":4,\"y\":6},{\"x\":5,\"y\":7},{\"x\":6,\"y\":6}],[{\"x\":7,\"y\":7},{\"x\":8,\"y\":9},{\"x\":9,\"y\":7}]],\n    \"labels\":[\"\"]\n}];\nmsg.payload = chart;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 436,
        "y": 257,
        "wires": [
            [
                "16ecc97c.da6307"
            ]
        ]
    },
    {
        "id": "37da16.2e8d85ea",
        "type": "ui_button",
        "z": "b39e2f1b.925dc",
        "name": "",
        "group": "b6c4c676.172c28",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Time Line 2",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 296,
        "y": 257,
        "wires": [
            [
                "f94ad265.e8ce7"
            ]
        ]
    },
    {
        "id": "f886d203.fec6c",
        "type": "function",
        "z": "b39e2f1b.925dc",
        "name": "",
        "func": "var m = {};\nm.labels = [\"Download\", \"In-Store\", \"Mail-Order\"];\nm.data = [[300, 500, 100]];\nm.series = [\"Sales\"];\nreturn {payload:[m],topic:msg.topic};",
        "outputs": 1,
        "noerr": 0,
        "x": 456,
        "y": 617,
        "wires": [
            [
                "d7df765f.0424d8",
                "9541de7d.b9d06",
                "16ecc97c.da6307",
                "5c8be18.c3cd42",
                "3f1d0f3c.60cd4",
                "a71a1569.bbbe68"
            ]
        ]
    },
    {
        "id": "d7df765f.0424d8",
        "type": "ui_chart",
        "z": "b39e2f1b.925dc",
        "name": "pie chart",
        "group": "a8e97191.6aece",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "pie chart",
        "chartType": "pie",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": "30",
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 2,
        "x": 746,
        "y": 357,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "599108ee.37e548",
        "type": "ui_button",
        "z": "b39e2f1b.925dc",
        "name": "",
        "group": "b6c4c676.172c28",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "array for pie",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "Pie 4 T",
        "x": 296,
        "y": 617,
        "wires": [
            [
                "f886d203.fec6c"
            ]
        ]
    },
    {
        "id": "4b6c116.ed3a5f",
        "type": "function",
        "z": "b39e2f1b.925dc",
        "name": "",
        "func": "var chart = [{\n    \"series\":[\"A\",\"B\",\"C\"],\n        \"data\":[[{\"x\":1000000,\"y\":5},{\"x\":2000000,\"y\":4},{\"x\":3000000,\"y\":2}],[{\"x\":4000000,\"y\":6},{\"x\":5000000,\"y\":7},{\"x\":6000000,\"y\":6}],[{\"x\":7000000,\"y\":7},{\"x\":8000000,\"y\":9},{\"x\":9000000,\"y\":7}]],\n    \"labels\":[\"\"]\n}];\nmsg.payload = chart;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 436,
        "y": 297,
        "wires": [
            [
                "16ecc97c.da6307"
            ]
        ]
    },
    {
        "id": "71dfe65a.7e2278",
        "type": "ui_button",
        "z": "b39e2f1b.925dc",
        "name": "",
        "group": "b6c4c676.172c28",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Time Line 3",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 296,
        "y": 297,
        "wires": [
            [
                "4b6c116.ed3a5f"
            ]
        ]
    },
    {
        "id": "afd021b5.c2a88",
        "type": "function",
        "z": "b39e2f1b.925dc",
        "name": "",
        "func": "var chart = [{\n    \"series\":[\"A\",\"B\",\"C\"],\n        \"data\":[[{\"x\":1000000000,\"y\":5},{\"x\":2000000000,\"y\":4},{\"x\":3000000000,\"y\":2}],[{\"x\":4000000000,\"y\":6},{\"x\":5000000000,\"y\":7},{\"x\":6000000000,\"y\":6}],[{\"x\":7000000000,\"y\":7},{\"x\":8000000000,\"y\":9},{\"x\":9000000000,\"y\":7}]],\n    \"labels\":[\"\"]\n}];\nmsg.payload = chart;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 436,
        "y": 337,
        "wires": [
            [
                "16ecc97c.da6307"
            ]
        ]
    },
    {
        "id": "29e1bd.4c690e44",
        "type": "ui_button",
        "z": "b39e2f1b.925dc",
        "name": "",
        "group": "b6c4c676.172c28",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Time Line 4",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 296,
        "y": 337,
        "wires": [
            [
                "afd021b5.c2a88"
            ]
        ]
    },
    {
        "id": "679de391.614adc",
        "type": "function",
        "z": "b39e2f1b.925dc",
        "name": "",
        "func": "var m={\n    \"series\":[\"X\",\"Y\",\"Z\"],\n    \"data\":[[5,6,9],[3,8,5],[6,7,2]],\n    \"labels\":[\"Jan\",\"Feb\",\"Mar\"]\n};\nreturn {payload:[m]};",
        "outputs": 1,
        "noerr": 0,
        "x": 436,
        "y": 537,
        "wires": [
            [
                "16ecc97c.da6307",
                "9541de7d.b9d06",
                "d7df765f.0424d8",
                "5c8be18.c3cd42",
                "3f1d0f3c.60cd4",
                "a71a1569.bbbe68"
            ]
        ]
    },
    {
        "id": "ca974b5a.7c5e18",
        "type": "ui_button",
        "z": "b39e2f1b.925dc",
        "name": "",
        "group": "b6c4c676.172c28",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "array3c",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 286,
        "y": 537,
        "wires": [
            [
                "679de391.614adc"
            ]
        ]
    },
    {
        "id": "e49f8693.465248",
        "type": "ui_button",
        "z": "b39e2f1b.925dc",
        "name": "",
        "group": "b6c4c676.172c28",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "array 2 for pie",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "Pie Hole",
        "x": 306,
        "y": 657,
        "wires": [
            [
                "945b5575.12c3a8"
            ]
        ]
    },
    {
        "id": "945b5575.12c3a8",
        "type": "function",
        "z": "b39e2f1b.925dc",
        "name": "",
        "func": "var m = {};\nm.labels = ['2006', '2007', '2008', '2009', '2010', '2011', '2012'];\nm.data = [[28, 48, 40, 19, 86, 27, 90]];\nm.series = ['Series A'];\nreturn {payload:[m],topic:msg.topic};",
        "outputs": 1,
        "noerr": 0,
        "x": 456,
        "y": 657,
        "wires": [
            [
                "d7df765f.0424d8",
                "9541de7d.b9d06",
                "3f1d0f3c.60cd4",
                "5c8be18.c3cd42",
                "16ecc97c.da6307",
                "a71a1569.bbbe68"
            ]
        ]
    },
    {
        "id": "5d5b5e5b.e2109",
        "type": "function",
        "z": "b39e2f1b.925dc",
        "name": "topic",
        "func": "var m = [\n    {topic:\"X\", payload:22},\n    {topic:\"Y\", payload:66},\n    {topic:\"Z\", payload:42}\n    ];\nreturn [m];",
        "outputs": 1,
        "noerr": 0,
        "x": 436,
        "y": 177,
        "wires": [
            [
                "9541de7d.b9d06",
                "d7df765f.0424d8",
                "16ecc97c.da6307",
                "a71a1569.bbbe68"
            ]
        ]
    },
    {
        "id": "d248d036.bf364",
        "type": "inject",
        "z": "b39e2f1b.925dc",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 286,
        "y": 177,
        "wires": [
            [
                "5d5b5e5b.e2109"
            ]
        ]
    },
    {
        "id": "45d36d96.3b7514",
        "type": "function",
        "z": "b39e2f1b.925dc",
        "name": "label",
        "func": "var m = [\n    {label:\"A\", payload:22},\n    {label:\"B\", payload:66},\n    {label:\"C\", payload:42},\n    ];\nreturn [m];",
        "outputs": 1,
        "noerr": 0,
        "x": 436,
        "y": 137,
        "wires": [
            [
                "9541de7d.b9d06",
                "d7df765f.0424d8",
                "16ecc97c.da6307",
                "a71a1569.bbbe68"
            ]
        ]
    },
    {
        "id": "676e9fe2.83649",
        "type": "inject",
        "z": "b39e2f1b.925dc",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 286,
        "y": 137,
        "wires": [
            [
                "45d36d96.3b7514"
            ]
        ]
    },
    {
        "id": "c0a171c4.78847",
        "type": "function",
        "z": "b39e2f1b.925dc",
        "name": "",
        "func": "var m={\n    \"series\":[\"X\",\"Y\",\"Z\"],\n    \"data\":[[5],[3],[6]],\n    \"labels\":[\"Jan\"]\n};\nreturn {payload:[m]};",
        "outputs": 1,
        "noerr": 0,
        "x": 436,
        "y": 457,
        "wires": [
            [
                "9541de7d.b9d06",
                "5c8be18.c3cd42",
                "3f1d0f3c.60cd4",
                "16ecc97c.da6307",
                "a71a1569.bbbe68",
                "d7df765f.0424d8"
            ]
        ]
    },
    {
        "id": "b2b2142b.48a198",
        "type": "ui_button",
        "z": "b39e2f1b.925dc",
        "name": "",
        "group": "b6c4c676.172c28",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "array3a",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 286,
        "y": 457,
        "wires": [
            [
                "c0a171c4.78847"
            ]
        ]
    },
    {
        "id": "ba9d1791.61f998",
        "type": "function",
        "z": "b39e2f1b.925dc",
        "name": "",
        "func": "var m={\n    \"series\":[\"X\"],\n    \"data\":[[5,3,6]],\n    \"labels\":[\"Jan\",\"Feb\",\"Mar\"]\n};\nreturn {payload:[m]};",
        "outputs": 1,
        "noerr": 0,
        "x": 436,
        "y": 497,
        "wires": [
            [
                "9541de7d.b9d06",
                "16ecc97c.da6307",
                "3f1d0f3c.60cd4",
                "5c8be18.c3cd42",
                "a71a1569.bbbe68",
                "d7df765f.0424d8"
            ]
        ]
    },
    {
        "id": "a9366742.898b18",
        "type": "ui_button",
        "z": "b39e2f1b.925dc",
        "name": "",
        "group": "b6c4c676.172c28",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "array3b",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 286,
        "y": 497,
        "wires": [
            [
                "ba9d1791.61f998"
            ]
        ]
    },
    {
        "id": "a71a1569.bbbe68",
        "type": "ui_chart",
        "z": "b39e2f1b.925dc",
        "name": "",
        "group": "496c04af.3a0cdc",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "horizontal bar",
        "chartType": "horizontalBar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": "30",
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 2,
        "x": 726,
        "y": 237,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "5c8be18.c3cd42",
        "type": "ui_chart",
        "z": "b39e2f1b.925dc",
        "name": "",
        "group": "496c04af.3a0cdc",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "polar chart",
        "chartType": "polar-area",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": "30",
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 2,
        "x": 756,
        "y": 477,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "3f1d0f3c.60cd4",
        "type": "ui_chart",
        "z": "b39e2f1b.925dc",
        "name": "",
        "group": "496c04af.3a0cdc",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "radar chart",
        "chartType": "radar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": "30",
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 756,
        "y": 537,
        "wires": [
            []
        ]
    },
    {
        "id": "d203a1d1.da179",
        "type": "function",
        "z": "b39e2f1b.925dc",
        "name": "label",
        "func": "var m = [\n    {label:\"A\", payload:22, series:\"X\"},\n    {label:\"B\", payload:66, series:\"X\"},\n    {label:\"C\", payload:42, series:\"X\"},\n    {label:\"A\", payload:33, series:\"Y\"},\n    {label:\"B\", payload:72, series:\"Y\"},\n    {label:\"C\", payload:12, series:\"Y\"},\n    {label:\"A\", payload:44, series:\"Z\"},\n    {label:\"B\", payload:32, series:\"Z\"},\n    {label:\"C\", payload:80, series:\"Z\"}\n    ];\nreturn [m];",
        "outputs": 1,
        "noerr": 0,
        "x": 436,
        "y": 97,
        "wires": [
            [
                "d7df765f.0424d8",
                "9541de7d.b9d06",
                "16ecc97c.da6307",
                "a71a1569.bbbe68"
            ]
        ]
    },
    {
        "id": "b9e5c0aa.3c4c3",
        "type": "inject",
        "z": "b39e2f1b.925dc",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 286,
        "y": 97,
        "wires": [
            [
                "d203a1d1.da179"
            ]
        ]
    },
    {
        "id": "22bd9093.94cad",
        "type": "ui_button",
        "z": "b39e2f1b.925dc",
        "name": "",
        "group": "b6c4c676.172c28",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Clear All",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "",
        "x": 426,
        "y": 57,
        "wires": [
            [
                "3f1d0f3c.60cd4",
                "5c8be18.c3cd42",
                "d7df765f.0424d8",
                "a71a1569.bbbe68",
                "9541de7d.b9d06",
                "16ecc97c.da6307"
            ]
        ]
    },
    {
        "id": "609a336c.00fbac",
        "type": "random",
        "z": "b39e2f1b.925dc",
        "name": "",
        "low": "1",
        "high": "10000000",
        "inte": "true",
        "x": 466,
        "y": 577,
        "wires": [
            [
                "16ecc97c.da6307"
            ]
        ]
    },
    {
        "id": "35eb22d6.dc43fe",
        "type": "pushbullet in",
        "z": "b39e2f1b.925dc",
        "config": "f362788e.9e7518",
        "name": "",
        "x": 1003,
        "y": 367,
        "wires": [
            [
                "6b5046be.4aa998"
            ]
        ]
    },
    {
        "id": "6b5046be.4aa998",
        "type": "ui_text",
        "z": "b39e2f1b.925dc",
        "group": "4a66be02.779ac",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Pushbullet",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1209,
        "y": 369,
        "wires": []
    },
    {
        "id": "41df5686.a15ab8",
        "type": "amazon-echo-device",
        "z": "b39e2f1b.925dc",
        "name": "test",
        "topic": "",
        "x": 1013,
        "y": 581,
        "wires": [
            [
                "75884c96.e32d44"
            ]
        ]
    },
    {
        "id": "75884c96.e32d44",
        "type": "debug",
        "z": "b39e2f1b.925dc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1231,
        "y": 587,
        "wires": []
    },
    {
        "id": "2efaa8bf.8af098",
        "type": "debug",
        "z": "e07746d8.1cb838",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "x": 495,
        "y": 484,
        "wires": []
    },
    {
        "id": "e3ac32b9.2c211",
        "type": "modbus-read",
        "z": "e07746d8.1cb838",
        "name": "LOGO",
        "topic": "",
        "showStatusActivities": true,
        "logIOActivities": false,
        "showErrors": false,
        "unitid": "",
        "dataType": "Coil",
        "adr": "8192",
        "quantity": "2",
        "rate": "10",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "bdf64513.838a68",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "x": 274,
        "y": 211,
        "wires": [
            [
                "2efaa8bf.8af098",
                "8efdff8c.994d4",
                "907645a.75845b8"
            ],
            []
        ]
    },
    {
        "id": "ab45cccc.7b1ae",
        "type": "debug",
        "z": "e07746d8.1cb838",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "x": 811,
        "y": 134,
        "wires": []
    },
    {
        "id": "8efdff8c.994d4",
        "type": "modbus-response",
        "z": "e07746d8.1cb838",
        "name": "",
        "registerShowMax": 20,
        "x": 524,
        "y": 396,
        "wires": []
    },
    {
        "id": "907645a.75845b8",
        "type": "function",
        "z": "e07746d8.1cb838",
        "name": "split_modbus_msg_coil",
        "func": "msg = {payload:msg.payload[0]};\nvar value = msg \nreturn value;",
        "outputs": 1,
        "noerr": 0,
        "x": 517,
        "y": 165,
        "wires": [
            [
                "ab45cccc.7b1ae",
                "b8c05e7e.bc4c4",
                "a04df368.199ba",
                "5831346d.06b15c",
                "ff3085c0.92e208"
            ]
        ]
    },
    {
        "id": "b8c05e7e.bc4c4",
        "type": "change",
        "z": "e07746d8.1cb838",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "1",
                "tot": "num"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 535,
        "y": 269,
        "wires": [
            [
                "ab515035.81146"
            ]
        ]
    },
    {
        "id": "ab515035.81146",
        "type": "debug",
        "z": "e07746d8.1cb838",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "x": 853,
        "y": 408,
        "wires": []
    },
    {
        "id": "a04df368.199ba",
        "type": "mqtt out",
        "z": "e07746d8.1cb838",
        "name": "",
        "topic": "logo/coil",
        "qos": "",
        "retain": "",
        "broker": "5ed179aa.7d9c58",
        "x": 823,
        "y": 307,
        "wires": []
    },
    {
        "id": "1f3d5ced.eb4f13",
        "type": "ui_text",
        "z": "e07746d8.1cb838",
        "group": "4a66be02.779ac",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "PLC Output Status (Q0)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 1103,
        "y": 55,
        "wires": []
    },
    {
        "id": "5831346d.06b15c",
        "type": "change",
        "z": "e07746d8.1cb838",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "ON",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "OFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 759,
        "y": 72,
        "wires": [
            [
                "1f3d5ced.eb4f13",
                "71261ca7.6c6ff4"
            ]
        ]
    },
    {
        "id": "7e794f6e.c53a3",
        "type": "modbus-read",
        "z": "e07746d8.1cb838",
        "name": "LOGO",
        "topic": "logo_plc",
        "showStatusActivities": true,
        "logIOActivities": false,
        "showErrors": false,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "529",
        "quantity": "3",
        "rate": "20",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "bdf64513.838a68",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "x": 322,
        "y": 696,
        "wires": [
            [
                "b717bee7.21623",
                "6b858bf7.e883a4",
                "b2f1448.5e630b8"
            ],
            []
        ]
    },
    {
        "id": "b717bee7.21623",
        "type": "debug",
        "z": "e07746d8.1cb838",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "x": 669,
        "y": 727,
        "wires": []
    },
    {
        "id": "6b858bf7.e883a4",
        "type": "modbus-response",
        "z": "e07746d8.1cb838",
        "name": "",
        "registerShowMax": 20,
        "x": 343,
        "y": 548,
        "wires": []
    },
    {
        "id": "b2f1448.5e630b8",
        "type": "function",
        "z": "e07746d8.1cb838",
        "name": "split_modbus_msg_holding_register",
        "func": "msg1 = {payload:msg.payload[0]};\nvar value = msg1 \nvalue.topic = \"First Value\";\n\nmsg2 = {payload:msg.payload[1]};\nvar value2 = msg2\nvalue2.topic = \"Second Value\";\n\nreturn [value,value2];",
        "outputs": 2,
        "noerr": 0,
        "x": 601,
        "y": 615,
        "wires": [
            [
                "2afc77ba.d5b588",
                "d6397b90.04a698",
                "fb8ef8df.8281d8"
            ],
            [
                "d6397b90.04a698",
                "413d8e23.168e1",
                "c2d93030.0b6ff"
            ]
        ]
    },
    {
        "id": "2afc77ba.d5b588",
        "type": "mqtt out",
        "z": "e07746d8.1cb838",
        "name": "",
        "topic": "logo/holding1",
        "qos": "",
        "retain": "",
        "broker": "5ed179aa.7d9c58",
        "x": 773,
        "y": 485,
        "wires": []
    },
    {
        "id": "5fe09956.66a308",
        "type": "modbus-write",
        "z": "e07746d8.1cb838",
        "name": "",
        "showStatusActivities": true,
        "showErrors": false,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "529",
        "quantity": "1",
        "server": "bdf64513.838a68",
        "x": 1277,
        "y": 219,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "e7137859.5a7618",
        "type": "mqtt in",
        "z": "e07746d8.1cb838",
        "name": "",
        "topic": "logo/holding1",
        "qos": "2",
        "datatype": "auto",
        "broker": "5ed179aa.7d9c58",
        "x": 1115,
        "y": 172,
        "wires": [
            [
                "5fe09956.66a308"
            ]
        ]
    },
    {
        "id": "6f2c9a8f.982f94",
        "type": "modbus-write",
        "z": "e07746d8.1cb838",
        "name": "",
        "showStatusActivities": true,
        "showErrors": false,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "530",
        "quantity": "1",
        "server": "bdf64513.838a68",
        "x": 1233,
        "y": 352,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "82f4e41c.fab108",
        "type": "mqtt in",
        "z": "e07746d8.1cb838",
        "name": "",
        "topic": "logo/holding2",
        "qos": "2",
        "datatype": "auto",
        "broker": "5ed179aa.7d9c58",
        "x": 1071,
        "y": 305,
        "wires": [
            [
                "6f2c9a8f.982f94"
            ]
        ]
    },
    {
        "id": "d6397b90.04a698",
        "type": "ui_chart",
        "z": "e07746d8.1cb838",
        "name": "",
        "group": "4a66be02.779ac",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Holding Registers",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "50",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 994,
        "y": 579,
        "wires": [
            []
        ]
    },
    {
        "id": "413d8e23.168e1",
        "type": "mqtt out",
        "z": "e07746d8.1cb838",
        "name": "",
        "topic": "logo/holding2",
        "qos": "",
        "retain": "",
        "broker": "5ed179aa.7d9c58",
        "x": 833,
        "y": 651,
        "wires": []
    },
    {
        "id": "71261ca7.6c6ff4",
        "type": "influxdb out",
        "z": "e07746d8.1cb838",
        "influxdb": "b02e223a.8b7f6",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "x": 1162,
        "y": 112,
        "wires": []
    },
    {
        "id": "454a7fc6.39db5",
        "type": "comment",
        "z": "34c2c505.7dce4a",
        "name": "SDM120 Energy Meter",
        "info": "",
        "x": 281,
        "y": 78,
        "wires": []
    },
    {
        "id": "e22f85fb.d5db98",
        "type": "modbus-read",
        "z": "34c2c505.7dce4a",
        "name": "SDM 120 Voltage",
        "topic": "",
        "showStatusActivities": true,
        "showErrors": true,
        "unitid": "1",
        "dataType": "InputRegister",
        "adr": "0",
        "quantity": "2",
        "rate": "5",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "393b7451.4a11cc",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "x": 252.5,
        "y": 171,
        "wires": [
            [
                "fde6352.67b75c8",
                "63d2f31f.ed512c"
            ],
            []
        ]
    },
    {
        "id": "fde6352.67b75c8",
        "type": "function",
        "z": "34c2c505.7dce4a",
        "name": "Voltage",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[1]; //low\nintView[1] = msg.payload[0]; //high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\nmsg.topic = \"voltage\";\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 481.5,
        "y": 164,
        "wires": [
            [
                "91dc0ed6.79953",
                "e410b043.27c95",
                "ad96008e.40b23"
            ]
        ]
    },
    {
        "id": "75b30731.0f7bb8",
        "type": "modbus-queue-info",
        "z": "34c2c505.7dce4a",
        "name": "SDM120_queue",
        "topic": "",
        "unitid": "1",
        "queueReadIntervalTime": "1000",
        "lowLowLevel": "1",
        "lowLevel": 75,
        "highLevel": 150,
        "highHighLevel": 300,
        "server": "393b7451.4a11cc",
        "errorOnHighLevel": false,
        "x": 624.1428527832031,
        "y": 538.107177734375,
        "wires": [
            [
                "613ba32e.3bfcbc"
            ]
        ]
    },
    {
        "id": "286af6a4.e6f4da",
        "type": "inject",
        "z": "34c2c505.7dce4a",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 193.1428680419922,
        "y": 578.1072082519531,
        "wires": [
            [
                "86ec65b6.e48918"
            ]
        ]
    },
    {
        "id": "86ec65b6.e48918",
        "type": "change",
        "z": "34c2c505.7dce4a",
        "name": "Reset queue",
        "rules": [
            {
                "t": "set",
                "p": "resetQueue",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 422.14286041259766,
        "y": 539.1071891784668,
        "wires": [
            [
                "75b30731.0f7bb8"
            ]
        ]
    },
    {
        "id": "4f0b41c3.cc002",
        "type": "function",
        "z": "34c2c505.7dce4a",
        "name": "Current",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[1]; //low\nintView[1] = msg.payload[0]; //high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\nmsg.topic = \"current\";\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 480.5,
        "y": 222,
        "wires": [
            [
                "c2822478.577ba8",
                "e410b043.27c95",
                "8ca64b46.d7d4b8"
            ]
        ]
    },
    {
        "id": "86da329e.f409e",
        "type": "function",
        "z": "34c2c505.7dce4a",
        "name": "Power",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[1]; //low\nintView[1] = msg.payload[0]; //high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\nmsg.topic = \"power\";\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 471.5,
        "y": 275,
        "wires": [
            [
                "9ef24d9b.b9ab",
                "e410b043.27c95",
                "54e36977.491a38",
                "76b30b65.37ea34"
            ]
        ]
    },
    {
        "id": "7deac368.f9bf2c",
        "type": "function",
        "z": "34c2c505.7dce4a",
        "name": "Frequency",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[1]; //low\nintView[1] = msg.payload[0]; //high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\nmsg.topic = \"frequency\";\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 539.5,
        "y": 327,
        "wires": [
            [
                "c37c013e.55118",
                "e410b043.27c95",
                "76b30b65.37ea34"
            ]
        ]
    },
    {
        "id": "a8b62ea7.648f7",
        "type": "function",
        "z": "34c2c505.7dce4a",
        "name": "Energy",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[1]; //low\nintView[1] = msg.payload[0]; //high\n\nmsg.payload = parseFloat(fltView[0].toFixed(2));\nmsg.topic = \"energy\";\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 481.5,
        "y": 402,
        "wires": [
            [
                "6e93eb7.c7d0814",
                "e410b043.27c95",
                "bb2920c8.cf593"
            ]
        ]
    },
    {
        "id": "ed35a670.e50cc8",
        "type": "modbus-read",
        "z": "34c2c505.7dce4a",
        "name": "SDM 120 Current",
        "topic": "",
        "showStatusActivities": true,
        "showErrors": true,
        "unitid": "1",
        "dataType": "InputRegister",
        "adr": "6",
        "quantity": "2",
        "rate": "5",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "393b7451.4a11cc",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "x": 261.5,
        "y": 229,
        "wires": [
            [
                "4f0b41c3.cc002"
            ],
            []
        ]
    },
    {
        "id": "6a3f1660.0f39c8",
        "type": "modbus-read",
        "z": "34c2c505.7dce4a",
        "name": "SDM 120 Power",
        "topic": "",
        "showStatusActivities": true,
        "showErrors": true,
        "unitid": "1",
        "dataType": "InputRegister",
        "adr": "12",
        "quantity": "2",
        "rate": "5",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "393b7451.4a11cc",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "x": 251.5,
        "y": 281,
        "wires": [
            [
                "86da329e.f409e"
            ],
            []
        ]
    },
    {
        "id": "958b6025.6d9bc",
        "type": "modbus-read",
        "z": "34c2c505.7dce4a",
        "name": "SDM 120 Frequency",
        "topic": "",
        "showStatusActivities": true,
        "showErrors": true,
        "unitid": "1",
        "dataType": "InputRegister",
        "adr": "70",
        "quantity": "2",
        "rate": "5",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "393b7451.4a11cc",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "x": 207.5,
        "y": 397,
        "wires": [
            [
                "7deac368.f9bf2c",
                "88b3a21f.d41a2"
            ],
            []
        ]
    },
    {
        "id": "6f52ab22.5df294",
        "type": "modbus-read",
        "z": "34c2c505.7dce4a",
        "name": "SDM 120 Energy",
        "topic": "",
        "showStatusActivities": true,
        "showErrors": true,
        "unitid": "1",
        "dataType": "InputRegister",
        "adr": "342",
        "quantity": "2",
        "rate": "5",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "393b7451.4a11cc",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "x": 193.5,
        "y": 460,
        "wires": [
            [
                "a8b62ea7.648f7",
                "60273fe3.31119"
            ],
            []
        ]
    },
    {
        "id": "91dc0ed6.79953",
        "type": "ui_text",
        "z": "34c2c505.7dce4a",
        "group": "8580805c.799ed",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Voltage",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "x": 799.5,
        "y": 132,
        "wires": []
    },
    {
        "id": "c2822478.577ba8",
        "type": "ui_text",
        "z": "34c2c505.7dce4a",
        "group": "8580805c.799ed",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Current",
        "format": "{{msg.payload}} A",
        "layout": "row-spread",
        "x": 668.5,
        "y": 221,
        "wires": []
    },
    {
        "id": "9ef24d9b.b9ab",
        "type": "ui_text",
        "z": "34c2c505.7dce4a",
        "group": "8580805c.799ed",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Power",
        "format": "{{msg.payload}} W",
        "layout": "row-spread",
        "x": 664.5,
        "y": 276,
        "wires": []
    },
    {
        "id": "c37c013e.55118",
        "type": "ui_text",
        "z": "34c2c505.7dce4a",
        "group": "8580805c.799ed",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Frequency",
        "format": "{{msg.payload}} Hz",
        "layout": "row-spread",
        "x": 795.5,
        "y": 349,
        "wires": []
    },
    {
        "id": "6e93eb7.c7d0814",
        "type": "ui_text",
        "z": "34c2c505.7dce4a",
        "group": "8580805c.799ed",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Total Energy",
        "format": "{{msg.payload}} kWh",
        "layout": "row-spread",
        "x": 731.5,
        "y": 401,
        "wires": []
    },
    {
        "id": "e410b043.27c95",
        "type": "function",
        "z": "34c2c505.7dce4a",
        "name": "Build object",
        "func": "watch_topic = \"energy\";\nvar output = {};\n\ncontext.set(msg.topic,msg.payload);\n\nif (context.get(\"voltage\")!==undefined) {\n    output.voltage = context.get(\"voltage\");\n}\nif (context.get(\"current\")!==undefined) {\n    output.current = context.get(\"current\");\n}\nif (context.get(\"power\")!==undefined) {\n    output.power = context.get(\"power\");\n}\nif (context.get(\"frequency\")!==undefined) {\n    output.frequency = context.get(\"frequency\");\n}\nif (context.get(\"energy\")!==undefined) {\n    output.energy = context.get(\"energy\");\n}\nmsg.payload = output;\n\nif (msg.topic===watch_topic) {\n    msg.topic = \"sdm120\";\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 879.5,
        "y": 239,
        "wires": [
            [
                "cb503453.884788",
                "1eaff602.37b80a"
            ]
        ]
    },
    {
        "id": "cb503453.884788",
        "type": "debug",
        "z": "34c2c505.7dce4a",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 1087.5,
        "y": 294,
        "wires": []
    },
    {
        "id": "8275535a.e90c6",
        "type": "function",
        "z": "34c2c505.7dce4a",
        "name": "Diagnostic input message structure",
        "func": "// setting a global flag that the solar system is down\n\nmsg.payload = \"High voltage warning: \" + msg.payload.voltage +\" V\";\nmsg.system = 1; // System id, use 1 for Dummy\n//msg.state = 1; // specify if the message is to change system status\nmsg.severity = 1; // 0: information, 1: warning, 2: error\nmsg.email = false; // if separate email should be sent\n//msg.emailtext = \"Clean up step of the SAIA log backup has failed\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1572.5,
        "y": 137,
        "wires": [
            [
                "5c73cc2b.50ab54"
            ]
        ]
    },
    {
        "id": "5c73cc2b.50ab54",
        "type": "link out",
        "z": "34c2c505.7dce4a",
        "name": "",
        "links": [
            "13e089a7.73cb46"
        ],
        "x": 1779.5,
        "y": 159,
        "wires": []
    },
    {
        "id": "1e351f81.49aaa",
        "type": "switch",
        "z": "34c2c505.7dce4a",
        "name": "Voltage check",
        "property": "payload.voltage_check",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "high",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "low",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1280.5,
        "y": 161,
        "wires": [
            [
                "8275535a.e90c6"
            ],
            [
                "31d285.ee0e3d7c"
            ]
        ]
    },
    {
        "id": "31d285.ee0e3d7c",
        "type": "function",
        "z": "34c2c505.7dce4a",
        "name": "Diagnostic input message structure",
        "func": "// setting a global flag that the solar system is down\n\nmsg.payload = \"Low voltage warning: \" + msg.payload.voltage +\" V\";\nmsg.system = 1; // System id, use 1 for Dummy\n//msg.state = 1; // specify if the message is to change system status\nmsg.severity = 1; // 0: information, 1: warning, 2: error\nmsg.email = false; // if separate email should be sent\n//msg.emailtext = \"Clean up step of the SAIA log backup has failed\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1572.5,
        "y": 182,
        "wires": [
            [
                "5c73cc2b.50ab54"
            ]
        ]
    },
    {
        "id": "1eaff602.37b80a",
        "type": "function",
        "z": "34c2c505.7dce4a",
        "name": "Voltage check",
        "func": "var high = 250.0;\nvar low = 220.0;\n\nif (msg.payload.voltage > high) {\n    msg.payload.voltage_check = \"high\";\n}\nif (msg.payload.voltage < low) {\n    msg.payload.voltage_check = \"low\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1067.5,
        "y": 162,
        "wires": [
            [
                "1e351f81.49aaa"
            ]
        ]
    },
    {
        "id": "3e7f3242.83b3de",
        "type": "function",
        "z": "34c2c505.7dce4a",
        "name": "reset on HighHigh",
        "func": "if(\"high high level reached\" === msg.state) {\n    msg.resetQueue = true;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 497.00000762939453,
        "y": 669.2500247955322,
        "wires": [
            [
                "75b30731.0f7bb8",
                "4b4de41d.66e29c"
            ]
        ]
    },
    {
        "id": "3ef7d63d.0f0c5a",
        "type": "catch",
        "z": "34c2c505.7dce4a",
        "name": "Catch queue errors",
        "scope": [
            "75b30731.0f7bb8"
        ],
        "x": 259.00000762939453,
        "y": 669.2500247955322,
        "wires": [
            [
                "3e7f3242.83b3de"
            ]
        ]
    },
    {
        "id": "7be308f7.5bf678",
        "type": "comment",
        "z": "34c2c505.7dce4a",
        "name": "Error handling",
        "info": "",
        "x": 225.00000762939453,
        "y": 624.2500247955322,
        "wires": []
    },
    {
        "id": "4b4de41d.66e29c",
        "type": "function",
        "z": "34c2c505.7dce4a",
        "name": "Diagnostic input message structure",
        "func": "// setting a global flag that the solar system is down\n\nmsg.payload = \"SDM120 modbus queue reached high level, resetting. (\" + msg.state + \")\";\nmsg.system = 4; // System id, use 1 for Dummy\n//msg.state = 1; // specify if the message is to change system status\nmsg.severity = 1; // 0: information, 1: warning, 2: error\nmsg.email = false; // if separate email should be sent\n//msg.emailtext = \"Clean up step of the SAIA log backup has failed\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 797.0000076293945,
        "y": 668.2500247955322,
        "wires": [
            [
                "9e07d75d.b44008"
            ]
        ]
    },
    {
        "id": "9e07d75d.b44008",
        "type": "link out",
        "z": "34c2c505.7dce4a",
        "name": "",
        "links": [
            "13e089a7.73cb46"
        ],
        "x": 983.0000076293945,
        "y": 668.2500247955322,
        "wires": []
    },
    {
        "id": "f08c684b.9bd6a8",
        "type": "catch",
        "z": "34c2c505.7dce4a",
        "name": "Modbus read errors",
        "scope": [
            "ed35a670.e50cc8",
            "6f52ab22.5df294",
            "958b6025.6d9bc",
            "6a3f1660.0f39c8",
            "e22f85fb.d5db98",
            "454a7fc6.39db5"
        ],
        "x": 259.00000762939453,
        "y": 712.2500247955322,
        "wires": [
            [
                "7a10cd3.4d68634"
            ]
        ]
    },
    {
        "id": "7a10cd3.4d68634",
        "type": "function",
        "z": "34c2c505.7dce4a",
        "name": "Diagnostic input message structure",
        "func": "// setting a global flag that the solar system is down\n\nmsg.payload = \"SDM120 modbus error: \" + msg.error.message;\nmsg.system = 4; // System id, use 1 for Dummy\n//msg.state = 1; // specify if the message is to change system status\nmsg.severity = 1; // 0: information, 1: warning, 2: error\nmsg.email = false; // if separate email should be sent\n//msg.emailtext = \"Clean up step of the SAIA log backup has failed\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 548.0000076293945,
        "y": 712.2500247955322,
        "wires": [
            [
                "f054480f.0259b8"
            ]
        ]
    },
    {
        "id": "f054480f.0259b8",
        "type": "link out",
        "z": "34c2c505.7dce4a",
        "name": "",
        "links": [
            "13e089a7.73cb46"
        ],
        "x": 734.0000076293945,
        "y": 712.2500247955322,
        "wires": []
    },
    {
        "id": "613ba32e.3bfcbc",
        "type": "debug",
        "z": "34c2c505.7dce4a",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 805.0000076293945,
        "y": 537.2500247955322,
        "wires": []
    },
    {
        "id": "60273fe3.31119",
        "type": "function",
        "z": "34c2c505.7dce4a",
        "name": "Health check",
        "func": "var devicename = \"sdm120\"; // Device name used for context variable\nvar system_id = 4; // System id number for diagnostic update\nvar online_threshold = 10; // Seconds between updates under which the device is considered online\nvar offline_threshold = 30; // Seconds between updates above which the device is considered offline\n\nvar temp = context.get(devicename+\"_update\");\nvar current = new Date();\nmsg.payload = \"No data\";\nmsg.warning = false;\nif (msg.topic!==\"timecheck\") {\n    // Do not update the context if it is triggered by the check inject node\n    context.set(devicename+\"_update\",current);\n}\nif (temp===undefined) {\n    // this will be the case when node-red is booting up or redeployed\n    context.set(devicename+\"_update\",current);\n}\n\nif (temp!==undefined) {\n    current = current - temp;\n    current = Math.floor(current/1000);\n    var minute = Math.floor(current/60);\n    var hour = Math.floor(minute/60);\n    var day = Math.floor(hour/24);\n    if (current>24*60*60) {\n        msg.payload = \"Last update \" + day + \" days, \" + hour%24 + \" hours, \" + minute%60 + \" minutes, \" + current%60 + \" seconds ago\";\n    } else if (current>60*60) {\n        msg.payload = \"Last update \" + hour%24 + \" hours, \" + minute%60 + \" minutes, \" + current%60 + \" seconds ago\";\n    } else if (current>60) {\n        msg.payload = \"Last update \" + minute%60 + \" minutes, \" + current%60 + \" seconds ago\";\n    } else {\n        msg.payload = \"Last update \" + current%60 + \" seconds ago\";\n    }\n\n    if (context.get(devicename+\"_state\")!==1) {\n        if (current<online_threshold) {\n            msg.payload = \"SDM120 is now online\";\n            msg.system = system_id; // System id, use 1 for Dummy\n            msg.state = 1; // specify if the message is to change system status\n            msg.severity = 0; // 0: information, 1: warning, 2: error\n            //msg.email = true; // if separate email should be sent\n            //msg.emailtext = \"\"; this a long text which goes into the email  \n            msg.warning = true;\n            context.set(devicename+\"_state\",1);\n        }\n    } else {\n        if (current>offline_threshold) {\n            msg.payload = \"SDM120 is not transmitting\";\n            msg.system = system_id; // System id, use 1 for Dummy\n            msg.state = 99; // specify if the message is to change system status\n            msg.severity = 2; // 0: information, 1: warning, 2: error\n            //msg.email = true; // if separate email should be sent\n            //msg.emailtext = \"\"; this a long text which goes into the email            \n            msg.warning = true;\n            context.set(devicename+\"_state\",99);\n        }\n    }\n    \n    \n}\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.payload});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 505.5,
        "y": 456,
        "wires": [
            [
                "8b5637e.251ebc8"
            ]
        ]
    },
    {
        "id": "d604edae.5adef",
        "type": "inject",
        "z": "34c2c505.7dce4a",
        "name": "Check",
        "repeat": "1",
        "crontab": "",
        "once": false,
        "topic": "timecheck",
        "payload": "",
        "payloadType": "date",
        "x": 178.5,
        "y": 529,
        "wires": [
            [
                "60273fe3.31119"
            ]
        ]
    },
    {
        "id": "8b5637e.251ebc8",
        "type": "switch",
        "z": "34c2c505.7dce4a",
        "name": "Update diag?",
        "property": "warning",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 700.5,
        "y": 456,
        "wires": [
            [
                "e4cf7475.185c78"
            ]
        ]
    },
    {
        "id": "e4cf7475.185c78",
        "type": "link out",
        "z": "34c2c505.7dce4a",
        "name": "",
        "links": [
            "13e089a7.73cb46"
        ],
        "x": 819.8015727996826,
        "y": 455.57140350341797,
        "wires": []
    },
    {
        "id": "63d2f31f.ed512c",
        "type": "debug",
        "z": "34c2c505.7dce4a",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 482.5,
        "y": 82,
        "wires": []
    },
    {
        "id": "88b3a21f.d41a2",
        "type": "debug",
        "z": "34c2c505.7dce4a",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 292,
        "y": 331,
        "wires": []
    },
    {
        "id": "ad96008e.40b23",
        "type": "mqtt out",
        "z": "34c2c505.7dce4a",
        "name": "Voltage",
        "topic": "modbus/voltage",
        "qos": "",
        "retain": "true",
        "broker": "fd4c4e83.f27d9",
        "x": 679.5,
        "y": 90,
        "wires": []
    },
    {
        "id": "8ca64b46.d7d4b8",
        "type": "mqtt out",
        "z": "34c2c505.7dce4a",
        "name": "Current",
        "topic": "modbus/current",
        "qos": "",
        "retain": "true",
        "broker": "fd4c4e83.f27d9",
        "x": 660,
        "y": 35,
        "wires": []
    },
    {
        "id": "54e36977.491a38",
        "type": "mqtt out",
        "z": "34c2c505.7dce4a",
        "name": "Power",
        "topic": "modbus/power",
        "qos": "",
        "retain": "true",
        "broker": "fd4c4e83.f27d9",
        "x": 853,
        "y": 53,
        "wires": []
    },
    {
        "id": "76b30b65.37ea34",
        "type": "mqtt out",
        "z": "34c2c505.7dce4a",
        "name": "Frequency",
        "topic": "modbus/frequency",
        "qos": "",
        "retain": "true",
        "broker": "fd4c4e83.f27d9",
        "x": 1055,
        "y": 38,
        "wires": []
    },
    {
        "id": "bb2920c8.cf593",
        "type": "mqtt out",
        "z": "34c2c505.7dce4a",
        "name": "Energy",
        "topic": "modbus/energy",
        "qos": "",
        "retain": "true",
        "broker": "fd4c4e83.f27d9",
        "x": 1077,
        "y": 98,
        "wires": []
    },
    {
        "id": "ff3085c0.92e208",
        "type": "ui_chart",
        "z": "e07746d8.1cb838",
        "name": "",
        "group": "4a66be02.779ac",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Coil Registers",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1010,
        "y": 244,
        "wires": [
            []
        ]
    },
    {
        "id": "99cf887d.c1e208",
        "type": "debug",
        "z": "cd3a535c.0e484",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "x": 495,
        "y": 484,
        "wires": []
    },
    {
        "id": "2dc343bd.7c018c",
        "type": "modbus-read",
        "z": "cd3a535c.0e484",
        "name": "LOGO",
        "topic": "",
        "showStatusActivities": true,
        "logIOActivities": false,
        "showErrors": false,
        "unitid": "",
        "dataType": "Coil",
        "adr": "8192",
        "quantity": "2",
        "rate": "5",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "bdf64513.838a68",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "x": 317,
        "y": 181,
        "wires": [
            [
                "99cf887d.c1e208",
                "8f8d7404.957568",
                "207c2420.3af3cc"
            ],
            []
        ]
    },
    {
        "id": "a05cf029.0066d",
        "type": "debug",
        "z": "cd3a535c.0e484",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "x": 811,
        "y": 134,
        "wires": []
    },
    {
        "id": "8f8d7404.957568",
        "type": "modbus-response",
        "z": "cd3a535c.0e484",
        "name": "",
        "registerShowMax": 20,
        "x": 524,
        "y": 396,
        "wires": []
    },
    {
        "id": "207c2420.3af3cc",
        "type": "function",
        "z": "cd3a535c.0e484",
        "name": "split_modbus_msg_coil",
        "func": "msg = {payload:msg.payload[0]};\nvar value = msg \nreturn value;",
        "outputs": 1,
        "noerr": 0,
        "x": 517,
        "y": 165,
        "wires": [
            [
                "a05cf029.0066d",
                "203d0f20.77d4d",
                "5764a940.289698"
            ]
        ]
    },
    {
        "id": "203d0f20.77d4d",
        "type": "change",
        "z": "cd3a535c.0e484",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "1",
                "tot": "num"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 535,
        "y": 269,
        "wires": [
            [
                "e8e63fd1.6543b",
                "4f297be2.083c34"
            ]
        ]
    },
    {
        "id": "e8e63fd1.6543b",
        "type": "debug",
        "z": "cd3a535c.0e484",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "x": 853,
        "y": 408,
        "wires": []
    },
    {
        "id": "5764a940.289698",
        "type": "mqtt out",
        "z": "cd3a535c.0e484",
        "name": "",
        "topic": "logo/coil",
        "qos": "",
        "retain": "",
        "broker": "5ed179aa.7d9c58",
        "x": 823,
        "y": 307,
        "wires": []
    },
    {
        "id": "4f297be2.083c34",
        "type": "ui_chart",
        "z": "cd3a535c.0e484",
        "name": "",
        "group": "4a66be02.779ac",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 810,
        "y": 216,
        "wires": [
            []
        ]
    },
    {
        "id": "fb8ef8df.8281d8",
        "type": "mqtt out",
        "z": "e07746d8.1cb838",
        "name": "",
        "topic": "logo/holding1",
        "qos": "",
        "retain": "",
        "broker": "956a5b0d.ae9d08",
        "x": 1021,
        "y": 496,
        "wires": []
    },
    {
        "id": "c2d93030.0b6ff",
        "type": "mqtt out",
        "z": "e07746d8.1cb838",
        "name": "",
        "topic": "logo/holding2",
        "qos": "",
        "retain": "",
        "broker": "956a5b0d.ae9d08",
        "x": 1042,
        "y": 655,
        "wires": []
    },
    {
        "id": "89452af7.cd2d18",
        "type": "function",
        "z": "81de9994.36a3e8",
        "name": "insert two random values in influxdb",
        "func": "var val1 = Math.floor(Math.random() * 50);\nvar val2 = Math.floor(Math.random() * 100);\n\n//msg.payload={measurement:\"harshad\",temp:val1, rh:val2};\nmsg.payload={measurement:\"harshad\",temperature:val1, relativehumidity:val2};\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 509,
        "y": 198,
        "wires": [
            [
                "32349f23.c98e7",
                "761bbf2b.3c61d"
            ]
        ]
    },
    {
        "id": "10ab5faf.0ba86",
        "type": "inject",
        "z": "81de9994.36a3e8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 264,
        "wires": [
            [
                "89452af7.cd2d18"
            ]
        ]
    },
    {
        "id": "32349f23.c98e7",
        "type": "debug",
        "z": "81de9994.36a3e8",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 784,
        "y": 124,
        "wires": []
    },
    {
        "id": "caf46d87.f756b",
        "type": "join",
        "z": "c1db326d.9ec41",
        "name": "join mqtt messages",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 397,
        "y": 384,
        "wires": [
            [
                "d369c3da.34a86"
            ]
        ]
    },
    {
        "id": "fe9afbd.cba0008",
        "type": "mqtt in",
        "z": "c1db326d.9ec41",
        "name": "",
        "topic": "influx/value2",
        "qos": "2",
        "datatype": "auto",
        "broker": "956a5b0d.ae9d08",
        "x": 135,
        "y": 354,
        "wires": [
            [
                "caf46d87.f756b"
            ]
        ]
    },
    {
        "id": "31847a4b.09deb6",
        "type": "mqtt in",
        "z": "c1db326d.9ec41",
        "name": "",
        "topic": "influx/value1",
        "qos": "2",
        "datatype": "auto",
        "broker": "956a5b0d.ae9d08",
        "x": 141,
        "y": 285,
        "wires": [
            [
                "caf46d87.f756b"
            ]
        ]
    },
    {
        "id": "d369c3da.34a86",
        "type": "function",
        "z": "c1db326d.9ec41",
        "name": "convert mqtt to influxdb",
        "func": "var v1 = Number(msg.payload[0]);\nvar v2 = Number(msg.payload[1]);\n\n//msg.payload={measurement:\"harshad\",temp:val1, rh:val2};\nmsg.payload={measurement:\"mqtt\",value1:v1, value2:v2};\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 654,
        "y": 158,
        "wires": [
            [
                "b0703ca5.8b78a",
                "11d3f4dc.7ca91b"
            ]
        ]
    },
    {
        "id": "b0703ca5.8b78a",
        "type": "debug",
        "z": "c1db326d.9ec41",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 983,
        "y": 136,
        "wires": []
    },
    {
        "id": "8c320653.8eff08",
        "type": "inject",
        "z": "a56a147b.9fd3a8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "ns=2;i=2",
        "payload": "Temp",
        "payloadType": "str",
        "x": 212,
        "y": 395,
        "wires": [
            [
                "6c76cf7a.92f92"
            ]
        ]
    },
    {
        "id": "e927559b.33b6a8",
        "type": "debug",
        "z": "a56a147b.9fd3a8",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "x": 905,
        "y": 441,
        "wires": []
    },
    {
        "id": "b6ad896.a19bd78",
        "type": "split",
        "z": "a56a147b.9fd3a8",
        "name": "",
        "splt": ",",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 630,
        "y": 483,
        "wires": [
            [
                "e927559b.33b6a8",
                "d8939af9.079b08",
                "8c6ba281.1e73b"
            ]
        ]
    },
    {
        "id": "2c601c2.1535ce4",
        "type": "comment",
        "z": "a56a147b.9fd3a8",
        "name": "",
        "info": "This displays the status of sample simulation server \nrunning on localhost \n\nport 4840 \n\n",
        "x": 205,
        "y": 269,
        "wires": []
    },
    {
        "id": "c0e6c392.d3556",
        "type": "inject",
        "z": "a56a147b.9fd3a8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "ns=2;i=3",
        "payload": "Pressure",
        "payloadType": "str",
        "x": 169,
        "y": 571,
        "wires": [
            [
                "5aa4831f.20f92c"
            ]
        ]
    },
    {
        "id": "c23c4400.779298",
        "type": "split",
        "z": "a56a147b.9fd3a8",
        "name": "",
        "splt": ",",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 621,
        "y": 652,
        "wires": [
            [
                "78c884f4.ab3bec",
                "93a4699a.aa7c68",
                "8c6ba281.1e73b"
            ]
        ]
    },
    {
        "id": "78c884f4.ab3bec",
        "type": "debug",
        "z": "a56a147b.9fd3a8",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "x": 858,
        "y": 638,
        "wires": []
    },
    {
        "id": "22cb13a0.b18fec",
        "type": "function",
        "z": "a56a147b.9fd3a8",
        "name": "split temp value",
        "func": "var m = msg.payload[1];\nmsg.payload = m;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 659,
        "y": 83,
        "wires": [
            [
                "8628cc62.8e67a"
            ]
        ]
    },
    {
        "id": "8628cc62.8e67a",
        "type": "debug",
        "z": "a56a147b.9fd3a8",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 964,
        "y": 143,
        "wires": []
    },
    {
        "id": "d8939af9.079b08",
        "type": "ui_gauge",
        "z": "a56a147b.9fd3a8",
        "name": "",
        "group": "d96329a7.167f18",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperature",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 903,
        "y": 256,
        "wires": []
    },
    {
        "id": "93a4699a.aa7c68",
        "type": "ui_gauge",
        "z": "a56a147b.9fd3a8",
        "name": "",
        "group": "d96329a7.167f18",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Pressure",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 897,
        "y": 576,
        "wires": []
    },
    {
        "id": "8c6ba281.1e73b",
        "type": "join",
        "z": "a56a147b.9fd3a8",
        "name": "join opcua messages",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "4",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 960,
        "y": 525,
        "wires": [
            [
                "aecc95f8.cf07e8",
                "a973ea7e.1a4fa8"
            ]
        ]
    },
    {
        "id": "aecc95f8.cf07e8",
        "type": "debug",
        "z": "a56a147b.9fd3a8",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1218,
        "y": 191,
        "wires": []
    },
    {
        "id": "a973ea7e.1a4fa8",
        "type": "function",
        "z": "a56a147b.9fd3a8",
        "name": "convert opcua to influxdb",
        "func": "var v1 = Number(msg.payload[1]);\nvar v2 = Number(msg.payload[3]);\n\n//msg.payload={measurement:\"harshad\",temp:val1, rh:val2};\nmsg.payload={measurement:\"opcuapython\",temp:v1, rh:v2};\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1132,
        "y": 657,
        "wires": [
            [
                "8ff1dc21.b7e8f",
                "c9e8e93.8a60f18"
            ]
        ]
    },
    {
        "id": "8ff1dc21.b7e8f",
        "type": "debug",
        "z": "a56a147b.9fd3a8",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1340,
        "y": 568,
        "wires": []
    },
    {
        "id": "49ba4236.6963ec",
        "type": "influxdb out",
        "z": "c1db326d.9ec41",
        "influxdb": "c03af4ac.0fc338",
        "name": "mqtt",
        "measurement": "mqtt",
        "precision": "",
        "retentionPolicy": "",
        "x": 1219,
        "y": 369,
        "wires": []
    },
    {
        "id": "d0240f85.ed105",
        "type": "OPCUA-IIoT-Server-Command",
        "z": "d7cf2401.0b5398",
        "commandtype": "restart",
        "nodeId": "",
        "name": "restart",
        "x": 330,
        "y": 140,
        "wires": [
            [
                "5fb8071e.ed5a58",
                "54dd711b.c0afa"
            ]
        ]
    },
    {
        "id": "efd7f3d0.89df3",
        "type": "OPCUA-IIoT-Server-ASO",
        "z": "d7cf2401.0b5398",
        "nodeId": "s=TestFolder",
        "browsename": "TestFolder",
        "displayname": "Test Folder",
        "objecttype": "FolderType",
        "datatype": "Float",
        "value": "",
        "referenceNodeId": "ns=0;i=85",
        "referencetype": "Organizes",
        "name": "ASO Test Folder",
        "x": 340,
        "y": 200,
        "wires": [
            [
                "54dd711b.c0afa"
            ]
        ]
    },
    {
        "id": "e01bf9bf.f01858",
        "type": "comment",
        "z": "d7cf2401.0b5398",
        "name": "information",
        "info": "Clients to browse\n\nUA-Expert: https://www.unified-automation.com/products/development-tools/uaexpert.html\nOPCUA-Commander: https://github.com/node-opcua/opcua-commander\nNode-RED: use the browse examples to start browsing the server via Node-RED\n\nHappy wiring!\nKlaus Landsdorf\nhttp://bianco-royal.de/",
        "x": 717,
        "y": 92,
        "wires": []
    },
    {
        "id": "a7845f50.e9216",
        "type": "OPCUA-IIoT-Inject",
        "z": "d7cf2401.0b5398",
        "injectType": "inject",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "startDelay": "",
        "name": "",
        "addressSpaceItems": [],
        "x": 180,
        "y": 140,
        "wires": [
            [
                "d0240f85.ed105",
                "6efb696a.922e18"
            ]
        ]
    },
    {
        "id": "7ed38473.192f6c",
        "type": "OPCUA-IIoT-Inject",
        "z": "d7cf2401.0b5398",
        "injectType": "inject",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "startDelay": "",
        "name": "",
        "addressSpaceItems": [],
        "x": 160,
        "y": 200,
        "wires": [
            [
                "efd7f3d0.89df3"
            ]
        ]
    },
    {
        "id": "54dd711b.c0afa",
        "type": "OPCUA-IIoT-Server",
        "z": "d7cf2401.0b5398",
        "port": "55388",
        "endpoint": "",
        "acceptExternalCommands": true,
        "maxAllowedSessionNumber": "",
        "maxConnectionsPerEndpoint": "",
        "maxAllowedSubscriptionNumber": "",
        "alternateHostname": "",
        "name": "",
        "showStatusActivities": true,
        "showErrors": true,
        "asoDemo": true,
        "allowAnonymous": true,
        "individualCerts": false,
        "isAuditing": false,
        "serverDiscovery": true,
        "users": [],
        "xmlsets": [],
        "publicCertificateFile": "",
        "privateCertificateFile": "",
        "registerServerMethod": "2",
        "discoveryServerEndpointUrl": "",
        "capabilitiesForMDNS": "",
        "maxNodesPerRead": "",
        "maxNodesPerBrowse": "",
        "delayToClose": "",
        "x": 570,
        "y": 140,
        "wires": [
            [
                "8443975d.16aaa8"
            ]
        ]
    },
    {
        "id": "8443975d.16aaa8",
        "type": "debug",
        "z": "d7cf2401.0b5398",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 730,
        "y": 140,
        "wires": []
    },
    {
        "id": "5fb8071e.ed5a58",
        "type": "debug",
        "z": "d7cf2401.0b5398",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 510,
        "y": 100,
        "wires": []
    },
    {
        "id": "6efb696a.922e18",
        "type": "debug",
        "z": "d7cf2401.0b5398",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 330,
        "y": 100,
        "wires": []
    },
    {
        "id": "f35eb584.4827d8",
        "type": "OPCUA-IIoT-Server-Command",
        "z": "d7cf2401.0b5398",
        "commandtype": "deleteNode",
        "nodeId": "ns=1;s=TestFolder",
        "name": "delete Test Folder",
        "x": 350,
        "y": 240,
        "wires": [
            [
                "54dd711b.c0afa"
            ]
        ]
    },
    {
        "id": "52e5332.12540cc",
        "type": "OPCUA-IIoT-Inject",
        "z": "d7cf2401.0b5398",
        "injectType": "inject",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "startDelay": "",
        "name": "",
        "addressSpaceItems": [],
        "x": 160,
        "y": 240,
        "wires": [
            [
                "f35eb584.4827d8"
            ]
        ]
    },
    {
        "id": "4829e195.f2d37",
        "type": "inject",
        "z": "4eefdd8b.535664",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "ns=1;i=1002;datatype=Double",
        "payload": "OilTankLevel",
        "payloadType": "str",
        "x": 138,
        "y": 398,
        "wires": [
            [
                "8beca592.083a28"
            ]
        ]
    },
    {
        "id": "8beca592.083a28",
        "type": "OpcUa-Client",
        "z": "4eefdd8b.535664",
        "endpoint": "7b92dedd.5f228",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": "0",
        "time": "5",
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "name": "local opcua server",
        "x": 434,
        "y": 278,
        "wires": [
            [
                "dcb31d5b.f42d4",
                "2d66ef75.9f991",
                "b9246679.881a38"
            ]
        ]
    },
    {
        "id": "9b39331.715d2d",
        "type": "comment",
        "z": "4eefdd8b.535664",
        "name": "",
        "info": "This displays the status of sample simulation server \nrunning on localhost \n\nport 4840 \n\n",
        "x": 131,
        "y": 272,
        "wires": []
    },
    {
        "id": "4aff53a3.08673c",
        "type": "inject",
        "z": "4eefdd8b.535664",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "ns=1;i=1050;datatype=Double",
        "payload": "GasTankLevel",
        "payloadType": "str",
        "x": 125,
        "y": 544,
        "wires": [
            [
                "cb819b11.aacd28"
            ]
        ]
    },
    {
        "id": "dcb31d5b.f42d4",
        "type": "debug",
        "z": "4eefdd8b.535664",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 705,
        "y": 168,
        "wires": []
    },
    {
        "id": "2d66ef75.9f991",
        "type": "ui_gauge",
        "z": "4eefdd8b.535664",
        "name": "",
        "group": "d96329a7.167f18",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperature",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "1",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 829,
        "y": 259,
        "wires": []
    },
    {
        "id": "a8e254b2.c6da98",
        "type": "ui_gauge",
        "z": "4eefdd8b.535664",
        "name": "",
        "group": "d96329a7.167f18",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Pressure",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "1",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 823,
        "y": 579,
        "wires": []
    },
    {
        "id": "b9246679.881a38",
        "type": "join",
        "z": "4eefdd8b.535664",
        "name": "join opcua messages",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 817,
        "y": 405,
        "wires": [
            [
                "2f98f67d.8dfffa",
                "c11a82af.8b997"
            ]
        ]
    },
    {
        "id": "2f98f67d.8dfffa",
        "type": "debug",
        "z": "4eefdd8b.535664",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1148,
        "y": 177,
        "wires": []
    },
    {
        "id": "c11a82af.8b997",
        "type": "function",
        "z": "4eefdd8b.535664",
        "name": "convert opcua to influxdb",
        "func": "var v1 = msg.payload[0];\nvar v2 = msg.payload[1];\n\n//msg.payload={measurement:\"harshad\",temp:val1, rh:val2};\nmsg.payload={measurement:\"opcuanodejs\",t:v1, r:v2};\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1058,
        "y": 660,
        "wires": [
            [
                "e70ef14e.326b4",
                "971202a8.a3788"
            ]
        ]
    },
    {
        "id": "e70ef14e.326b4",
        "type": "debug",
        "z": "4eefdd8b.535664",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1266,
        "y": 571,
        "wires": []
    },
    {
        "id": "cb819b11.aacd28",
        "type": "OpcUa-Client",
        "z": "4eefdd8b.535664",
        "endpoint": "7b92dedd.5f228",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": "0",
        "time": "5",
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "name": "local opcua server",
        "x": 375,
        "y": 589,
        "wires": [
            [
                "b9246679.881a38",
                "a8e254b2.c6da98",
                "62df85ba.107bfc"
            ]
        ]
    },
    {
        "id": "62df85ba.107bfc",
        "type": "debug",
        "z": "4eefdd8b.535664",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 647,
        "y": 659,
        "wires": []
    },
    {
        "id": "6c76cf7a.92f92",
        "type": "OpcUa-Client",
        "z": "a56a147b.9fd3a8",
        "endpoint": "e7eea987.3fd158",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "name": "192.168.1.10  server_harry_opc.py",
        "x": 522.5,
        "y": 318,
        "wires": [
            [
                "22cb13a0.b18fec",
                "b6ad896.a19bd78"
            ]
        ]
    },
    {
        "id": "5aa4831f.20f92c",
        "type": "OpcUa-Client",
        "z": "a56a147b.9fd3a8",
        "endpoint": "e7eea987.3fd158",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "name": "192.168.1.10  server_harry_opc.py",
        "x": 469,
        "y": 564,
        "wires": [
            [
                "c23c4400.779298"
            ]
        ]
    },
    {
        "id": "23211c3e.55c014",
        "type": "OpcUa-Client",
        "z": "1af4f2ac.6d855d",
        "endpoint": "331b8ef7.204ea2",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "name": "",
        "x": 635.5,
        "y": 133,
        "wires": [
            [
                "3ff33197.80c20e"
            ]
        ]
    },
    {
        "id": "3df2433b.4b2dac",
        "type": "inject",
        "z": "1af4f2ac.6d855d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "ns=2;s=Painting.Oven.Pressure",
        "payload": "pressure",
        "payloadType": "str",
        "x": 336,
        "y": 146,
        "wires": [
            [
                "23211c3e.55c014"
            ]
        ]
    },
    {
        "id": "6e3d4148.2c993",
        "type": "inject",
        "z": "1af4f2ac.6d855d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "ns=2;s=Painting.Oven.Temperature",
        "payload": "Temperature",
        "payloadType": "str",
        "x": 359,
        "y": 191,
        "wires": [
            [
                "464b8d3b.0a7c74"
            ]
        ]
    },
    {
        "id": "d76c3ee7.1e18a",
        "type": "inject",
        "z": "1af4f2ac.6d855d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "ns=2;s=Painting.Sprayer.Sprayer1",
        "payload": "Sprayer1",
        "payloadType": "str",
        "x": 350,
        "y": 247,
        "wires": [
            [
                "fb5f1e8f.b2402"
            ]
        ]
    },
    {
        "id": "5457ff17.bcc7b",
        "type": "inject",
        "z": "1af4f2ac.6d855d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "ns=2;s=Painting.Sprayer.Sprayer2",
        "payload": "Sprayer2",
        "payloadType": "str",
        "x": 353,
        "y": 292,
        "wires": [
            [
                "f27ae455.08ab38"
            ]
        ]
    },
    {
        "id": "fc91022d.8c378",
        "type": "inject",
        "z": "1af4f2ac.6d855d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "ns=2;s=Painting.Sprayer.Sprayer3",
        "payload": "Sprayer3",
        "payloadType": "str",
        "x": 356,
        "y": 348,
        "wires": [
            [
                "88f6a304.1dc44"
            ]
        ]
    },
    {
        "id": "f4a22f6c.6f1e6",
        "type": "inject",
        "z": "1af4f2ac.6d855d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "ns=2;s=Painting.Tank.Tank1",
        "payload": "Tank1",
        "payloadType": "str",
        "x": 439,
        "y": 393,
        "wires": [
            [
                "a2aece2.4302b3"
            ]
        ]
    },
    {
        "id": "37c4f844.0696d8",
        "type": "inject",
        "z": "1af4f2ac.6d855d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "ns=2;s=Painting.Tank.Tank2",
        "payload": "Tank2",
        "payloadType": "str",
        "x": 433,
        "y": 446,
        "wires": [
            [
                "1b7e38e6.4c0127"
            ]
        ]
    },
    {
        "id": "52afae50.8df45",
        "type": "inject",
        "z": "1af4f2ac.6d855d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "ns=2;s=Painting.Tank.Tank3",
        "payload": "Tank3",
        "payloadType": "str",
        "x": 428,
        "y": 507,
        "wires": [
            [
                "76cc8054.9ac13"
            ]
        ]
    },
    {
        "id": "d05500d0.cdd53",
        "type": "debug",
        "z": "1af4f2ac.6d855d",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1231,
        "y": 52,
        "wires": []
    },
    {
        "id": "3ff33197.80c20e",
        "type": "join",
        "z": "1af4f2ac.6d855d",
        "name": "join opcua messages",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "8",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1170,
        "y": 181,
        "wires": [
            [
                "d05500d0.cdd53",
                "2c2d8350.dbd24c"
            ]
        ]
    },
    {
        "id": "464b8d3b.0a7c74",
        "type": "OpcUa-Client",
        "z": "1af4f2ac.6d855d",
        "endpoint": "331b8ef7.204ea2",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "name": "",
        "x": 633,
        "y": 182,
        "wires": [
            [
                "3ff33197.80c20e"
            ]
        ]
    },
    {
        "id": "fb5f1e8f.b2402",
        "type": "OpcUa-Client",
        "z": "1af4f2ac.6d855d",
        "endpoint": "331b8ef7.204ea2",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "name": "",
        "x": 625,
        "y": 240,
        "wires": [
            [
                "3ff33197.80c20e"
            ]
        ]
    },
    {
        "id": "f27ae455.08ab38",
        "type": "OpcUa-Client",
        "z": "1af4f2ac.6d855d",
        "endpoint": "331b8ef7.204ea2",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "name": "",
        "x": 622.5,
        "y": 289,
        "wires": [
            [
                "3ff33197.80c20e"
            ]
        ]
    },
    {
        "id": "88f6a304.1dc44",
        "type": "OpcUa-Client",
        "z": "1af4f2ac.6d855d",
        "endpoint": "331b8ef7.204ea2",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "name": "",
        "x": 696,
        "y": 343,
        "wires": [
            [
                "3ff33197.80c20e"
            ]
        ]
    },
    {
        "id": "a2aece2.4302b3",
        "type": "OpcUa-Client",
        "z": "1af4f2ac.6d855d",
        "endpoint": "331b8ef7.204ea2",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "name": "",
        "x": 693.5,
        "y": 392,
        "wires": [
            [
                "3ff33197.80c20e"
            ]
        ]
    },
    {
        "id": "1b7e38e6.4c0127",
        "type": "OpcUa-Client",
        "z": "1af4f2ac.6d855d",
        "endpoint": "331b8ef7.204ea2",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "name": "",
        "x": 699,
        "y": 446,
        "wires": [
            [
                "3ff33197.80c20e"
            ]
        ]
    },
    {
        "id": "76cc8054.9ac13",
        "type": "OpcUa-Client",
        "z": "1af4f2ac.6d855d",
        "endpoint": "331b8ef7.204ea2",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "name": "",
        "x": 696.5,
        "y": 495,
        "wires": [
            [
                "3ff33197.80c20e"
            ]
        ]
    },
    {
        "id": "2c2d8350.dbd24c",
        "type": "function",
        "z": "1af4f2ac.6d855d",
        "name": "convert opcua to influxdb",
        "func": "var v1 = msg.payload[0];\nvar v2 = msg.payload[1];\nvar v3 = msg.payload[2];\nvar v4 = msg.payload[3];\nvar v5 = msg.payload[4];\nvar v6 = msg.payload[5];\nvar v7 = msg.payload[6];\nvar v8 = msg.payload[7];\n\n\n\n//msg.payload={measurement:\"harshad\",temp:val1, rh:val2};\nmsg.payload={measurement:\"kepware\",pressure:v1, temp:v2, sprayer1:v3, sprayer2:v4, sprayer3:v5, tank1:v6, tank2:v7, tank3:v8}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1062,
        "y": 428,
        "wires": [
            [
                "5bcee5e3.62a29c"
            ]
        ]
    },
    {
        "id": "5bcee5e3.62a29c",
        "type": "influxdb out",
        "z": "1af4f2ac.6d855d",
        "influxdb": "b02e223a.8b7f6",
        "name": "kepware",
        "measurement": "kepware",
        "precision": "",
        "retentionPolicy": "",
        "x": 1286,
        "y": 488,
        "wires": []
    },
    {
        "id": "c9e8e93.8a60f18",
        "type": "influxdb out",
        "z": "a56a147b.9fd3a8",
        "influxdb": "1c89f4c8.33da7b",
        "name": "",
        "measurement": "opcuapython",
        "precision": "",
        "retentionPolicy": "",
        "x": 1384,
        "y": 709,
        "wires": []
    },
    {
        "id": "761bbf2b.3c61d",
        "type": "influxdb out",
        "z": "81de9994.36a3e8",
        "influxdb": "601516ee.4687a8",
        "name": "",
        "measurement": "harshad",
        "precision": "",
        "retentionPolicy": "",
        "x": 920,
        "y": 281,
        "wires": []
    },
    {
        "id": "971202a8.a3788",
        "type": "influxdb out",
        "z": "4eefdd8b.535664",
        "influxdb": "5aeba82e.85c5c8",
        "name": "opcualocal",
        "measurement": "opcuanodejs",
        "precision": "",
        "retentionPolicy": "",
        "x": 1306,
        "y": 721,
        "wires": []
    },
    {
        "id": "11d3f4dc.7ca91b",
        "type": "rbe",
        "z": "c1db326d.9ec41",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 921.5,
        "y": 262,
        "wires": [
            [
                "3f5eb145.bd30ae",
                "49ba4236.6963ec"
            ]
        ]
    },
    {
        "id": "3f5eb145.bd30ae",
        "type": "debug",
        "z": "c1db326d.9ec41",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1125,
        "y": 235,
        "wires": []
    },
    {
        "id": "55851cf1.cbc1b4",
        "type": "catch",
        "z": "4eefdd8b.535664",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 466,
        "y": 93,
        "wires": [
            [
                "1dbe6e1.ac3a592"
            ]
        ]
    },
    {
        "id": "1dbe6e1.ac3a592",
        "type": "debug",
        "z": "4eefdd8b.535664",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 731,
        "y": 76,
        "wires": []
    },
    {
        "id": "11d605f2.f2c8ba",
        "type": "inject",
        "z": "3affe5a7.6055aa",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[72,101,108,108,111,32,87,111,114,108,100]",
        "payloadType": "bin",
        "x": 205.5,
        "y": 162,
        "wires": [
            [
                "b96ae64a.31bd78"
            ]
        ]
    },
    {
        "id": "b96ae64a.31bd78",
        "type": "function",
        "z": "3affe5a7.6055aa",
        "name": "convert buffer to string",
        "func": "msg.payload=msg.payload.toString();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 500.5,
        "y": 162,
        "wires": [
            [
                "3307ca1b.ff4b26"
            ]
        ]
    },
    {
        "id": "3307ca1b.ff4b26",
        "type": "debug",
        "z": "3affe5a7.6055aa",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 689,
        "y": 173,
        "wires": []
    },
    {
        "id": "220a85ad.b0741a",
        "type": "inject",
        "z": "3affe5a7.6055aa",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[65,66]",
        "payloadType": "bin",
        "x": 203,
        "y": 220,
        "wires": [
            [
                "b96ae64a.31bd78"
            ]
        ]
    },
    {
        "id": "3ac8617a.52f4de",
        "type": "inject",
        "z": "3affe5a7.6055aa",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[67]",
        "payloadType": "bin",
        "x": 200,
        "y": 288,
        "wires": [
            [
                "b96ae64a.31bd78"
            ]
        ]
    },
    {
        "id": "9a086062.7e6fd",
        "type": "function",
        "z": "3affe5a7.6055aa",
        "name": "convert string to buffer",
        "func": "var buff = Buffer.from(msg.payload,\"hex\");\n\nmsg.payload = buff\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 456,
        "y": 413,
        "wires": [
            [
                "1cbd735a.1bf2dd",
                "68b9042a.4fdaec"
            ]
        ]
    },
    {
        "id": "2ddafe6b.3a3822",
        "type": "inject",
        "z": "3affe5a7.6055aa",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "565758",
        "payloadType": "str",
        "x": 197,
        "y": 483,
        "wires": [
            [
                "9a086062.7e6fd"
            ]
        ]
    },
    {
        "id": "1cbd735a.1bf2dd",
        "type": "debug",
        "z": "3affe5a7.6055aa",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 714,
        "y": 451,
        "wires": []
    },
    {
        "id": "68b9042a.4fdaec",
        "type": "function",
        "z": "3affe5a7.6055aa",
        "name": "convert buffer to string",
        "func": "msg.payload=msg.payload.toString(\"utf-8\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 749,
        "y": 378,
        "wires": [
            [
                "37f2964d.fbe51a"
            ]
        ]
    },
    {
        "id": "37f2964d.fbe51a",
        "type": "debug",
        "z": "3affe5a7.6055aa",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1008,
        "y": 392,
        "wires": []
    },
    {
        "id": "78d6b4e1.3ad22c",
        "type": "inject",
        "z": "3affe5a7.6055aa",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "50C0E54373C3B68",
        "payloadType": "str",
        "x": 226,
        "y": 563,
        "wires": [
            [
                "9a086062.7e6fd"
            ]
        ]
    },
    {
        "id": "26711eb.27e2ce2",
        "type": "inject",
        "z": "639ad303.73121c",
        "name": "Trigger",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 191,
        "y": 279,
        "wires": [
            [
                "edb0618a.0aeb"
            ]
        ]
    },
    {
        "id": "66d3bc8b.858d74",
        "type": "buffer-parser",
        "z": "639ad303.73121c",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "16bitbe",
                "name": "3 lots of 16 bits",
                "offset": "0",
                "length": "3",
                "offsetbit": "0",
                "mask": ""
            },
            {
                "type": "bool",
                "name": "32 bools offest by 8 bits",
                "offset": "0",
                "length": "32",
                "offsetbit": "8",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": true,
        "setTopic": true,
        "outputs": 1,
        "x": 531,
        "y": 279,
        "wires": [
            [
                "6e717416.1d64ec"
            ]
        ]
    },
    {
        "id": "6e717416.1d64ec",
        "type": "debug",
        "z": "639ad303.73121c",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 711,
        "y": 279,
        "wires": []
    },
    {
        "id": "473d4c9f.f7c344",
        "type": "comment",
        "z": "639ad303.73121c",
        "name": "Working with bits and bools",
        "info": "",
        "x": 231,
        "y": 239,
        "wires": []
    },
    {
        "id": "edb0618a.0aeb",
        "type": "function",
        "z": "639ad303.73121c",
        "name": "Array of WORDs",
        "func": "msg.payload = [\n    0xffff,\n    0x000f,\n    0x00f0,\n    0x0f00,\n    0xf000,\n    0x0000,\n    0x0001,\n    0x1111,\n    ]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 351,
        "y": 279,
        "wires": [
            [
                "66d3bc8b.858d74"
            ]
        ]
    },
    {
        "id": "1a742362.d841ed",
        "type": "inject",
        "z": "639ad303.73121c",
        "name": "a buffer",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]",
        "payloadType": "bin",
        "x": 191,
        "y": 1119,
        "wires": [
            [
                "2c185e7e.fe9a32",
                "ef757815.dc2ca8",
                "4e83191c.8e3ad8",
                "89d2a8fc.a35138",
                "b8c8402e.948cb"
            ]
        ]
    },
    {
        "id": "89d2a8fc.a35138",
        "type": "buffer-parser",
        "z": "639ad303.73121c",
        "name": "swap 16",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [],
        "swap1": "swap16",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "booboo.poopoo",
        "msgPropertyType": "",
        "resultType": "buffer",
        "resultTypeType": "return",
        "multipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 461,
        "y": 1039,
        "wires": [
            [
                "ce61c6bb.bfa7d8"
            ]
        ]
    },
    {
        "id": "ce61c6bb.bfa7d8",
        "type": "debug",
        "z": "639ad303.73121c",
        "name": "16",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 691,
        "y": 1039,
        "wires": []
    },
    {
        "id": "da858b3a.930798",
        "type": "debug",
        "z": "639ad303.73121c",
        "name": "32",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 691,
        "y": 1099,
        "wires": []
    },
    {
        "id": "c98885bb.0ffc68",
        "type": "debug",
        "z": "639ad303.73121c",
        "name": "64",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 691,
        "y": 1159,
        "wires": []
    },
    {
        "id": "2c185e7e.fe9a32",
        "type": "buffer-parser",
        "z": "639ad303.73121c",
        "name": "swap 32",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [],
        "swap1": "swap32",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "booboo.poopoo",
        "msgPropertyType": "",
        "resultType": "buffer",
        "resultTypeType": "return",
        "multipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 461,
        "y": 1099,
        "wires": [
            [
                "da858b3a.930798"
            ]
        ]
    },
    {
        "id": "ef757815.dc2ca8",
        "type": "buffer-parser",
        "z": "639ad303.73121c",
        "name": "swap 64",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [],
        "swap1": "swap64",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "booboo.poopoo",
        "msgPropertyType": "",
        "resultType": "buffer",
        "resultTypeType": "return",
        "multipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 461,
        "y": 1159,
        "wires": [
            [
                "c98885bb.0ffc68"
            ]
        ]
    },
    {
        "id": "4e83191c.8e3ad8",
        "type": "buffer-parser",
        "z": "639ad303.73121c",
        "name": "swap 64 32 16",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [],
        "swap1": "swap64",
        "swap2": "swap32",
        "swap3": "swap16",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "booboo.poopoo",
        "msgPropertyType": "",
        "resultType": "buffer",
        "resultTypeType": "output",
        "multipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 481,
        "y": 1219,
        "wires": [
            [
                "e16da481.55bd18"
            ]
        ]
    },
    {
        "id": "e16da481.55bd18",
        "type": "debug",
        "z": "639ad303.73121c",
        "name": "64 32 16",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 701,
        "y": 1219,
        "wires": []
    },
    {
        "id": "b8c8402e.948cb",
        "type": "buffer-parser",
        "z": "639ad303.73121c",
        "name": "none",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "booboo.poopoo",
        "msgPropertyType": "",
        "resultType": "buffer",
        "resultTypeType": "return",
        "multipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 451,
        "y": 979,
        "wires": [
            [
                "8917aba1.dbb038"
            ]
        ]
    },
    {
        "id": "8917aba1.dbb038",
        "type": "debug",
        "z": "639ad303.73121c",
        "name": "none",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 691,
        "y": 979,
        "wires": []
    },
    {
        "id": "bc985f1a.d2c05",
        "type": "inject",
        "z": "639ad303.73121c",
        "name": "an array",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[258,772,1286,1800,2314,2828,3342,3856]",
        "payloadType": "json",
        "x": 201,
        "y": 1059,
        "wires": [
            [
                "b8c8402e.948cb",
                "89d2a8fc.a35138",
                "2c185e7e.fe9a32",
                "ef757815.dc2ca8",
                "4e83191c.8e3ad8"
            ]
        ]
    },
    {
        "id": "5f877ed4.b1998",
        "type": "buffer-parser",
        "z": "639ad303.73121c",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "msg",
        "items": [],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "",
        "msgPropertyType": "",
        "resultType": "value",
        "resultTypeType": "output",
        "multipleResult": false,
        "setTopic": false,
        "outputs": 1,
        "x": 691,
        "y": 119,
        "wires": [
            [
                "905c96e6.f730c8"
            ]
        ]
    },
    {
        "id": "905c96e6.f730c8",
        "type": "debug",
        "z": "639ad303.73121c",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 711,
        "y": 179,
        "wires": []
    },
    {
        "id": "2f63b5c2.4110ba",
        "type": "inject",
        "z": "639ad303.73121c",
        "name": "Pass data in as buffer",
        "props": [
            {
                "p": "payload",
                "v": "[97,98,99,100,101,102,103,104,105,106,107,108,109,109,111,112,113,114,115,116,117,118,119,120,121,122]",
                "vt": "bin"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[97,98,99,100,101,102,103,104,105,106,107,108,109,109,111,112,113,114,115,116,117,118,119,120,121,122]",
        "payloadType": "bin",
        "x": 241,
        "y": 119,
        "wires": [
            [
                "63ea9724.c37198"
            ]
        ]
    },
    {
        "id": "8dfa5a65.fc5348",
        "type": "function",
        "z": "639ad303.73121c",
        "name": "dynamically set data",
        "func": "msg.payload = [0x6162, 0x6364, 0x6566, 0x6768, 0x696A, 0x6B6C, 0x6D6D, 0x6F70, 0x7172, 0x7374, 0x7576, 0x7778, 0x797A]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 401,
        "y": 179,
        "wires": [
            [
                "63ea9724.c37198"
            ]
        ]
    },
    {
        "id": "7c031bbd.b947c4",
        "type": "inject",
        "z": "639ad303.73121c",
        "name": "just a trigger",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 211,
        "y": 179,
        "wires": [
            [
                "8dfa5a65.fc5348"
            ]
        ]
    },
    {
        "id": "63ea9724.c37198",
        "type": "function",
        "z": "639ad303.73121c",
        "name": "dynamically set spec",
        "func": "msg.spec = {\n    \"options\":\n    {\n        \"byteSwap\":true,\n        \"resultType\":\"object\",\n        \"singleResult\": true\n    },\n    \"items\":[\n        {\"name\":\"myInt\",\"type\":\"int\",\"offset\":4},{\"name\":\"uint32s\",\"type\":\"uint32\",\"offset\":0,\"length\":4},{\"name\":\"floats\",\"type\":\"float\",\"offset\":0,\"length\":4},{\"name\":\"doubles\",\"type\":\"double\",\"offset\":0,\"length\":2},{\"name\":\"myString\",\"type\":\"string\",\"offset\":0,\"length\":5}\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 501,
        "y": 119,
        "wires": [
            [
                "5f877ed4.b1998"
            ]
        ]
    },
    {
        "id": "c6ab07b2.be5e78",
        "type": "buffer-parser",
        "z": "639ad303.73121c",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "string",
                "name": "plc1/production/alphabet",
                "offset": "0",
                "length": "26",
                "offsetbit": "0",
                "mask": ""
            },
            {
                "type": "uint8",
                "name": "plc1/production/status/count",
                "offset": "25",
                "length": "1",
                "offsetbit": "0",
                "mask": ""
            },
            {
                "type": "uint8",
                "name": "plc1/production/status/sequence",
                "offset": "4",
                "length": "1",
                "offsetbit": "0",
                "mask": ""
            },
            {
                "type": "int16le",
                "name": "plc1/machine/status/runner/temperature",
                "offset": "26",
                "length": "1",
                "offsetbit": "0",
                "mask": ""
            },
            {
                "type": "int16be",
                "name": "plc1/machine/status/runner/speed",
                "offset": "26",
                "length": "1",
                "offsetbit": "0",
                "mask": ""
            },
            {
                "type": "bool",
                "name": "plc1/machine/status/running",
                "offset": "0",
                "length": "1",
                "offsetbit": "0",
                "mask": ""
            },
            {
                "type": "bool",
                "name": "plc1/machine/status/warning",
                "offset": "0",
                "length": "1",
                "offsetbit": "1",
                "mask": ""
            },
            {
                "type": "bool",
                "name": "plc1/machine/status/fault",
                "offset": "0",
                "length": "1",
                "offsetbit": "2",
                "mask": ""
            }
        ],
        "swap1": "swap16",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "",
        "resultType": "value",
        "resultTypeType": "output",
        "multipleResult": true,
        "setTopic": true,
        "outputs": 1,
        "x": 471,
        "y": 379,
        "wires": [
            [
                "4cfb89d4.279c18"
            ]
        ]
    },
    {
        "id": "4cfb89d4.279c18",
        "type": "debug",
        "z": "639ad303.73121c",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 711,
        "y": 379,
        "wires": []
    },
    {
        "id": "66f063d9.da609c",
        "type": "buffer-parser",
        "z": "639ad303.73121c",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "string",
                "name": "alphabet",
                "offset": "0",
                "length": "26",
                "offsetbit": "0",
                "mask": ""
            },
            {
                "type": "byte",
                "name": "single byte pos 4",
                "offset": "4",
                "length": "1",
                "offsetbit": "0",
                "mask": ""
            },
            {
                "type": "bcdbe",
                "name": "3bcd",
                "offset": "4",
                "length": "5",
                "offsetbit": "0",
                "mask": "0x0FFF"
            },
            {
                "type": "int16le",
                "name": "Array[6] of int16le",
                "offset": "26",
                "length": "6",
                "offsetbit": "0",
                "mask": ""
            },
            {
                "type": "int16be",
                "name": "Array[6] of int16be",
                "offset": "26",
                "length": "6",
                "offsetbit": "0",
                "mask": ""
            },
            {
                "type": "bool",
                "name": "32 bools",
                "offset": "0",
                "length": "32",
                "offsetbit": "0",
                "mask": ""
            },
            {
                "type": "16bitbe",
                "name": "Array[4] of 16bits",
                "offset": "0",
                "length": "4",
                "offsetbit": "0",
                "mask": ""
            }
        ],
        "swap1": "swap16",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "data",
        "msgPropertyType": "",
        "resultType": "object",
        "resultTypeType": "output",
        "multipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 471,
        "y": 459,
        "wires": [
            [
                "f9d515a7.c40048"
            ]
        ]
    },
    {
        "id": "f9d515a7.c40048",
        "type": "debug",
        "z": "639ad303.73121c",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "data",
        "targetType": "msg",
        "statusVal": "data",
        "statusType": "auto",
        "x": 701,
        "y": 459,
        "wires": []
    },
    {
        "id": "77e16dd2.10c694",
        "type": "inject",
        "z": "639ad303.73121c",
        "name": "Fake PLC data 16bit Array",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[25185,25699,26213,26727,27241,27755,28013,28783,29297,29811,30325,30839,31353,256,512,768,1024,1280,1536,1792,2048,2304,2560,2816,3072,3597]",
        "payloadType": "json",
        "x": 251,
        "y": 379,
        "wires": [
            [
                "c6ab07b2.be5e78"
            ]
        ]
    },
    {
        "id": "88bd300d.8961c",
        "type": "inject",
        "z": "639ad303.73121c",
        "name": "Fake PLC data 16bit Array",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[25185,25699,26213,26727,27241,27755,28013,28783,29297,29811,30325,30839,31353,256,512,768,1024,1280,1536,1792,2048,2304,2560,2816,3072,3597]",
        "payloadType": "json",
        "x": 251,
        "y": 459,
        "wires": [
            [
                "66f063d9.da609c"
            ]
        ]
    },
    {
        "id": "7ceb8b07.f26714",
        "type": "comment",
        "z": "639ad303.73121c",
        "name": "take an array of 16bit values, byte reverse, split out several values and transmit individual messages with topic + payload",
        "info": "",
        "x": 521,
        "y": 339,
        "wires": []
    },
    {
        "id": "a5019fd.036166",
        "type": "comment",
        "z": "639ad303.73121c",
        "name": "take an array of 16bit values, byte reverse, split out several values and transmit one message with named objects in msg.data",
        "info": "",
        "x": 541,
        "y": 419,
        "wires": []
    },
    {
        "id": "75dc3207.595b0c",
        "type": "buffer-parser",
        "z": "639ad303.73121c",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "string",
                "name": "alphabet",
                "offset": "0",
                "length": "26",
                "offsetbit": "0",
                "mask": ""
            },
            {
                "type": "floatbe",
                "name": "float BE from byte4",
                "offset": "4",
                "length": "1",
                "offsetbit": "0",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "float LE from byte4",
                "offset": "4",
                "length": "1",
                "offsetbit": "0",
                "mask": ""
            },
            {
                "type": "bool",
                "name": "32 bools",
                "offset": "0",
                "length": "32",
                "offsetbit": "0",
                "mask": ""
            },
            {
                "type": "16bitbe",
                "name": "Array[4] of 16bits",
                "offset": "0",
                "length": "4",
                "offsetbit": "0",
                "mask": ""
            }
        ],
        "swap1": "swap16",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "",
        "resultType": "array",
        "resultTypeType": "output",
        "multipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 471,
        "y": 559,
        "wires": [
            [
                "c8af996e.7e6af8"
            ]
        ]
    },
    {
        "id": "c8af996e.7e6af8",
        "type": "debug",
        "z": "639ad303.73121c",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 711,
        "y": 559,
        "wires": []
    },
    {
        "id": "c796a8f6.032378",
        "type": "inject",
        "z": "639ad303.73121c",
        "name": "Fake PLC data  buffer",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[98,97,100,99,102,101,104,103,106,105,108,107,110,109,112,111,114,113,116,115,118,117,120,119,122,121]",
        "payloadType": "bin",
        "x": 241,
        "y": 559,
        "wires": [
            [
                "75dc3207.595b0c"
            ]
        ]
    },
    {
        "id": "69cbbece.7b463",
        "type": "comment",
        "z": "639ad303.73121c",
        "name": "take a buffer, byte reverse, split out several values and transmit one message as array of objects in msg.payload",
        "info": "",
        "x": 501,
        "y": 519,
        "wires": []
    },
    {
        "id": "ad876008.06bab",
        "type": "buffer-parser",
        "z": "639ad303.73121c",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "string",
                "name": "alphabet",
                "offset": "0",
                "length": "26",
                "offsetbit": "0",
                "mask": ""
            },
            {
                "type": "floatbe",
                "name": "float BE from byte4",
                "offset": "4",
                "length": "1",
                "offsetbit": "0",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "float LE from byte4",
                "offset": "4",
                "length": "1",
                "offsetbit": "0",
                "mask": ""
            },
            {
                "type": "bool",
                "name": "32 bools",
                "offset": "0",
                "length": "32",
                "offsetbit": "0",
                "mask": ""
            },
            {
                "type": "16bitbe",
                "name": "Array[4] of 16bits",
                "offset": "0",
                "length": "4",
                "offsetbit": "0",
                "mask": ""
            }
        ],
        "swap1": "swap16",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "result",
        "msgPropertyType": "",
        "resultType": "value",
        "resultTypeType": "output",
        "multipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 471,
        "y": 659,
        "wires": [
            [
                "b27248ec.cb7608"
            ]
        ]
    },
    {
        "id": "b27248ec.cb7608",
        "type": "debug",
        "z": "639ad303.73121c",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "result",
        "targetType": "msg",
        "statusVal": "result",
        "statusType": "auto",
        "x": 711,
        "y": 659,
        "wires": []
    },
    {
        "id": "27283472.92fe5c",
        "type": "inject",
        "z": "639ad303.73121c",
        "name": "Fake PLC data  buffer",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[98,97,100,99,102,101,104,103,106,105,108,107,110,109,112,111,114,113,116,115,118,117,120,119,122,121]",
        "payloadType": "bin",
        "x": 241,
        "y": 659,
        "wires": [
            [
                "ad876008.06bab"
            ]
        ]
    },
    {
        "id": "5fa6d996.9a3878",
        "type": "comment",
        "z": "639ad303.73121c",
        "name": "take a buffer, split out several values and transmit one message as values in  msg.result",
        "info": "",
        "x": 421,
        "y": 619,
        "wires": []
    },
    {
        "id": "d3ab5b56.776a68",
        "type": "comment",
        "z": "639ad303.73121c",
        "name": "Dynamically set data and spec",
        "info": "",
        "x": 241,
        "y": 79,
        "wires": []
    },
    {
        "id": "d1cbb6bb.bb18d8",
        "type": "inject",
        "z": "639ad303.73121c",
        "name": "an array",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[258,772,1286,1800,2314,2828,3342,3856]",
        "payloadType": "json",
        "x": 201,
        "y": 859,
        "wires": [
            [
                "710b18e7.66dcf8"
            ]
        ]
    },
    {
        "id": "710b18e7.66dcf8",
        "type": "buffer-parser",
        "z": "639ad303.73121c",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "",
        "resultType": "buffer",
        "resultTypeType": "output",
        "multipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 471,
        "y": 859,
        "wires": [
            [
                "30549321.f8856c"
            ]
        ]
    },
    {
        "id": "30549321.f8856c",
        "type": "debug",
        "z": "639ad303.73121c",
        "name": "buffer",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 691,
        "y": 859,
        "wires": []
    },
    {
        "id": "c10b3900.e81988",
        "type": "comment",
        "z": "639ad303.73121c",
        "name": "Convert [258,772,1286,1800,2314,2828,3342,3856] to a buffer only",
        "info": "",
        "x": 361,
        "y": 819,
        "wires": []
    },
    {
        "id": "4961e571.330dac",
        "type": "comment",
        "z": "639ad303.73121c",
        "name": "Convert an array or buffer to a buffer, do various swaps (sometimes multiple swaps), output only the buffer",
        "info": "",
        "x": 481,
        "y": 939,
        "wires": []
    },
    {
        "id": "d9ce94a3.6e4b48",
        "type": "inject",
        "z": "639ad303.73121c",
        "name": "an array",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[258,772,1286,1800,2314,2828,3342,3856]",
        "payloadType": "json",
        "x": 221,
        "y": 1359,
        "wires": [
            [
                "4fa8799d.115238"
            ]
        ]
    },
    {
        "id": "c5f8fcaa.e9913",
        "type": "debug",
        "z": "639ad303.73121c",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 711,
        "y": 1359,
        "wires": []
    },
    {
        "id": "4460b8b1.695c68",
        "type": "comment",
        "z": "639ad303.73121c",
        "name": "Dealing with BigInt. NOTE: At the time of writing, node-red debug node cannot handle BigInt.",
        "info": "",
        "x": 461,
        "y": 1319,
        "wires": []
    },
    {
        "id": "4fa8799d.115238",
        "type": "buffer-parser",
        "z": "639ad303.73121c",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "bigint64le",
                "name": "bigint64le",
                "offset": "0",
                "length": "1",
                "offsetbit": "0",
                "mask": ""
            },
            {
                "type": "bigint64be",
                "name": "bigint64be",
                "offset": "0",
                "length": "1",
                "offsetbit": "0",
                "mask": ""
            }
        ],
        "swap1": "swap16",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "bigValues",
        "msgPropertyType": "",
        "resultType": "object",
        "resultTypeType": "output",
        "multipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 371,
        "y": 1359,
        "wires": [
            [
                "73351ef2.887f3"
            ]
        ]
    },
    {
        "id": "73351ef2.887f3",
        "type": "function",
        "z": "639ad303.73121c",
        "name": "Parse BigInts",
        "func": "msg.payload = {\n    bigint64le_string : msg.bigValues.bigint64le.value.toString(),\n    bigint64le_number : Number(msg.bigValues.bigint64le.value),\n    bigint64le_parseInt : parseInt(msg.bigValues.bigint64le.value),\n    bigint64be_string : msg.bigValues.bigint64be.value.toString(),\n    bigint64be_number : Number(msg.bigValues.bigint64be.value),\n    bigint64be_parseInt : parseInt(msg.bigValues.bigint64be.value),\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 531,
        "y": 1359,
        "wires": [
            [
                "c5f8fcaa.e9913",
                "9c6726b.ac502d8"
            ]
        ]
    },
    {
        "id": "9c6726b.ac502d8",
        "type": "debug",
        "z": "639ad303.73121c",
        "name": "full object (this might throw error)",
        "active": false,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 641,
        "y": 1419,
        "wires": []
    },
    {
        "id": "17ab6f8.1253691",
        "type": "inject",
        "z": "639ad303.73121c",
        "name": "Fake PLC data 16bit Array",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "1234 4321 9999",
        "payload": "[4660,17185,39321]",
        "payloadType": "json",
        "x": 251,
        "y": 759,
        "wires": [
            [
                "65b14bbd.1e6b84"
            ]
        ]
    },
    {
        "id": "65b14bbd.1e6b84",
        "type": "buffer-parser",
        "z": "639ad303.73121c",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "bcdbe",
                "name": "bcdle",
                "offset": "0",
                "length": "3",
                "offsetbit": "2",
                "mask": ""
            },
            {
                "type": "bcdle",
                "name": "bcdbe",
                "offset": "0",
                "length": "3",
                "offsetbit": "0",
                "mask": ""
            },
            {
                "type": "bcdbe",
                "name": "3bcd",
                "offset": "0",
                "length": "3",
                "offsetbit": "0",
                "mask": "0x0FFF"
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "",
        "resultType": "value",
        "resultTypeType": "output",
        "multipleResult": true,
        "setTopic": true,
        "outputs": 1,
        "x": 471,
        "y": 759,
        "wires": [
            [
                "cd361b7.899f5e8"
            ]
        ]
    },
    {
        "id": "cd361b7.899f5e8",
        "type": "debug",
        "z": "639ad303.73121c",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 711,
        "y": 759,
        "wires": []
    },
    {
        "id": "af08eb8d.26e178",
        "type": "comment",
        "z": "639ad303.73121c",
        "name": "BCD values [4660,17185,39321] (0x1234 0x4321 0x9999) to decimal equivelant (1234 4321 9999)",
        "info": "",
        "x": 461,
        "y": 719,
        "wires": []
    },
    {
        "id": "a9efe6ed.76a7d8",
        "type": "function",
        "z": "c1db326d.9ec41",
        "name": "convert mqtt string to influxdb",
        "func": "var s1 = String(msg.payload[0]);\nvar s2 = String(msg.payload[1]);\n\n//msg.payload={measurement:\"harshad\",temp:val1, rh:val2};\nmsg.payload={measurement:\"mqttstring\",str1:s1, str2:s2};\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 672,
        "y": 513,
        "wires": [
            [
                "64716aaa.a2a944",
                "78b5a88d.0a6548"
            ]
        ]
    },
    {
        "id": "78b5a88d.0a6548",
        "type": "debug",
        "z": "c1db326d.9ec41",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 380,
        "wires": []
    },
    {
        "id": "64716aaa.a2a944",
        "type": "rbe",
        "z": "c1db326d.9ec41",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 903,
        "y": 437,
        "wires": [
            [
                "49ba4236.6963ec"
            ]
        ]
    },
    {
        "id": "e161c940.085a68",
        "type": "mqtt in",
        "z": "c1db326d.9ec41",
        "name": "",
        "topic": "influx/s1",
        "qos": "2",
        "datatype": "auto",
        "broker": "956a5b0d.ae9d08",
        "x": 173,
        "y": 527,
        "wires": [
            [
                "c46d3a2c.41fdf8"
            ]
        ]
    },
    {
        "id": "330fafb3.0cd83",
        "type": "mqtt in",
        "z": "c1db326d.9ec41",
        "name": "",
        "topic": "influx/s2",
        "qos": "2",
        "datatype": "auto",
        "broker": "956a5b0d.ae9d08",
        "x": 167,
        "y": 596,
        "wires": [
            [
                "c46d3a2c.41fdf8"
            ]
        ]
    },
    {
        "id": "c46d3a2c.41fdf8",
        "type": "join",
        "z": "c1db326d.9ec41",
        "name": "join mqtt messages",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 439,
        "y": 626,
        "wires": [
            [
                "a9efe6ed.76a7d8"
            ]
        ]
    },
    {
        "id": "f49e6478.d39548",
        "type": "comment",
        "z": "c31360ff.8939b",
        "name": "SDM120 Energy Meter",
        "info": "",
        "x": 172.5,
        "y": 68,
        "wires": []
    },
    {
        "id": "3779319.abcd3ce",
        "type": "modbus-read",
        "z": "c31360ff.8939b",
        "name": "SDM 120 Voltage",
        "topic": "",
        "showStatusActivities": true,
        "showErrors": true,
        "unitid": "1",
        "dataType": "InputRegister",
        "adr": "0",
        "quantity": "2",
        "rate": "5",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "393b7451.4a11cc",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "x": 144,
        "y": 161,
        "wires": [
            [
                "d86a605f.2f6f3",
                "f0be01a5.24ff1"
            ],
            []
        ]
    },
    {
        "id": "d86a605f.2f6f3",
        "type": "function",
        "z": "c31360ff.8939b",
        "name": "Voltage",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[1]; //low\nintView[1] = msg.payload[0]; //high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\nmsg.topic = \"voltage\";\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 373,
        "y": 154,
        "wires": [
            [
                "237126da.b4a2aa"
            ]
        ]
    },
    {
        "id": "1f1ce388.e3ddfc",
        "type": "modbus-queue-info",
        "z": "c31360ff.8939b",
        "name": "SDM120_queue",
        "topic": "",
        "unitid": "1",
        "queueReadIntervalTime": "1000",
        "lowLowLevel": "1",
        "lowLevel": 75,
        "highLevel": 150,
        "highHighLevel": 300,
        "server": "393b7451.4a11cc",
        "errorOnHighLevel": false,
        "x": 515.6428527832031,
        "y": 528.107177734375,
        "wires": [
            [
                "9baeafcf.33c85"
            ]
        ]
    },
    {
        "id": "6268774a.dac5c8",
        "type": "inject",
        "z": "c31360ff.8939b",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 84.64286804199219,
        "y": 568.1072082519531,
        "wires": [
            [
                "cc856e4.6d30a9"
            ]
        ]
    },
    {
        "id": "cc856e4.6d30a9",
        "type": "change",
        "z": "c31360ff.8939b",
        "name": "Reset queue",
        "rules": [
            {
                "t": "set",
                "p": "resetQueue",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 313.64286041259766,
        "y": 529.1071891784668,
        "wires": [
            [
                "1f1ce388.e3ddfc"
            ]
        ]
    },
    {
        "id": "e31d891b.982238",
        "type": "function",
        "z": "c31360ff.8939b",
        "name": "Current",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[1]; //low\nintView[1] = msg.payload[0]; //high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\nmsg.topic = \"current\";\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 372,
        "y": 212,
        "wires": [
            [
                "237126da.b4a2aa"
            ]
        ]
    },
    {
        "id": "981b30f0.05165",
        "type": "function",
        "z": "c31360ff.8939b",
        "name": "Power",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[1]; //low\nintView[1] = msg.payload[0]; //high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\nmsg.topic = \"power\";\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 363,
        "y": 265,
        "wires": [
            [
                "237126da.b4a2aa"
            ]
        ]
    },
    {
        "id": "fb367100.66b43",
        "type": "function",
        "z": "c31360ff.8939b",
        "name": "Frequency",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[1]; //low\nintView[1] = msg.payload[0]; //high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\nmsg.topic = \"frequency\";\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 431,
        "y": 317,
        "wires": [
            [
                "237126da.b4a2aa"
            ]
        ]
    },
    {
        "id": "6be48212.28001c",
        "type": "function",
        "z": "c31360ff.8939b",
        "name": "Energy",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[1]; //low\nintView[1] = msg.payload[0]; //high\n\nmsg.payload = parseFloat(fltView[0].toFixed(2));\nmsg.topic = \"energy\";\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 373,
        "y": 392,
        "wires": [
            [
                "237126da.b4a2aa"
            ]
        ]
    },
    {
        "id": "c9dff4b2.50bfa8",
        "type": "modbus-read",
        "z": "c31360ff.8939b",
        "name": "SDM 120 Current",
        "topic": "",
        "showStatusActivities": true,
        "showErrors": true,
        "unitid": "1",
        "dataType": "InputRegister",
        "adr": "6",
        "quantity": "2",
        "rate": "5",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "393b7451.4a11cc",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "x": 153,
        "y": 219,
        "wires": [
            [
                "e31d891b.982238"
            ],
            []
        ]
    },
    {
        "id": "61af4787.c710c8",
        "type": "modbus-read",
        "z": "c31360ff.8939b",
        "name": "SDM 120 Power",
        "topic": "",
        "showStatusActivities": true,
        "showErrors": true,
        "unitid": "1",
        "dataType": "InputRegister",
        "adr": "12",
        "quantity": "2",
        "rate": "5",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "393b7451.4a11cc",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "x": 143,
        "y": 271,
        "wires": [
            [
                "981b30f0.05165"
            ],
            []
        ]
    },
    {
        "id": "12532575.35319b",
        "type": "modbus-read",
        "z": "c31360ff.8939b",
        "name": "SDM 120 Frequency",
        "topic": "",
        "showStatusActivities": true,
        "showErrors": true,
        "unitid": "1",
        "dataType": "InputRegister",
        "adr": "70",
        "quantity": "2",
        "rate": "5",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "393b7451.4a11cc",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "x": 99,
        "y": 387,
        "wires": [
            [
                "fb367100.66b43",
                "11591234.58185e"
            ],
            []
        ]
    },
    {
        "id": "af861fb9.45034",
        "type": "modbus-read",
        "z": "c31360ff.8939b",
        "name": "SDM 120 Energy",
        "topic": "",
        "showStatusActivities": true,
        "showErrors": true,
        "unitid": "1",
        "dataType": "InputRegister",
        "adr": "342",
        "quantity": "2",
        "rate": "5",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "393b7451.4a11cc",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "x": 85,
        "y": 450,
        "wires": [
            [
                "6be48212.28001c",
                "ff775c11.c2c37"
            ],
            []
        ]
    },
    {
        "id": "dfb496ed.7f9bf8",
        "type": "function",
        "z": "c31360ff.8939b",
        "name": "reset on HighHigh",
        "func": "if(\"high high level reached\" === msg.state) {\n    msg.resetQueue = true;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 388.50000762939453,
        "y": 659.2500247955322,
        "wires": [
            [
                "1f1ce388.e3ddfc",
                "5845665b.ba16d8"
            ]
        ]
    },
    {
        "id": "bb708fff.0a804",
        "type": "catch",
        "z": "c31360ff.8939b",
        "name": "Catch queue errors",
        "scope": [
            "1f1ce388.e3ddfc"
        ],
        "x": 150.50000762939453,
        "y": 659.2500247955322,
        "wires": [
            [
                "dfb496ed.7f9bf8"
            ]
        ]
    },
    {
        "id": "cebcfd55.22ef1",
        "type": "comment",
        "z": "c31360ff.8939b",
        "name": "Error handling",
        "info": "",
        "x": 116.50000762939453,
        "y": 614.2500247955322,
        "wires": []
    },
    {
        "id": "5845665b.ba16d8",
        "type": "function",
        "z": "c31360ff.8939b",
        "name": "Diagnostic input message structure",
        "func": "// setting a global flag that the solar system is down\n\nmsg.payload = \"SDM120 modbus queue reached high level, resetting. (\" + msg.state + \")\";\nmsg.system = 4; // System id, use 1 for Dummy\n//msg.state = 1; // specify if the message is to change system status\nmsg.severity = 1; // 0: information, 1: warning, 2: error\nmsg.email = false; // if separate email should be sent\n//msg.emailtext = \"Clean up step of the SAIA log backup has failed\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 688.5000076293945,
        "y": 658.2500247955322,
        "wires": [
            [
                "75111dc8.5c8a24"
            ]
        ]
    },
    {
        "id": "75111dc8.5c8a24",
        "type": "link out",
        "z": "c31360ff.8939b",
        "name": "",
        "links": [
            "13e089a7.73cb46"
        ],
        "x": 874.5000076293945,
        "y": 658.2500247955322,
        "wires": []
    },
    {
        "id": "d1e067f9.963538",
        "type": "catch",
        "z": "c31360ff.8939b",
        "name": "Modbus read errors",
        "scope": [
            "c9dff4b2.50bfa8",
            "af861fb9.45034",
            "12532575.35319b",
            "61af4787.c710c8",
            "3779319.abcd3ce",
            "f49e6478.d39548"
        ],
        "x": 150.50000762939453,
        "y": 702.2500247955322,
        "wires": [
            [
                "10f1bf68.f03c71"
            ]
        ]
    },
    {
        "id": "10f1bf68.f03c71",
        "type": "function",
        "z": "c31360ff.8939b",
        "name": "Diagnostic input message structure",
        "func": "// setting a global flag that the solar system is down\n\nmsg.payload = \"SDM120 modbus error: \" + msg.error.message;\nmsg.system = 4; // System id, use 1 for Dummy\n//msg.state = 1; // specify if the message is to change system status\nmsg.severity = 1; // 0: information, 1: warning, 2: error\nmsg.email = false; // if separate email should be sent\n//msg.emailtext = \"Clean up step of the SAIA log backup has failed\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 439.50000762939453,
        "y": 702.2500247955322,
        "wires": [
            [
                "6c38955a.e621ec"
            ]
        ]
    },
    {
        "id": "6c38955a.e621ec",
        "type": "link out",
        "z": "c31360ff.8939b",
        "name": "",
        "links": [
            "13e089a7.73cb46"
        ],
        "x": 625.5000076293945,
        "y": 702.2500247955322,
        "wires": []
    },
    {
        "id": "9baeafcf.33c85",
        "type": "debug",
        "z": "c31360ff.8939b",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 696.5000076293945,
        "y": 527.2500247955322,
        "wires": []
    },
    {
        "id": "ff775c11.c2c37",
        "type": "function",
        "z": "c31360ff.8939b",
        "name": "Health check",
        "func": "var devicename = \"sdm120\"; // Device name used for context variable\nvar system_id = 4; // System id number for diagnostic update\nvar online_threshold = 10; // Seconds between updates under which the device is considered online\nvar offline_threshold = 30; // Seconds between updates above which the device is considered offline\n\nvar temp = context.get(devicename+\"_update\");\nvar current = new Date();\nmsg.payload = \"No data\";\nmsg.warning = false;\nif (msg.topic!==\"timecheck\") {\n    // Do not update the context if it is triggered by the check inject node\n    context.set(devicename+\"_update\",current);\n}\nif (temp===undefined) {\n    // this will be the case when node-red is booting up or redeployed\n    context.set(devicename+\"_update\",current);\n}\n\nif (temp!==undefined) {\n    current = current - temp;\n    current = Math.floor(current/1000);\n    var minute = Math.floor(current/60);\n    var hour = Math.floor(minute/60);\n    var day = Math.floor(hour/24);\n    if (current>24*60*60) {\n        msg.payload = \"Last update \" + day + \" days, \" + hour%24 + \" hours, \" + minute%60 + \" minutes, \" + current%60 + \" seconds ago\";\n    } else if (current>60*60) {\n        msg.payload = \"Last update \" + hour%24 + \" hours, \" + minute%60 + \" minutes, \" + current%60 + \" seconds ago\";\n    } else if (current>60) {\n        msg.payload = \"Last update \" + minute%60 + \" minutes, \" + current%60 + \" seconds ago\";\n    } else {\n        msg.payload = \"Last update \" + current%60 + \" seconds ago\";\n    }\n\n    if (context.get(devicename+\"_state\")!==1) {\n        if (current<online_threshold) {\n            msg.payload = \"SDM120 is now online\";\n            msg.system = system_id; // System id, use 1 for Dummy\n            msg.state = 1; // specify if the message is to change system status\n            msg.severity = 0; // 0: information, 1: warning, 2: error\n            //msg.email = true; // if separate email should be sent\n            //msg.emailtext = \"\"; this a long text which goes into the email  \n            msg.warning = true;\n            context.set(devicename+\"_state\",1);\n        }\n    } else {\n        if (current>offline_threshold) {\n            msg.payload = \"SDM120 is not transmitting\";\n            msg.system = system_id; // System id, use 1 for Dummy\n            msg.state = 99; // specify if the message is to change system status\n            msg.severity = 2; // 0: information, 1: warning, 2: error\n            //msg.email = true; // if separate email should be sent\n            //msg.emailtext = \"\"; this a long text which goes into the email            \n            msg.warning = true;\n            context.set(devicename+\"_state\",99);\n        }\n    }\n    \n    \n}\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.payload});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 397,
        "y": 446,
        "wires": [
            [
                "da67616a.2662a"
            ]
        ]
    },
    {
        "id": "90106fea.034c5",
        "type": "inject",
        "z": "c31360ff.8939b",
        "name": "Check",
        "repeat": "1",
        "crontab": "",
        "once": false,
        "topic": "timecheck",
        "payload": "",
        "payloadType": "date",
        "x": 70,
        "y": 519,
        "wires": [
            [
                "ff775c11.c2c37"
            ]
        ]
    },
    {
        "id": "da67616a.2662a",
        "type": "switch",
        "z": "c31360ff.8939b",
        "name": "Update diag?",
        "property": "warning",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 592,
        "y": 446,
        "wires": [
            [
                "f853af64.50b62"
            ]
        ]
    },
    {
        "id": "f853af64.50b62",
        "type": "link out",
        "z": "c31360ff.8939b",
        "name": "",
        "links": [
            "13e089a7.73cb46"
        ],
        "x": 711.3015727996826,
        "y": 445.57140350341797,
        "wires": []
    },
    {
        "id": "f0be01a5.24ff1",
        "type": "debug",
        "z": "c31360ff.8939b",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 374,
        "y": 72,
        "wires": []
    },
    {
        "id": "11591234.58185e",
        "type": "debug",
        "z": "c31360ff.8939b",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 183.5,
        "y": 321,
        "wires": []
    },
    {
        "id": "237126da.b4a2aa",
        "type": "join",
        "z": "c31360ff.8939b",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "5",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 723,
        "y": 83,
        "wires": [
            [
                "69bcea0a.4e4c04",
                "d5cf05a4.4b3138"
            ]
        ]
    },
    {
        "id": "69bcea0a.4e4c04",
        "type": "debug",
        "z": "c31360ff.8939b",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 951,
        "y": 26,
        "wires": []
    },
    {
        "id": "d5cf05a4.4b3138",
        "type": "function",
        "z": "c31360ff.8939b",
        "name": "convert modbus to influxdb",
        "func": "var v1 = msg.payload[0];\nvar v2 = msg.payload[1];\nvar v3 = msg.payload[2];\nvar v4 = msg.payload[3];\nvar v5 = msg.payload[4];\nvar v6 = msg.payload[5];\n\n\nmsg.payload={measurement:\"energymeter\",voltage:v1, current:v2, power:v3, frequency:v4, energy:v5}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 914,
        "y": 173,
        "wires": [
            [
                "ba7084e.d1a4c78"
            ]
        ]
    },
    {
        "id": "ba7084e.d1a4c78",
        "type": "influxdb out",
        "z": "c31360ff.8939b",
        "influxdb": "20a9d50a.e32c0a",
        "name": "SDM energymeter",
        "measurement": "energymeter",
        "precision": "",
        "retentionPolicy": "",
        "x": 1229,
        "y": 186,
        "wires": []
    }
]