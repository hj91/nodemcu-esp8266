[
    {
        "id": "5e739a16.53ab04",
        "type": "comment",
        "z": "db628a05.d1f7c8",
        "name": "SDM120 Energy Meter",
        "info": "",
        "x": 233,
        "y": 35,
        "wires": []
    },
    {
        "id": "14b34311.b0b31d",
        "type": "modbus-read",
        "z": "db628a05.d1f7c8",
        "name": "SDM 120 Voltage",
        "topic": "",
        "showStatusActivities": true,
        "showErrors": true,
        "unitid": "1",
        "dataType": "InputRegister",
        "adr": "0",
        "quantity": "2",
        "rate": "5",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "b69d19ed.84d768",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "x": 204.5,
        "y": 128,
        "wires": [
            [
                "aea03a11.2be618",
                "6576a385.307c2c"
            ],
            []
        ]
    },
    {
        "id": "aea03a11.2be618",
        "type": "function",
        "z": "db628a05.d1f7c8",
        "name": "Voltage",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[1]; //low\nintView[1] = msg.payload[0]; //high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\nmsg.topic = \"voltage\";\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 433.5,
        "y": 121,
        "wires": [
            [
                "861462f6.4bcc9",
                "bc588428.e31db8",
                "765c7c60.aeba14"
            ]
        ]
    },
    {
        "id": "42f4ea52.932414",
        "type": "modbus-queue-info",
        "z": "db628a05.d1f7c8",
        "name": "SDM120_queue",
        "topic": "",
        "unitid": "1",
        "lowLowLevel": "1",
        "lowLevel": 75,
        "highLevel": 150,
        "highHighLevel": 300,
        "server": "b69d19ed.84d768",
        "errorOnHighLevel": false,
        "x": 576.1428527832031,
        "y": 495.107177734375,
        "wires": [
            [
                "e97ba6af.f1cd78"
            ]
        ]
    },
    {
        "id": "11f27516.37799b",
        "type": "inject",
        "z": "db628a05.d1f7c8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 145.1428680419922,
        "y": 535.1072082519531,
        "wires": [
            [
                "abd2f1cf.d03a"
            ]
        ]
    },
    {
        "id": "abd2f1cf.d03a",
        "type": "change",
        "z": "db628a05.d1f7c8",
        "name": "Reset queue",
        "rules": [
            {
                "t": "set",
                "p": "resetQueue",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 374.14286041259766,
        "y": 496.1071891784668,
        "wires": [
            [
                "42f4ea52.932414"
            ]
        ]
    },
    {
        "id": "cb8a425c.9493c",
        "type": "function",
        "z": "db628a05.d1f7c8",
        "name": "Current",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[1]; //low\nintView[1] = msg.payload[0]; //high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\nmsg.topic = \"current\";\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 432.5,
        "y": 179,
        "wires": [
            [
                "22df9f7a.8e2ec",
                "bc588428.e31db8"
            ]
        ]
    },
    {
        "id": "cd3aef4b.4e9d1",
        "type": "function",
        "z": "db628a05.d1f7c8",
        "name": "Power",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[1]; //low\nintView[1] = msg.payload[0]; //high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\nmsg.topic = \"power\";\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 423.5,
        "y": 232,
        "wires": [
            [
                "691e0278.e77eac",
                "bc588428.e31db8"
            ]
        ]
    },
    {
        "id": "e2e1b3b9.85ad6",
        "type": "function",
        "z": "db628a05.d1f7c8",
        "name": "Frequency",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[1]; //low\nintView[1] = msg.payload[0]; //high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\nmsg.topic = \"frequency\";\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 491.5,
        "y": 284,
        "wires": [
            [
                "f2bdf990.2c99a8",
                "bc588428.e31db8"
            ]
        ]
    },
    {
        "id": "b29ee348.93d28",
        "type": "function",
        "z": "db628a05.d1f7c8",
        "name": "Energy",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[1]; //low\nintView[1] = msg.payload[0]; //high\n\nmsg.payload = parseFloat(fltView[0].toFixed(2));\nmsg.topic = \"energy\";\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 433.5,
        "y": 359,
        "wires": [
            [
                "b8f5e7d4.579e98",
                "bc588428.e31db8"
            ]
        ]
    },
    {
        "id": "80d06a5b.633a08",
        "type": "modbus-read",
        "z": "db628a05.d1f7c8",
        "name": "SDM 120 Current",
        "topic": "",
        "showStatusActivities": true,
        "showErrors": true,
        "unitid": "1",
        "dataType": "InputRegister",
        "adr": "6",
        "quantity": "2",
        "rate": "5",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "b69d19ed.84d768",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "x": 213.5,
        "y": 186,
        "wires": [
            [
                "cb8a425c.9493c"
            ],
            []
        ]
    },
    {
        "id": "5b5908e6.5ba008",
        "type": "modbus-read",
        "z": "db628a05.d1f7c8",
        "name": "SDM 120 Power",
        "topic": "",
        "showStatusActivities": true,
        "showErrors": true,
        "unitid": "1",
        "dataType": "InputRegister",
        "adr": "12",
        "quantity": "2",
        "rate": "5",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "b69d19ed.84d768",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "x": 203.5,
        "y": 238,
        "wires": [
            [
                "cd3aef4b.4e9d1"
            ],
            []
        ]
    },
    {
        "id": "9a746885.d62e38",
        "type": "modbus-read",
        "z": "db628a05.d1f7c8",
        "name": "SDM 120 Frequency",
        "topic": "",
        "showStatusActivities": true,
        "showErrors": true,
        "unitid": "1",
        "dataType": "InputRegister",
        "adr": "70",
        "quantity": "2",
        "rate": "5",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "b69d19ed.84d768",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "x": 159.5,
        "y": 354,
        "wires": [
            [
                "e2e1b3b9.85ad6",
                "ab7b5259.eaf75"
            ],
            []
        ]
    },
    {
        "id": "a9887cb0.05d2a",
        "type": "modbus-read",
        "z": "db628a05.d1f7c8",
        "name": "SDM 120 Energy",
        "topic": "",
        "showStatusActivities": true,
        "showErrors": true,
        "unitid": "1",
        "dataType": "InputRegister",
        "adr": "342",
        "quantity": "2",
        "rate": "5",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "b69d19ed.84d768",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "x": 145.5,
        "y": 417,
        "wires": [
            [
                "b29ee348.93d28",
                "28df2d3d.a34332"
            ],
            []
        ]
    },
    {
        "id": "861462f6.4bcc9",
        "type": "ui_text",
        "z": "db628a05.d1f7c8",
        "group": "73a59683.b18c78",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Voltage",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "x": 751.5,
        "y": 89,
        "wires": []
    },
    {
        "id": "22df9f7a.8e2ec",
        "type": "ui_text",
        "z": "db628a05.d1f7c8",
        "group": "73a59683.b18c78",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Current",
        "format": "{{msg.payload}} A",
        "layout": "row-spread",
        "x": 620.5,
        "y": 178,
        "wires": []
    },
    {
        "id": "691e0278.e77eac",
        "type": "ui_text",
        "z": "db628a05.d1f7c8",
        "group": "73a59683.b18c78",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Power",
        "format": "{{msg.payload}} W",
        "layout": "row-spread",
        "x": 616.5,
        "y": 233,
        "wires": []
    },
    {
        "id": "f2bdf990.2c99a8",
        "type": "ui_text",
        "z": "db628a05.d1f7c8",
        "group": "73a59683.b18c78",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Frequency",
        "format": "{{msg.payload}} Hz",
        "layout": "row-spread",
        "x": 747.5,
        "y": 306,
        "wires": []
    },
    {
        "id": "b8f5e7d4.579e98",
        "type": "ui_text",
        "z": "db628a05.d1f7c8",
        "group": "73a59683.b18c78",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Total Energy",
        "format": "{{msg.payload}} kWh",
        "layout": "row-spread",
        "x": 683.5,
        "y": 358,
        "wires": []
    },
    {
        "id": "bc588428.e31db8",
        "type": "function",
        "z": "db628a05.d1f7c8",
        "name": "Build object",
        "func": "watch_topic = \"energy\";\nvar output = {};\n\ncontext.set(msg.topic,msg.payload);\n\nif (context.get(\"voltage\")!==undefined) {\n    output.voltage = context.get(\"voltage\");\n}\nif (context.get(\"current\")!==undefined) {\n    output.current = context.get(\"current\");\n}\nif (context.get(\"power\")!==undefined) {\n    output.power = context.get(\"power\");\n}\nif (context.get(\"frequency\")!==undefined) {\n    output.frequency = context.get(\"frequency\");\n}\nif (context.get(\"energy\")!==undefined) {\n    output.energy = context.get(\"energy\");\n}\nmsg.payload = output;\n\nif (msg.topic===watch_topic) {\n    msg.topic = \"sdm120\";\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 831.5,
        "y": 196,
        "wires": [
            [
                "c2c4c180.e0cc7",
                "17f3b80a.3d6238"
            ]
        ]
    },
    {
        "id": "c2c4c180.e0cc7",
        "type": "debug",
        "z": "db628a05.d1f7c8",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 1039.5,
        "y": 251,
        "wires": []
    },
    {
        "id": "fd66bdea.fc425",
        "type": "function",
        "z": "db628a05.d1f7c8",
        "name": "Diagnostic input message structure",
        "func": "// setting a global flag that the solar system is down\n\nmsg.payload = \"High voltage warning: \" + msg.payload.voltage +\" V\";\nmsg.system = 1; // System id, use 1 for Dummy\n//msg.state = 1; // specify if the message is to change system status\nmsg.severity = 1; // 0: information, 1: warning, 2: error\nmsg.email = false; // if separate email should be sent\n//msg.emailtext = \"Clean up step of the SAIA log backup has failed\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1524.5,
        "y": 94,
        "wires": [
            [
                "7aca437d.15f1dc"
            ]
        ]
    },
    {
        "id": "7aca437d.15f1dc",
        "type": "link out",
        "z": "db628a05.d1f7c8",
        "name": "",
        "links": [
            "13e089a7.73cb46"
        ],
        "x": 1731.5,
        "y": 116,
        "wires": []
    },
    {
        "id": "2b8e649c.24144c",
        "type": "switch",
        "z": "db628a05.d1f7c8",
        "name": "Voltage check",
        "property": "payload.voltage_check",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "high",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "low",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1232.5,
        "y": 118,
        "wires": [
            [
                "fd66bdea.fc425"
            ],
            [
                "4429b61e.f0c848"
            ]
        ]
    },
    {
        "id": "4429b61e.f0c848",
        "type": "function",
        "z": "db628a05.d1f7c8",
        "name": "Diagnostic input message structure",
        "func": "// setting a global flag that the solar system is down\n\nmsg.payload = \"Low voltage warning: \" + msg.payload.voltage +\" V\";\nmsg.system = 1; // System id, use 1 for Dummy\n//msg.state = 1; // specify if the message is to change system status\nmsg.severity = 1; // 0: information, 1: warning, 2: error\nmsg.email = false; // if separate email should be sent\n//msg.emailtext = \"Clean up step of the SAIA log backup has failed\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1524.5,
        "y": 139,
        "wires": [
            [
                "7aca437d.15f1dc"
            ]
        ]
    },
    {
        "id": "17f3b80a.3d6238",
        "type": "function",
        "z": "db628a05.d1f7c8",
        "name": "Voltage check",
        "func": "var high = 250.0;\nvar low = 220.0;\n\nif (msg.payload.voltage > high) {\n    msg.payload.voltage_check = \"high\";\n}\nif (msg.payload.voltage < low) {\n    msg.payload.voltage_check = \"low\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1019.5,
        "y": 119,
        "wires": [
            [
                "2b8e649c.24144c"
            ]
        ]
    },
    {
        "id": "6fca5538.59f7dc",
        "type": "function",
        "z": "db628a05.d1f7c8",
        "name": "reset on HighHigh",
        "func": "if(\"high high level reached\" === msg.state) {\n    msg.resetQueue = true;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 449.00000762939453,
        "y": 626.2500247955322,
        "wires": [
            [
                "42f4ea52.932414",
                "a62acc7a.b8995"
            ]
        ]
    },
    {
        "id": "644785fa.8800bc",
        "type": "catch",
        "z": "db628a05.d1f7c8",
        "name": "Catch queue errors",
        "scope": [
            "42f4ea52.932414"
        ],
        "x": 211.00000762939453,
        "y": 626.2500247955322,
        "wires": [
            [
                "6fca5538.59f7dc"
            ]
        ]
    },
    {
        "id": "c51ab3e1.d30f7",
        "type": "comment",
        "z": "db628a05.d1f7c8",
        "name": "Error handling",
        "info": "",
        "x": 177.00000762939453,
        "y": 581.2500247955322,
        "wires": []
    },
    {
        "id": "a62acc7a.b8995",
        "type": "function",
        "z": "db628a05.d1f7c8",
        "name": "Diagnostic input message structure",
        "func": "// setting a global flag that the solar system is down\n\nmsg.payload = \"SDM120 modbus queue reached high level, resetting. (\" + msg.state + \")\";\nmsg.system = 4; // System id, use 1 for Dummy\n//msg.state = 1; // specify if the message is to change system status\nmsg.severity = 1; // 0: information, 1: warning, 2: error\nmsg.email = false; // if separate email should be sent\n//msg.emailtext = \"Clean up step of the SAIA log backup has failed\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 749.0000076293945,
        "y": 625.2500247955322,
        "wires": [
            [
                "a9f1233.3f840e"
            ]
        ]
    },
    {
        "id": "a9f1233.3f840e",
        "type": "link out",
        "z": "db628a05.d1f7c8",
        "name": "",
        "links": [
            "13e089a7.73cb46"
        ],
        "x": 935.0000076293945,
        "y": 625.2500247955322,
        "wires": []
    },
    {
        "id": "4c0dc246.26b14c",
        "type": "catch",
        "z": "db628a05.d1f7c8",
        "name": "Modbus read errors",
        "scope": [
            "80d06a5b.633a08",
            "a9887cb0.05d2a",
            "9a746885.d62e38",
            "5b5908e6.5ba008",
            "14b34311.b0b31d",
            "5e739a16.53ab04"
        ],
        "x": 211.00000762939453,
        "y": 669.2500247955322,
        "wires": [
            [
                "5ff0c6bb.8c7d78"
            ]
        ]
    },
    {
        "id": "5ff0c6bb.8c7d78",
        "type": "function",
        "z": "db628a05.d1f7c8",
        "name": "Diagnostic input message structure",
        "func": "// setting a global flag that the solar system is down\n\nmsg.payload = \"SDM120 modbus error: \" + msg.error.message;\nmsg.system = 4; // System id, use 1 for Dummy\n//msg.state = 1; // specify if the message is to change system status\nmsg.severity = 1; // 0: information, 1: warning, 2: error\nmsg.email = false; // if separate email should be sent\n//msg.emailtext = \"Clean up step of the SAIA log backup has failed\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 500.00000762939453,
        "y": 669.2500247955322,
        "wires": [
            [
                "deb64865.6ce128"
            ]
        ]
    },
    {
        "id": "deb64865.6ce128",
        "type": "link out",
        "z": "db628a05.d1f7c8",
        "name": "",
        "links": [
            "13e089a7.73cb46"
        ],
        "x": 686.0000076293945,
        "y": 669.2500247955322,
        "wires": []
    },
    {
        "id": "e97ba6af.f1cd78",
        "type": "debug",
        "z": "db628a05.d1f7c8",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 757.0000076293945,
        "y": 494.2500247955322,
        "wires": []
    },
    {
        "id": "28df2d3d.a34332",
        "type": "function",
        "z": "db628a05.d1f7c8",
        "name": "Health check",
        "func": "var devicename = \"sdm120\"; // Device name used for context variable\nvar system_id = 4; // System id number for diagnostic update\nvar online_threshold = 10; // Seconds between updates under which the device is considered online\nvar offline_threshold = 30; // Seconds between updates above which the device is considered offline\n\nvar temp = context.get(devicename+\"_update\");\nvar current = new Date();\nmsg.payload = \"No data\";\nmsg.warning = false;\nif (msg.topic!==\"timecheck\") {\n    // Do not update the context if it is triggered by the check inject node\n    context.set(devicename+\"_update\",current);\n}\nif (temp===undefined) {\n    // this will be the case when node-red is booting up or redeployed\n    context.set(devicename+\"_update\",current);\n}\n\nif (temp!==undefined) {\n    current = current - temp;\n    current = Math.floor(current/1000);\n    var minute = Math.floor(current/60);\n    var hour = Math.floor(minute/60);\n    var day = Math.floor(hour/24);\n    if (current>24*60*60) {\n        msg.payload = \"Last update \" + day + \" days, \" + hour%24 + \" hours, \" + minute%60 + \" minutes, \" + current%60 + \" seconds ago\";\n    } else if (current>60*60) {\n        msg.payload = \"Last update \" + hour%24 + \" hours, \" + minute%60 + \" minutes, \" + current%60 + \" seconds ago\";\n    } else if (current>60) {\n        msg.payload = \"Last update \" + minute%60 + \" minutes, \" + current%60 + \" seconds ago\";\n    } else {\n        msg.payload = \"Last update \" + current%60 + \" seconds ago\";\n    }\n\n    if (context.get(devicename+\"_state\")!==1) {\n        if (current<online_threshold) {\n            msg.payload = \"SDM120 is now online\";\n            msg.system = system_id; // System id, use 1 for Dummy\n            msg.state = 1; // specify if the message is to change system status\n            msg.severity = 0; // 0: information, 1: warning, 2: error\n            //msg.email = true; // if separate email should be sent\n            //msg.emailtext = \"\"; this a long text which goes into the email  \n            msg.warning = true;\n            context.set(devicename+\"_state\",1);\n        }\n    } else {\n        if (current>offline_threshold) {\n            msg.payload = \"SDM120 is not transmitting\";\n            msg.system = system_id; // System id, use 1 for Dummy\n            msg.state = 99; // specify if the message is to change system status\n            msg.severity = 2; // 0: information, 1: warning, 2: error\n            //msg.email = true; // if separate email should be sent\n            //msg.emailtext = \"\"; this a long text which goes into the email            \n            msg.warning = true;\n            context.set(devicename+\"_state\",99);\n        }\n    }\n    \n    \n}\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.payload});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 457.5,
        "y": 413,
        "wires": [
            [
                "3c31587b.3c1cc8"
            ]
        ]
    },
    {
        "id": "28459dc7.d2b212",
        "type": "inject",
        "z": "db628a05.d1f7c8",
        "name": "Check",
        "topic": "timecheck",
        "payload": "",
        "payloadType": "date",
        "repeat": "1",
        "crontab": "",
        "once": false,
        "x": 130.5,
        "y": 486,
        "wires": [
            [
                "28df2d3d.a34332"
            ]
        ]
    },
    {
        "id": "3c31587b.3c1cc8",
        "type": "switch",
        "z": "db628a05.d1f7c8",
        "name": "Update diag?",
        "property": "warning",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 652.5,
        "y": 413,
        "wires": [
            [
                "e67b7d61.e55c9"
            ]
        ]
    },
    {
        "id": "e67b7d61.e55c9",
        "type": "link out",
        "z": "db628a05.d1f7c8",
        "name": "",
        "links": [
            "13e089a7.73cb46"
        ],
        "x": 771.8015727996826,
        "y": 412.57140350341797,
        "wires": []
    },
    {
        "id": "6576a385.307c2c",
        "type": "debug",
        "z": "db628a05.d1f7c8",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 434.5,
        "y": 39,
        "wires": []
    },
    {
        "id": "ab7b5259.eaf75",
        "type": "debug",
        "z": "db628a05.d1f7c8",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 244,
        "y": 288,
        "wires": []
    },
    {
        "id": "765c7c60.aeba14",
        "type": "mqtt out",
        "z": "db628a05.d1f7c8",
        "name": "Voltage",
        "topic": "modbus/voltage",
        "qos": "",
        "retain": "",
        "broker": "4a8aded8.bdc67",
        "x": 631.5,
        "y": 47,
        "wires": []
    },
    {
        "id": "b69d19ed.84d768",
        "type": "modbus-client",
        "z": "",
        "name": "Serial_2400_8_N_1",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": true,
        "tcpHost": "10.10.100.254",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB0",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": "",
        "commandDelay": 30,
        "clientTimeout": 2000,
        "reconnectTimeout": 5000
    },
    {
        "id": "73a59683.b18c78",
        "type": "ui_group",
        "z": "",
        "name": "SDM120 Energy Meter",
        "tab": "c7dc3fc4.d10fe",
        "order": 2,
        "disp": true,
        "width": "6"
    },
    {
        "id": "4a8aded8.bdc67",
        "type": "mqtt-broker",
        "z": "",
        "name": "raspberrypi",
        "broker": "192.168.1.50",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "c7dc3fc4.d10fe",
        "type": "ui_tab",
        "z": "",
        "name": "Modbus",
        "icon": "memory",
        "order": 15
    }
]
